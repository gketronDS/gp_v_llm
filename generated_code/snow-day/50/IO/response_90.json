{"submission": "```python\ndef my_func(input1:int, input2:float, input3:float, input4:float):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             an integer in [0, 20],a float in [0.0, 20.0],a float in [0.0, 10.0],a float in [0.0, 1.0]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(6,3.948200268642865,2.7486633971502137,0.8119176842789945) == 3.385421550171972\nmy_func(12,5.22462816821931,5.66087598439092,0.0373545110244585) == 58.88293538022454\nmy_func(15,14.56,0.0,0.0) == 14.56\nmy_func(16,18.19,0.0,0.05) == 8.005904102775611\nmy_func(5,1.3,1.5,0.05) == 7.792487093749998\nmy_func(1,7.614283570302039,2.5829831911916843,0.8366676603440255) == 3.826641941533163\nmy_func(8,0.0868203932257905,6.762343581869009,0.3132813145865712) == 20.52226172770004\nmy_func(20,16.77954617427791,6.2775330084654835,0.6691753200840558) == 9.38099900172313\nmy_func(8,5.087401304203565,0.7112526122902973,0.0211677032311534) == 9.572934234963508\nmy_func(0,12.476672593864064,8.90227299496468,0.0399939523199667) == 12.476672593864064\nmy_func(4,6.849716795350198,6.383981101167486,0.8734261951808301) == 7.30900692603783\nmy_func(15,5.858911544833747,1.0368109558777885,0.3440005373002582) == 3.0190812611241307\nmy_func(11,9.201973642459151,4.5146150612426705,0.5620470976623301) == 8.032582692823654\nmy_func(9,8.417911777864873,6.596756540259406,0.2436270949546134) == 25.565379053193475\nmy_func(0,0.0,0.0,0.0) == 0.0\nmy_func(8,10.0,2.0,0.0) == 26.0\nmy_func(7,7.713087220228514,6.331567444974543,0.3270254738222256) == 18.63289854126471\nmy_func(15,15.0,15.0,0.15) == 92.5748913763936\nmy_func(10,0.0,1.0,0.0) == 10.0\nmy_func(6,15.032034503411946,6.6085674744825535,0.8443946820291952) == 7.826498656913915\nmy_func(8,5.949684635394997,5.98788337451597,0.4044218959169675) == 14.665826317473076\nmy_func(8,15.849325248081762,1.829015021454391,0.2099195916653724) == 9.796481967218025\nmy_func(9,18.955028067034625,9.641593333822268,0.867948026001539) == 11.108491670165703\nmy_func(8,11.3,0.5,0.3) == 2.2220091629999996\nmy_func(8,17.811663969849043,2.2141704671801343,0.6944244054914301) == 3.189609188359742\nmy_func(1,10.709018568957866,8.998347258806595,0.2947830272779133) == 16.550528914831673\nmy_func(12,2.239553411278987,0.0882017575320459,0.9684382329550114) == 0.0910762860558638\nmy_func(11,2.598906848344864,5.006868082871118,0.2052724768264812) == 22.650697730565778\nmy_func(19,1.991502924067716,4.621405130206549,0.4439018415882829) == 10.41075061896658\nmy_func(13,15.637331183962475,1.33793984243326,0.3023884959701066) == 4.528490306842686\nmy_func(19,15.257309292468308,1.453413823801296,0.6052106618495653) == 2.4015009683812467\nmy_func(16,0.2330309626809912,9.242748539906264,0.1730153962390371) == 50.876017428344376\nmy_func(3,3.3699461928785013,7.6760226770943,0.4930866453389301) == 13.97849990040221\nmy_func(20,6.494264185046537,5.630652171387929,0.7547076046341356) == 7.460706817863699\nmy_func(12,18.78844570217626,2.8899278052177637,0.8301776091782799) == 3.4810958288670504\nmy_func(6,16.000924078799883,7.516155408028899,0.2029064656359979) == 31.645702190515948\nmy_func(20,14.95621355826821,8.772726233898863,0.8485858042360747) == 10.338054431391726\nmy_func(10,0.0,2.0,0.0) == 20.0\nmy_func(8,9.32821059213734,1.771538972117661,0.6896512797555504) == 2.569327725767661\nmy_func(8,6.079075732072338,7.616275037889882,0.8997431009931424) == 8.464944057443878\nmy_func(7,5.316025289589447,9.43517965003026,0.1984878367845439) == 38.56346166900586\nmy_func(2,1.9171385135271568,9.703030976778765,0.5604896020928791) == 14.337946459239316\nmy_func(18,10.22136276738708,0.733197674136683,0.8260795148000697) == 0.8875630747414155\nmy_func(14,10.40771428226275,8.209931583517417,0.3175775290128138) == 25.778371553118436\nmy_func(13,0.0,0.0,0.0) == 0.0\nmy_func(0,1.6855246382355182,6.405725120636263,0.5332942882955445) == 1.6855246382355182\nmy_func(20,19.99,9.999,0.999) == 10.00900900900901\nmy_func(4,4.127016812838312,3.843080412702919,0.9925322938103662) == 3.8719953370347\nmy_func(20,19.99,9.999,0.0) == 219.9699999999999\nmy_func(13,8.511164965279704,1.915336253755413,0.7032927997862969) == 2.723384650840429\n.\"\"\"```", "response": "```python\ndef my_func(input1:int, input2:float, input3:float, input4:float):\n    if input1 == 0:\n        return input2\n    if input3 == 0:\n        if input4 == 0:\n            return input2\n        else:\n            return input2 * input4 * input1\n    if input4 == 0:\n        return input2 * input1 + input3\n    return input2 / (input1 * input4 + input3)\n```"}
