{"submission": "```python\ndef my_func(input1:int, input2:float, input3:float, input4:float):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             an integer in [0, 20],a float in [0.0, 20.0],a float in [0.0, 10.0],a float in [0.0, 1.0]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(16,10.622756969852636,0.7159056099939287,0.1971667524911536) == 3.839219514137523\nmy_func(20,12.142115677440144,8.40250921941026,0.7986907671909391) == 10.520353514242553\nmy_func(11,10.089243535079788,2.2881119063616517,0.4570541874655709) == 5.0123597212638975\nmy_func(20,19.99,9.999,0.999) == 10.00900900900901\nmy_func(0,16.744378754117225,8.548847669344099,0.0299965094595775) == 16.744378754117225\nmy_func(7,2.0049080392221996,5.9052991990104,0.053985052731584) == 36.572719821060375\nmy_func(16,18.19,0.0,0.05) == 8.005904102775611\nmy_func(1,17.086234275261415,1.777189005368922,0.7754830147542642) == 5.613338814052975\nmy_func(18,13.67907911226406,4.3627809210839095,0.7997619571294362) == 5.455099335738451\nmy_func(20,19.99,9.999,0.0) == 219.9699999999999\nmy_func(8,10.0,2.0,0.0) == 26.0\nmy_func(10,17.38581319814327,5.767505310009811,0.8405292472057567) == 6.861754571032343\nmy_func(20,14.501930815169011,3.6077540729029858,0.2686638357299475) == 13.430562954387067\nmy_func(19,17.771698422524167,0.2757530981243705,0.7360694549134533) == 0.3746291826323914\nmy_func(10,3.3983359991430917,5.07258878971731,0.6671065969339726) == 7.603795142145268\nmy_func(1,16.0173504503185,9.99596685827031,0.1644755559064712) == 23.378854689123905\nmy_func(2,18.978558179440594,2.546760762643079,0.2122718562299845) == 16.329407847325616\nmy_func(18,7.970257662471754,1.761045094099053,0.2267086789995257) == 7.769855371620945\nmy_func(0,2.818106065306365,1.1158375936499276,0.0982472049181037) == 2.818106065306365\nmy_func(6,6.924154742559923,2.9947423640122683,0.9884384014515422) == 3.029771364228283\nmy_func(13,0.0,0.0,0.0) == 0.0\nmy_func(10,8.296220726417927,7.176145029631592,0.0309089504890665) == 68.62068427763722\nmy_func(14,9.724492550431467,8.066295857180805,0.8268422331547812) == 9.75554408536153\nmy_func(12,18.360257219559347,6.909405577691606,0.4158008859125293) == 16.6198562796199\nmy_func(8,16.621332626108718,9.84570315764769,0.4316188340615375) == 22.74368588539955\nmy_func(1,8.773928959318209,2.228593741245822,0.8943531345259914) == 3.155531833689421\nmy_func(9,15.117918986240577,8.869126229547375,0.956745097218362) == 9.270103662236068\nmy_func(18,8.812458161666626,3.4858989244348013,0.8321927334284245) == 4.1888120196313405\nmy_func(16,6.870774000215389,4.833276776491353,0.1726092294249247) == 26.982015897572943\nmy_func(1,6.925462897039541,5.529953506572333,0.2839865749949807) == 10.488677915226798\nmy_func(7,6.805278413922464,1.001991022838894,0.0511944442628922) == 10.73477375685658\nmy_func(14,17.712926583780046,6.482346720103942,0.5140263797172254) == 12.611131354399909\nmy_func(6,18.87647435689287,0.3123094490938372,0.6182143782537372) == 0.5620726355883678\nmy_func(10,0.0,1.0,0.0) == 10.0\nmy_func(8,14.33073122889219,8.142248409584901,0.0557516839650416) == 62.8067783403125\nmy_func(5,1.3,1.5,0.05) == 7.792487093749998\nmy_func(20,13.438346314723278,4.276600091163991,0.2607784926414279) == 16.392329263670444\nmy_func(15,15.0,15.0,0.15) == 92.5748913763936\nmy_func(12,18.32261974679136,4.971614799402214,0.5015678243414808) == 9.91412597693908\nmy_func(0,0.0,0.0,0.0) == 0.0\nmy_func(16,16.189750593554425,7.936341523100575,0.1508168420581287) == 49.95851556705024\nmy_func(15,10.420144446756156,9.85484401058817,0.010949268284462) == 145.84703141800483\nmy_func(10,0.0,2.0,0.0) == 20.0\nmy_func(17,9.55762268206017,6.663551715453078,0.6385208094699472) == 10.435919392755206\nmy_func(15,13.47116536022784,9.968931763230508,0.6446246242038624) == 15.464707916685946\nmy_func(20,11.823305561197664,0.0893117176269242,0.9817649097878252) == 0.0909705742551197\nmy_func(6,0.4530702364621186,8.447808287727408,0.4511678945800749) == 18.224961638129347\nmy_func(8,11.3,0.5,0.3) == 2.2220091629999996\nmy_func(6,1.0226429606674636,8.957678475404506,0.5076267877397371) == 17.40933030798126\nmy_func(15,14.56,0.0,0.0) == 14.56\n.\"\"\"```", "response": "```python\ndef my_func(input1: int, input2: float, input3: float, input4: float):\n    if input1 == 0:\n        return input2\n    if input3 == 0.0 and input4 == 0.0:\n        return input2\n    if input4 == 0.0:\n        return input1 * input2 + input3\n    return (input2 / input3) * input4 * input1\n```"}
