{"submission": "```python\ndef my_func(input1:int, input2:float, input3:float, input4:float):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             an integer in [0, 20],a float in [0.0, 20.0],a float in [0.0, 10.0],a float in [0.0, 1.0]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(11,17.063147886296232,6.632749452968255,0.1883829380694158) == 33.38229228361574\nmy_func(13,6.715103244089398,0.4578010753855421,0.7529097984093667) == 0.6080424709520484\nmy_func(14,9.713205616406809,6.181978324186059,0.3964431589238595) == 15.58860009406058\nmy_func(13,9.023360844350377,8.23971697050952,0.6102327895607562) == 13.502558391845184\nmy_func(9,9.596057407483231,7.368344080539871,0.4938969772665367) == 14.907192184517845\nmy_func(8,10.0,2.0,0.0) == 26.0\nmy_func(7,11.761917098108936,3.2682886728120053,0.1373148162789355) == 19.520132165572782\nmy_func(9,14.847180259128338,8.971894917504882,0.7057671132215718) == 12.712295108594612\nmy_func(13,9.286355574289695,5.748790193963647,0.5590121325560095) == 10.283814175964032\nmy_func(17,19.964742887040387,6.38427090443213,0.4240816357487882) == 15.054758419170293\nmy_func(5,16.973613706518364,5.4046351409618705,0.014663436384946) == 42.00732735285311\nmy_func(11,0.6657730434841014,6.676466217516603,0.4113636088563879) == 16.184328702269916\nmy_func(2,8.565238349990254,5.241048113855587,0.2556006811921674) == 13.8887392487443\nmy_func(20,19.99,9.999,0.999) == 10.00900900900901\nmy_func(2,11.312376954873264,8.214837456685538,0.1992187399903473) == 22.047194154213777\nmy_func(0,0.0,0.0,0.0) == 0.0\nmy_func(10,1.9491793794640055,6.25149894455134,0.1512940296773971) == 33.68624783780746\nmy_func(6,1.0261027407642964,1.9065264492757916,0.6542341421450231) == 2.910908471988516\nmy_func(11,18.323158026024753,2.340007570817689,0.1604452317084884) == 15.130547067893186\nmy_func(1,11.771776082184449,5.232449686395611,0.838377431915361) == 7.135034367715592\nmy_func(18,3.5195008178071996,4.275385507784986,0.4196360885616264) == 10.187944933894348\nmy_func(7,10.771053756331852,5.471892412015596,0.9327341942147548) == 5.866507815902459\nmy_func(10,0.0,2.0,0.0) == 20.0\nmy_func(5,1.3,1.5,0.05) == 7.792487093749998\nmy_func(1,2.8230439055875167,0.043623925691586,0.3776836034789462) == 1.800450436237531\nmy_func(13,0.0,0.0,0.0) == 0.0\nmy_func(5,17.20746567820645,9.531428743083977,0.067062380119592) == 53.84092119714607\nmy_func(1,1.949971970093476,3.2213278457795944,0.0974129552899739) == 4.981347283533652\nmy_func(2,18.92897795144937,5.733444009158454,0.6397435316808334) == 10.25564645865813\nmy_func(10,9.628539365939307,9.794589501777777,0.59955524826792) == 16.335714025959977\nmy_func(5,12.690274265621824,0.0004644191954827,0.0262291616321115) == 11.113246503541651\nmy_func(18,8.587885118067703,8.438916557325149,0.7151002342332123) == 11.801026140094429\nmy_func(14,1.4854513398544866,2.6702422550626883,0.6453944015703602) == 4.137379248672874\nmy_func(12,9.287974202105593,3.600908441172108,0.0892866967112451) == 30.224960239963657\nmy_func(20,15.271579427319487,5.197228896595211,0.7658333495283038) == 6.786370559336327\nmy_func(16,4.257832146270952,4.318613381164927,0.9143983983975316) == 4.722901296342194\nmy_func(15,14.56,0.0,0.0) == 14.56\nmy_func(20,19.99,9.999,0.0) == 219.9699999999999\nmy_func(19,15.453624907475842,2.804121340694289,0.6197554296794445) == 4.524561266475921\nmy_func(19,0.1585510584081495,8.737112716751321,0.0409701618091786) == 117.00843823338757\nmy_func(10,10.185948028385104,5.933696083099931,0.7293856752973225) == 8.135201217340118\nmy_func(8,11.3,0.5,0.3) == 2.2220091629999996\nmy_func(0,2.2857065107443497,8.892881530587367,0.4414289702387801) == 2.2857065107443497\nmy_func(4,15.11583972410014,1.8052233776361917,0.1790157407865547) == 12.370034139083083\nmy_func(10,0.0,1.0,0.0) == 10.0\nmy_func(15,15.0,15.0,0.15) == 92.5748913763936\nmy_func(16,18.19,0.0,0.05) == 8.005904102775611\nmy_func(18,7.251744833751246,9.379546224993694,0.6992837151273639) == 13.413076867581468\nmy_func(17,1.0449026948757312,5.436164760826357,0.1816644392640618) == 28.96829088793862\nmy_func(11,14.320225730855212,8.327734815550583,0.7171366655859878) == 11.612481994501294\n.\"\"\"```", "response": "```python\ndef my_func(input1:int, input2:float, input3:float, input4:float):\n    if input4 == 0.0:\n        return input1 * input2 + input3\n    elif input1 == 0:\n        return input2\n    elif input1 >= 15:\n        return (input2 * input3) / input4\n    elif input1 >= 10:\n        return input2 + input3 * input1\n    elif input1 >= 5:\n        return input2 + input3 + input4 * input1\n    else:\n        return input1 * input3 / input4\n```"}
