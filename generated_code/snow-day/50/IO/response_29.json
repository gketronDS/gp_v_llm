{"submission": "```python\ndef my_func(input1:int, input2:float, input3:float, input4:float):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             an integer in [0, 20],a float in [0.0, 20.0],a float in [0.0, 10.0],a float in [0.0, 1.0]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(20,19.99,9.999,0.0) == 219.9699999999999\nmy_func(6,4.2163823782036385,6.831705068921776,0.6383565142307931) == 10.687512416398336\nmy_func(10,12.680682075889308,4.701670748429468,0.402687562009686) == 11.6815385623179\nmy_func(19,2.604627346049806,2.5138060438950527,0.9346573523110434) == 2.6895482474720707\nmy_func(10,0.0,2.0,0.0) == 20.0\nmy_func(16,2.1745757134815635,1.139544663809181,0.4505443864471804) == 2.5292372292660863\nmy_func(0,5.257391978451764,0.3616808192184795,0.8338127556082887) == 5.257391978451764\nmy_func(0,0.0,0.0,0.0) == 0.0\nmy_func(6,8.272053984216125,8.645972744512386,0.9487132386479248) == 9.113367852133129\nmy_func(4,8.464008344744144,4.368362919133744,0.3416574200757447) == 11.973956587155149\nmy_func(0,14.520495749497943,4.201465782490289,0.5286165187300997) == 14.520495749497943\nmy_func(0,9.315655691717364,5.359624865333218,0.455491364942832) == 9.315655691717364\nmy_func(15,12.7643959972913,6.314745727441682,0.3828638482303843) == 16.490775036892977\nmy_func(4,18.837782407021397,3.5753862408251704,0.5516848987409706) == 6.980013567021011\nmy_func(3,1.1596154905586276,7.035906064624038,0.8291216075257406) == 8.449420754498053\nmy_func(14,10.4571299338011,5.757435854735236,0.8100457302492594) == 7.107544228619883\nmy_func(15,9.57823196540949,5.888464424172205,0.3027343818097655) == 19.40672850889\nmy_func(2,3.4121936207831904,8.412282289277481,0.5955837997113566) == 12.372418199565264\nmy_func(5,19.64116540583403,4.820859103794815,0.7515920027745292) == 6.426707802115617\nmy_func(7,3.015756537845964,8.01272555081918,0.8791677685740898) == 9.113986910045767\nmy_func(16,18.19,0.0,0.05) == 8.005904102775611\nmy_func(14,17.24953310314578,1.6926146201755763,0.6234253364664558) == 2.715040552220059\nmy_func(11,16.149064643300314,8.406814983716501,0.4669740743401577) == 18.000915353496783\nmy_func(4,17.085304426064564,0.0615192245779683,0.2404973946993467) == 5.855804777005626\nmy_func(9,8.774085227838512,2.0293246925095545,0.1550686253190167) == 12.14011188018415\nmy_func(3,2.0775776348876107,8.309933611607226,0.6143878454149191) == 12.869131782439275\nmy_func(7,14.312186005720712,8.198046191073953,0.2269962555665545) == 32.51957879651818\nmy_func(10,10.18383022998686,2.3202780006500356,0.2556280396796927) == 9.134593097042476\nmy_func(10,13.421035662558204,2.516488988901825,0.043808071434627) == 29.31639208091911\nmy_func(5,1.923054555064816,4.933689498778139,0.1550864689901361) == 18.942485550889945\nmy_func(8,11.3,0.5,0.3) == 2.2220091629999996\nmy_func(1,10.27973013778575,8.094719955855647,0.4495827460254162) == 13.752860789895449\nmy_func(11,11.587910269654715,9.844591374555984,0.2850076723980258) == 33.968481330954795\nmy_func(20,19.99,9.999,0.999) == 10.00900900900901\nmy_func(5,1.3,1.5,0.05) == 7.792487093749998\nmy_func(19,3.0860545015227947,9.327413996749153,0.2012525730218347) == 45.741640867765\nmy_func(17,17.046417384327253,4.574888669729883,0.0376025415773025) == 67.13477777926647\nmy_func(12,9.809223758374742,1.7492146982272572,0.6008473394312032) == 2.911359294867287\nmy_func(0,3.802005728230484,3.41455933937306,0.1941156298480111) == 3.802005728230484\nmy_func(15,14.56,0.0,0.0) == 14.56\nmy_func(15,15.0,15.0,0.15) == 92.5748913763936\nmy_func(2,2.0684228770237634,0.1239666208157297,0.5932271361978451) == 0.5166427376904608\nmy_func(1,0.971463152081924,4.117578583236714,0.6482071521036751) == 4.459332372133955\nmy_func(15,14.652617984865191,5.65141921900906,0.1604401478632663) == 33.731509719469784\nmy_func(0,4.013242055380221,2.032307602660517,0.2012071776199991) == 4.013242055380221\nmy_func(8,10.0,2.0,0.0) == 26.0\nmy_func(18,7.103123858232376,2.5387208457701083,0.8728511763493804) == 2.908538035530954\nmy_func(16,17.37044627106508,2.8993979078237886,0.8090791920170627) == 3.583577400662413\nmy_func(13,0.0,0.0,0.0) == 0.0\nmy_func(10,0.0,1.0,0.0) == 10.0\n.\"\"\"```", "response": "```python\ndef my_func(input1: int, input2: float, input3: float, input4: float) -> float:\n    if input1 == 0:\n        return input2\n    if input4 == 0.0:\n        return input1 * input3\n    return (input1 * input2 * input3) / input4\n```"}
