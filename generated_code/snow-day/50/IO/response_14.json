{"submission": "```python\ndef my_func(input1:int, input2:float, input3:float, input4:float):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             an integer in [0, 20],a float in [0.0, 20.0],a float in [0.0, 10.0],a float in [0.0, 1.0]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(8,2.986590256952446,8.395152290950417,0.4359368012564968) == 19.090987783385497\nmy_func(12,10.918132421309393,0.691668494472456,0.990704145816374) == 0.6981584738423574\nmy_func(6,10.800388146895065,9.562854728420533,0.6612584076424968) == 14.456068800081828\nmy_func(4,15.841635215418112,9.22219791741956,0.7696397301278162) == 11.993354116971224\nmy_func(14,8.975198598908445,8.293728105275813,0.1098178656519559) == 62.4658232783873\nmy_func(10,19.844077496611593,9.389749273479923,0.5806971048929143) == 16.17040557304368\nmy_func(20,19.99,9.999,0.0) == 219.9699999999999\nmy_func(19,16.634102925159738,6.768904137169277,0.1242579321538616) == 51.4330027196818\nmy_func(16,16.7246616100823,3.488577861426564,0.4161182967209609) == 8.385142460768428\nmy_func(18,3.239393978926932,5.469283312760039,0.6967315201598017) == 7.849915143774565\nmy_func(10,0.0,2.0,0.0) == 20.0\nmy_func(12,14.519318648165726,0.4058463059637796,0.3515331354906934) == 1.2283989338337404\nmy_func(20,19.99,9.999,0.999) == 10.00900900900901\nmy_func(7,19.279691457048887,0.8872631703827794,0.9593361107023988) == 0.9248720690503904\nmy_func(0,0.0,0.0,0.0) == 0.0\nmy_func(10,6.270557315087744,1.0410098656143774,0.5394671958733553) == 1.9315628971597292\nmy_func(14,3.382217106610621,5.907002820604799,0.9621303625711743) == 6.139503595769563\nmy_func(13,0.0,0.0,0.0) == 0.0\nmy_func(19,7.534998216704743,9.919529211020514,0.0771190779540176) == 102.27010417763752\nmy_func(8,15.120936965294032,5.471861745051543,0.27432589767293) == 19.57547657974034\nmy_func(8,11.3,0.5,0.3) == 2.2220091629999996\nmy_func(15,6.094798602671752,5.883294634941186,0.7094761863891315) == 8.292448335807421\nmy_func(4,8.349898913724203,5.900704732553884,0.3034835793111535) == 16.832356302852386\nmy_func(0,5.389227172474628,8.319521476812035,0.0655798998021548) == 5.389227172474628\nmy_func(11,8.917182306219775,2.4568014952006223,0.0257813590308696) == 30.487515529304424\nmy_func(15,4.326669337093996,2.7367706492415667,0.24414577099757) == 11.106218657952748\nmy_func(12,0.8030943766915555,1.3627214092973117,0.9001598127499132) == 1.5138660824389434\nmy_func(20,17.03890743734041,0.8948191202439171,0.1477616710960483) == 6.504516008649199\nmy_func(20,5.2632865520756305,7.920393970202059,0.3300103019581726) == 23.994220650129144\nmy_func(18,14.663770291858098,4.02499889210717,0.8802821553998981) == 4.572396324765528\nmy_func(2,11.5778480102656,9.414405126489328,0.066909627772444) == 28.279237766929633\nmy_func(15,15.0,15.0,0.15) == 92.5748913763936\nmy_func(18,10.733503032492957,7.344322186823425,0.1411352071417987) == 49.36671007853149\nmy_func(19,15.867651062589337,9.183185803260978,0.5374257681415503) == 17.087356175535614\nmy_func(10,0.0,1.0,0.0) == 10.0\nmy_func(2,10.89993586353973,3.69058898511046,0.4667993326896744) == 8.757297433214458\nmy_func(5,1.3,1.5,0.05) == 7.792487093749998\nmy_func(17,1.1655476828340294,2.6453701668078775,0.8334389002725285) == 3.1740421114766333\nmy_func(3,6.33602362217313,4.616857820997453,0.843793559515585) == 5.474843968523767\nmy_func(8,2.5867195720619085,7.617142295699484,0.5424222351853168) == 14.020811351802523\nmy_func(8,4.0402377702023795,0.5505857916350865,0.1522882013702287) == 3.728709113122554\nmy_func(19,5.534627770181729,0.4848853188932689,0.2305510970202884) == 2.1267568542954667\nmy_func(15,14.56,0.0,0.0) == 14.56\nmy_func(16,18.19,0.0,0.05) == 8.005904102775611\nmy_func(7,17.146435837258622,4.383779336165274,0.8098215986824241) == 5.413371089131003\nmy_func(8,16.283487706082443,8.879916378804229,0.940806570566848) == 9.4386207086379\nmy_func(14,1.9926069228839305,8.407639407889087,0.8234740166587874) == 10.209963201765223\nmy_func(13,17.606550693149103,1.248829533540875,0.3728194407021968) == 3.3828127885248778\nmy_func(1,13.494025248604444,2.293338755633594,0.1512601164615019) == 13.74625617359968\nmy_func(8,10.0,2.0,0.0) == 26.0\n.\"\"\"```", "response": "```python\ndef my_func(input1:int, input2:float, input3:float, input4:float):\n    if input4 == 0.0:\n        return input1 + input2 + input3\n    return (input1 + input2 + input3) / input4\n```"}
