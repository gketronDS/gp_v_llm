{"submission": "```python\ndef my_func(input1:int, input2:float, input3:float, input4:float):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             an integer in [0, 20],a float in [0.0, 20.0],a float in [0.0, 10.0],a float in [0.0, 1.0]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(2,15.781242022663758,2.266911094117945,0.152537031016033) == 15.52201948729579\nmy_func(8,11.3,0.5,0.3) == 2.2220091629999996\nmy_func(8,8.919567887887334,0.0070524693250706,0.9973987826562354) == 0.007070862174394\nmy_func(17,10.313071719006876,6.596650745090323,0.4309891180946897) == 15.305497530749694\nmy_func(15,14.56,0.0,0.0) == 14.56\nmy_func(20,13.52050061461493,6.336071951649076,0.6796836844346672) == 9.322089226384938\nmy_func(6,7.133767739850583,7.5244237758146735,0.6952139990939427) == 10.820218925736484\nmy_func(14,9.348532775694858,4.748633586481387,0.1327019553034719) == 32.18217103760661\nmy_func(1,2.487860402643376,0.2907016805306295,0.3380929846771596) == 1.9374339341841864\nmy_func(17,12.712608702935093,1.072755510982788,0.9841565791270688) == 1.090025239616144\nmy_func(2,6.167778380267242,5.084782399048907,0.543804195582804) == 8.68804360018245\nmy_func(20,19.99,9.999,0.0) == 219.9699999999999\nmy_func(17,16.37745694922141,7.410173278749704,0.571104274359919) == 12.975168816004452\nmy_func(0,11.098474443007076,6.116662766681046,0.0679762003320558) == 11.098474443007076\nmy_func(20,19.99,9.999,0.999) == 10.00900900900901\nmy_func(10,0.0,1.0,0.0) == 10.0\nmy_func(7,19.355559468110386,4.673475936293908,0.1809075883224435) == 24.231112484873144\nmy_func(8,10.0,2.0,0.0) == 26.0\nmy_func(11,7.743411478656139,3.583318419705362,0.5640956744742897) == 6.352474068834406\nmy_func(6,10.271934356160587,0.6719864061052727,0.9558583181403548) == 0.7030189108730739\nmy_func(1,9.94955851742774,7.245132237514671,0.507522534942654) == 12.145065594617211\nmy_func(3,12.382018938094095,9.370640737332335,0.6733771497305007) == 13.862440055244356\nmy_func(0,15.354992923062332,6.897410419736741,0.1373553031176139) == 15.354992923062332\nmy_func(4,10.5136188958135,3.0491850259901145,0.282674400700221) == 10.7145557283178\nmy_func(17,3.817959679452907,7.02555400829384,0.3476022613426743) == 20.199955655119528\nmy_func(3,12.3323377542966,3.3328311634394945,0.9444208539296792) == 3.5304796204881894\nmy_func(18,12.676382866274382,4.554639710679391,0.9416439670008752) == 4.836902131052635\nmy_func(1,4.752851539230876,7.680892642849802,0.574079061364773) == 9.7052316316329\nmy_func(9,13.053072593685757,2.4853006192565696,0.8698974165851328) == 2.8570043623533463\nmy_func(5,1.3,1.5,0.05) == 7.792487093749998\nmy_func(7,14.323053446159896,5.948800090127686,0.6156623750791812) == 9.668212337437014\nmy_func(6,1.746446913899411,5.949616638721694,0.5627352017081025) == 10.510981520946704\nmy_func(4,14.722233465070977,5.084210505030407,0.7009475105786094) == 7.313077192375515\nmy_func(10,15.012838989301958,3.0727957972881894,0.3051844026288742) == 10.198308162806592\nmy_func(10,0.0,2.0,0.0) == 20.0\nmy_func(20,0.3564289078587124,5.066224745631089,0.4948076018525906) == 10.238765518139536\nmy_func(20,5.7501028350780325,9.159685341075928,0.261101489909631) == 35.0119114201387\nmy_func(4,16.63472160605646,9.990443008616106,0.7675384065927202) == 13.02677909003737\nmy_func(12,19.699947304889697,7.881795053277196,0.8815614132789824) == 8.940721468324025\nmy_func(0,0.0,0.0,0.0) == 0.0\nmy_func(3,2.4537166081491413,6.040526295389851,0.1413280623939892) == 17.234624390996224\nmy_func(9,1.5230452834967334,3.5806328779494887,0.2261694055165313) == 14.407968735446405\nmy_func(15,15.0,15.0,0.15) == 92.5748913763936\nmy_func(13,0.0,0.0,0.0) == 0.0\nmy_func(3,1.87830640512056,7.934687180042049,0.2670612000457036) == 18.7523890231862\nmy_func(2,16.769095736694556,3.39099248360039,0.0685845623256236) == 21.097187965167077\nmy_func(14,4.999525844863886,7.278194065405557,0.7051570380914485) == 10.321380247865015\nmy_func(16,18.19,0.0,0.05) == 8.005904102775611\nmy_func(12,16.833639777565285,6.790062592114267,0.8068186134951384) == 8.415847746801964\nmy_func(19,6.810172578635414,9.557307094612993,0.2120090714596227) == 44.66594082305087\n.\"\"\"```", "response": "```python\ndef my_func(input1: int, input2: float, input3: float, input4: float):\n    if input1 == 0:\n        return input2\n    elif input1 == 10 and input3 == 1.0:\n        return input1 + input2\n    elif input1 == 10 and input3 == 2.0:\n        return input1 * 2.0\n    elif input1 == 20 and input4 == 0.0:\n        return input1 * input2 + input3\n    elif input3 == 0.0:\n        return input2\n    elif input4 == 0.0:\n        return input1 + input2 + input3\n    elif input4 >= 0.9:\n        return input3 + input2 * input4\n    else:\n        return input2 * input4 + input1 + input3\n```"}
