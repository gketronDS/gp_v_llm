{"submission": "```python\ndef my_func(input1:int, input2:float, input3:float, input4:float):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             an integer in [0, 20],a float in [0.0, 20.0],a float in [0.0, 10.0],a float in [0.0, 1.0]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(20,19.99,9.999,0.0) == 219.9699999999999\nmy_func(16,3.0684411340955142,2.617999505401384,0.7855597360778541) == 3.3326549021827327\nmy_func(0,0.4140256454965874,2.7644251735896876,0.0144788721527908) == 0.4140256454965874\nmy_func(17,11.729992878740402,0.6610933517165907,0.4139126923936475) == 1.5983317080961807\nmy_func(7,17.14176859539901,8.438200266567259,0.4630029632500596) == 18.21099032674106\nmy_func(16,18.19,0.0,0.05) == 8.005904102775611\nmy_func(11,10.083688929110068,9.487864218607374,0.1680348253974771) == 50.3332995737204\nmy_func(17,9.372565595599108,6.288452595766919,0.7380423835145712) == 8.520449145348804\nmy_func(18,13.230759484483832,1.408727378780481,0.9958465591901738) == 1.4146028479789732\nmy_func(18,19.186230646382448,2.4959802436320633,0.4581116560213181) == 5.4486332475132615\nmy_func(15,14.56,0.0,0.0) == 14.56\nmy_func(0,9.916436696131315,2.53088140593811,0.9242604583424224) == 9.916436696131315\nmy_func(18,1.019135125591819,6.064491143974038,0.2507169936308911) == 24.060199189321985\nmy_func(5,0.6813998605970628,6.192515910413832,0.3372026711452722) == 16.10254854582692\nmy_func(16,10.765238334891825,3.188095301096656,0.3808122394331529) == 8.372947235319854\nmy_func(5,1.3,1.5,0.05) == 7.792487093749998\nmy_func(8,18.5444183921489,7.150735836114479,0.330539248432401) == 21.508911339633396\nmy_func(10,3.992410360636715,0.9999906199784048,0.2107283501089214) == 4.674760777653938\nmy_func(8,10.0,2.0,0.0) == 26.0\nmy_func(15,15.0,15.0,0.15) == 92.5748913763936\nmy_func(5,17.458058795694647,0.6288981570632801,0.2765380446424942) == 5.28345294253458\nmy_func(2,2.5772048349621457,7.6909168231876865,0.304488724849413) == 14.286722777553088\nmy_func(18,9.96386957495615,0.2650860919957321,0.3883604197593764) == 0.683909595216083\nmy_func(19,11.15620002334718,5.698567320377935,0.511221644080201) == 11.146960212305151\nmy_func(9,18.392160704137257,2.0688263474689963,0.5247240336129051) == 3.9605739682184673\nmy_func(8,11.3,0.5,0.3) == 2.2220091629999996\nmy_func(19,14.93000161672022,0.9296047938312524,0.3334236435089587) == 2.793522076266629\nmy_func(8,14.728326987278855,6.699460488764007,0.0373014965396141) == 57.963024032840266\nmy_func(0,0.0,0.0,0.0) == 0.0\nmy_func(16,17.27195884849692,6.117233771595092,0.6011011782535295) == 10.176715244703049\nmy_func(1,14.349068692778172,0.1761702576715584,0.3783146413395104) == 9.09677617438536\nmy_func(13,16.84025493959054,0.8466714201802683,0.5616665958368023) == 1.507765179350745\nmy_func(13,0.0,0.0,0.0) == 0.0\nmy_func(20,0.0286368653586333,5.076968749056841,0.1248225095568122) == 37.84908843532655\nmy_func(0,11.904407590838105,7.535761629064823,0.4834211986097472) == 11.904407590838105\nmy_func(12,14.043320577842826,0.3045458549872959,0.5656421581695269) == 0.5390163437233089\nmy_func(6,3.4887705502390354,6.478556967412949,0.0940022526445581) == 32.733027105357465\nmy_func(16,16.1593211878328,9.264460331264797,0.3206994262461679) == 28.862128299216288\nmy_func(11,0.5217373397545599,2.615166758518627,0.1617229633444312) == 13.922909974987585\nmy_func(18,13.226097328442956,9.357274305006731,0.4306110743185515) == 21.72988564426379\nmy_func(16,15.114386420310716,1.8771167793816643,0.1791362575467135) == 10.675702160793016\nmy_func(15,13.80776683529386,8.64188200562547,0.8766983881011469) == 9.857303404359078\nmy_func(20,19.99,9.999,0.999) == 10.00900900900901\nmy_func(11,18.914523615136797,8.556767578042637,0.2505840510028532) == 33.50942673159813\nmy_func(3,9.728123395834093,4.78568070781345,0.4859673190631705) == 9.83149495859614\nmy_func(13,1.624249292593043,1.080701899021275,0.8737747492348245) == 1.2368197867566646\nmy_func(8,10.181813197032756,5.479345408068424,0.2562800182247832) == 20.332128370167197\nmy_func(10,0.0,1.0,0.0) == 10.0\nmy_func(10,0.0,2.0,0.0) == 20.0\nmy_func(0,15.578599348721388,0.2189488577621456,0.751642947861338) == 15.578599348721388\n.\"\"\"```", "response": "```python\ndef my_func(input1:int, input2:float, input3:float, input4:float):\n    if input1 == 0:\n        return input2\n    elif input1 == 10:\n        return input2 + input1 * input3\n    elif input1 == 20:\n        return input1 / (input2 + 1)\n    else:\n        return input2 * input3 + input4 * input1\n```"}
