{"submission": "```python\ndef my_func(input1:int, input2:float, input3:float, input4:float):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             an integer in [0, 20],a float in [0.0, 20.0],a float in [0.0, 10.0],a float in [0.0, 1.0]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(8,16.429342120895775,5.027019049491514,0.5235269318725613) == 9.620352837785145\nmy_func(5,9.572677640074838,3.672454683481811,0.7005837516310187) == 5.252413951187924\nmy_func(10,0.0,2.0,0.0) == 20.0\nmy_func(14,17.617668667885916,9.1773585113753,0.5805187852415543) == 15.808900985961822\nmy_func(20,19.99,9.999,0.0) == 219.9699999999999\nmy_func(8,10.0,2.0,0.0) == 26.0\nmy_func(0,13.74454790515391,1.781371926619848,0.6047851349112391) == 13.74454790515391\nmy_func(3,4.082945264068565,3.9465405927286614,0.2923787381969562) == 10.162031742375556\nmy_func(19,14.452821187148968,6.908087275952796,0.0030387978596727) == 141.36583745291077\nmy_func(16,18.19,0.0,0.05) == 8.005904102775611\nmy_func(11,8.409712220600722,5.43531436922525,0.5591639875112638) == 9.720269785484948\nmy_func(18,3.9711023850213256,1.4554482617235809,0.454366279089557) == 3.203262960776633\nmy_func(5,1.3,1.5,0.05) == 7.792487093749998\nmy_func(17,10.8162190639288,3.0030941679799037,0.932153625425795) == 3.2216730011730967\nmy_func(5,1.5440812658094003,3.932495230210612,0.1285174878772524) == 15.993569657420904\nmy_func(17,7.9534906484567935,6.446106045399604,0.2174824278366922) == 29.304248715781732\nmy_func(8,5.369406286977563,8.336578942759646,0.8432776220247193) == 9.88592290229928\nmy_func(3,15.924079739060303,1.7956023313597955,0.3851372095832925) == 7.280085748954029\nmy_func(8,19.54394577726745,4.7833229544535,0.7539168721997468) == 6.3448066404766825\nmy_func(4,7.337190731651038,9.490516033889904,0.9333617295099096) == 10.168044853190594\nmy_func(9,12.683335535004902,3.0122159724909094,0.8309318410654231) == 3.625106986070078\nmy_func(0,0.0,0.0,0.0) == 0.0\nmy_func(2,13.740644538478753,8.927288890683748,0.2218338034135617) == 24.194749357565424\nmy_func(8,11.3,0.5,0.3) == 2.2220091629999996\nmy_func(19,16.151020477373727,5.676400538635117,0.3330486160961907) == 17.043353583621933\nmy_func(3,18.84655491357373,2.7851213815620657,0.2791982571849987) == 13.297630208482026\nmy_func(15,14.56,0.0,0.0) == 14.56\nmy_func(20,2.8962034002535897,2.2436433657459434,0.2462986166241871) == 9.087701390498072\nmy_func(13,13.812840909033008,9.615093455859943,0.9821166157003308) == 9.790174916248192\nmy_func(7,14.975268500553463,9.31732394738541,0.8938219072067252) == 10.424139855102156\nmy_func(13,0.0,0.0,0.0) == 0.0\nmy_func(7,15.452176319334257,9.437571988699624,0.4576732523583903) == 20.549445719986515\nmy_func(3,11.869845817178245,6.031663732322951,0.1458865024575424) == 22.97946101072468\nmy_func(18,9.169187351396143,4.066966808676655,0.2228376999650003) == 18.15366766772231\nmy_func(6,16.844887268570336,2.9170865060030993,0.2640504538016188) == 11.968594564131756\nmy_func(20,19.99,9.999,0.999) == 10.00900900900901\nmy_func(14,11.320749554766827,3.653227963843983,0.1058096142749067) == 29.67785143114761\nmy_func(4,14.880335534990794,4.853411149050135,0.8700586381671422) == 5.580909505293334\nmy_func(19,8.110663809850427,7.616568223320633,0.2625791205358574) == 28.94268450525395\nmy_func(12,1.5104865703235637,2.4613718315632536,0.9405254972071384) == 2.6170176554194646\nmy_func(19,3.5884565877764496,5.2843102015400625,0.403218226030119) == 13.104812084453506\nmy_func(15,15.0,15.0,0.15) == 92.5748913763936\nmy_func(10,10.799943676519792,0.2268924155812268,0.5107421306949035) == 0.4523794003602625\nmy_func(15,6.536303761748767,6.031542090659885,0.8452993005117162) == 7.135392265210958\nmy_func(10,0.0,1.0,0.0) == 10.0\nmy_func(3,2.701521795818438,0.7208461359760732,0.5058965488427531) == 1.578888116552927\nmy_func(2,7.230671157417705,9.69214355611719,0.7146874476691362) == 13.046033921768773\nmy_func(4,6.831351090083317,1.5427505650588635,0.7423837487188178) == 2.099039406305465\nmy_func(20,8.732877107230133,8.770110783348414,0.3413886480347174) == 25.685522076788576\nmy_func(7,7.745993474836547,7.1236222770770885,0.3695673132366406) == 18.819238650987927\n.\"\"\"```", "response": "```python\ndef my_func(input1:int, input2:float, input3:float, input4:float):\n    if input1 == 0:\n        return input2\n    if input1 == 20:\n        return input2 * input3 + input4 if input4 == 0 else input2 / input3 / input4\n    if input4 == 0:\n        return input1 + input2 + input3\n    if input3 == 0:\n        return input2 * input4\n    return (input1 + input2) * input4 + input3\n```"}
