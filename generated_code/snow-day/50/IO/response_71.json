{"submission": "```python\ndef my_func(input1:int, input2:float, input3:float, input4:float):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             an integer in [0, 20],a float in [0.0, 20.0],a float in [0.0, 10.0],a float in [0.0, 1.0]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(8,11.3,0.5,0.3) == 2.2220091629999996\nmy_func(13,0.0,0.0,0.0) == 0.0\nmy_func(11,18.129236433938622,2.2709837312938497,0.5726197278764842) == 3.967185020985558\nmy_func(12,1.2869413778244465,8.688964450452119,0.1254360907948869) == 55.6587501878282\nmy_func(20,19.99,9.999,0.0) == 219.9699999999999\nmy_func(15,15.0,15.0,0.15) == 92.5748913763936\nmy_func(7,16.72379394433126,7.809934277577076,0.9596910780384578) == 8.137966953870965\nmy_func(16,9.278712190364711,2.3435243255701153,0.1368526770861352) == 16.37971411466812\nmy_func(16,18.19,0.0,0.05) == 8.005904102775611\nmy_func(11,11.710207075266991,2.494058973015818,0.9763375988664263) == 2.554504687632164\nmy_func(19,3.6105069456087824,1.538974732801205,0.2217881839068266) == 6.9105536265330025\nmy_func(0,0.0156178003521989,1.048224005513836,0.1112765569928263) == 0.0156178003521989\nmy_func(18,9.165629261535877,2.448971967818905,0.4149208130653554) == 5.9024741283769835\nmy_func(10,15.800872395619743,2.420682149658674,0.810899606784769) == 2.985181811690185\nmy_func(16,19.640177709821216,5.034820476152644,0.7374430378199569) == 6.827402555532398\nmy_func(0,0.0,0.0,0.0) == 0.0\nmy_func(1,0.3772348878436338,0.1612485496853044,0.1542890336530727) == 0.4802802312233187\nmy_func(20,10.137303798546418,3.886849719590857,0.0593335579531333) == 49.21562334972455\nmy_func(8,16.083414940201187,5.740993221012244,0.663922754485117) == 8.648290314901768\nmy_func(2,18.060198210153597,0.3176079304832002,0.8627328911388741) == 0.7014999882812448\nmy_func(15,14.56,0.0,0.0) == 14.56\nmy_func(19,14.3409833817442,2.1271819235588585,0.6730812191811057) == 3.1603644068733203\nmy_func(0,8.125148405100788,1.2363443738403812,0.6831353038064856) == 8.125148405100788\nmy_func(5,1.3,1.5,0.05) == 7.792487093749998\nmy_func(2,13.457041353203294,1.193644824787633,0.4590791403896984) == 5.776780288934574\nmy_func(16,14.05191103718758,2.152846625671818,0.4598136143355131) == 4.682490972576964\nmy_func(17,12.536645356302545,6.018718577154184,0.8747895646620705) == 6.88019018548673\nmy_func(6,14.288071933766414,6.619879092162302,0.2115422535498139) == 27.20781249172122\nmy_func(12,0.148769636463355,0.1078900741319588,0.8867220764678091) == 0.1216729311193402\nmy_func(4,0.8749433160828568,9.004559118213445,0.8630567115488087) == 10.42997260150544\nmy_func(17,11.360257792059352,5.039471297594228,0.4608534134585895) == 10.935096789816123\nmy_func(18,3.847863727139469,7.833970745264995,0.1566128299679545) == 47.86908262688775\nmy_func(3,4.375621783248933,5.07423486402849,0.7346663882438869) == 6.859572434955678\nmy_func(10,0.0,2.0,0.0) == 20.0\nmy_func(14,12.13731980694307,8.807732409284238,0.1771859024785168) == 47.25945024447141\nmy_func(10,0.0,1.0,0.0) == 10.0\nmy_func(20,19.99,9.999,0.999) == 10.00900900900901\nmy_func(10,14.622388529788402,6.426317004944168,0.8091196575646735) == 7.942357217405171\nmy_func(19,19.546289469842044,9.933889916611989,0.7131384490814894) == 13.929819559729912\nmy_func(16,19.95475693703399,6.725846514836037,0.1576704530564741) == 41.19950170300617\nmy_func(4,19.284613038771667,8.73202248702691,0.0830324406875587) == 44.44776279197356\nmy_func(14,0.0729770629036763,9.363880398109206,0.4017307638433011) == 23.291358847439767\nmy_func(9,7.23674199335385,7.257463740505746,0.8370387493936945) == 8.670403429349998\nmy_func(10,4.182129741720557,7.873538020265997,0.966240905641314) == 8.148628333055472\nmy_func(0,15.398983420838965,9.656440634602776,0.2862268837770927) == 15.398983420838965\nmy_func(4,19.254452205512056,7.998698189056045,0.2403809890057174) == 28.606870249106485\nmy_func(15,13.012962019947944,5.604852302024579,0.4236201285264115) == 13.23078901444352\nmy_func(3,13.851801092170914,1.77237153025413,0.1418800446500702) == 13.351265301214031\nmy_func(8,10.0,2.0,0.0) == 26.0\nmy_func(7,12.003296532082944,8.374607301066492,0.4631646190280568) == 18.003176680063014\n.\"\"\"```", "response": "```python\ndef my_func(input1: int, input2: float, input3: float, input4: float):\n    if input1 == 0:\n        return input2\n    if input4 == 0.0:\n        return input1 * input2 + input3\n    return (input2 * input3) / input4\n```"}
