{"submission": "```python\ndef my_func(input1:int, input2:float, input3:float, input4:float):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             an integer in [0, 20],a float in [0.0, 20.0],a float in [0.0, 10.0],a float in [0.0, 1.0]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(12,4.931257044011033,2.8031238717059193,0.1339786781696935) == 18.076287054142604\nmy_func(8,1.9886144330593305,8.500027588286985,0.4473302899509542) == 18.85359733819475\nmy_func(2,15.62484856883894,8.064053295770128,0.1647860961756202) == 25.698879986722687\nmy_func(14,5.962267437499569,3.0818027258143,0.2762396833695087) == 11.100051691720871\nmy_func(0,17.745413412058465,6.551504657929553,0.6516395257904296) == 17.745413412058465\nmy_func(7,12.242691089427938,6.392106198702695,0.9531099853233812) == 6.70657772949849\nmy_func(11,12.880978060415025,6.981925472796121,0.319658617794031) == 21.712296090300036\nmy_func(14,4.152946819940095,6.52944480386969,0.7359628177423547) == 8.871976435033856\nmy_func(19,19.051253472470208,7.912213750131311,0.412710922250403) == 19.171316563888688\nmy_func(5,1.3,1.5,0.05) == 7.792487093749998\nmy_func(20,19.99,9.999,0.0) == 219.9699999999999\nmy_func(10,0.0,2.0,0.0) == 20.0\nmy_func(15,5.751747277892328,0.569076692884638,0.878388233092164) == 0.6478646587527916\nmy_func(8,11.3,0.5,0.3) == 2.2220091629999996\nmy_func(12,0.6718962991060917,1.0508335779091793,0.2700585869546814) == 3.8174757679892286\nmy_func(7,0.041229590263998,6.0771417106651215,0.0043600226686686) == 42.02757938329635\nmy_func(1,6.31120632872565,4.712432024637133,0.623686386969173) == 7.087424880782903\nmy_func(7,6.40964302547655,6.555071485854148,0.8503994831380415) == 7.708223915819202\nmy_func(12,4.07020831965548,6.8369455373068195,0.6166717507921681) == 11.086776674978452\nmy_func(6,6.570287929449716,3.609269890616502,0.6259575949726461) == 5.768200052609124\nmy_func(15,14.56,0.0,0.0) == 14.56\nmy_func(7,10.741529308002704,3.88766807476235,0.2845719326961503) == 13.381346289373612\nmy_func(11,13.622174127783826,6.889874126785951,0.4280706682082209) == 16.08988270165352\nmy_func(12,7.383559955096688,9.258099436050705,0.0432917344860225) == 92.45570814167478\nmy_func(16,12.353430640812576,4.443472454044295,0.6897801759233234) == 6.441867480602327\nmy_func(3,9.56578297081562,2.482172683347892,0.7538735982052279) == 3.386091309040229\nmy_func(18,10.719354489977844,9.8358121728688,0.9669890141276626) == 10.171586263306056\nmy_func(10,0.0,1.0,0.0) == 10.0\nmy_func(12,4.990997844369273,5.379527012647029,0.9777093946235964) == 5.5021737974790215\nmy_func(13,0.0,0.0,0.0) == 0.0\nmy_func(11,13.360385664821816,0.2709535502892202,0.7277100208511603) == 0.3723451762445476\nmy_func(5,6.898791369914841,6.7559025040500655,0.4207438624635233) == 15.45978022324293\nmy_func(16,18.19,0.0,0.05) == 8.005904102775611\nmy_func(6,14.531783174060536,5.078058108434952,0.9971761536261754) == 5.09243837206584\nmy_func(4,11.757455682145835,9.222876597015292,0.2695161077664966) == 27.824196019667344\nmy_func(20,19.99,9.999,0.999) == 10.00900900900901\nmy_func(11,17.575147096120848,3.980661210154479,0.3966586104759486) == 10.064560954971624\nmy_func(8,10.0,2.0,0.0) == 26.0\nmy_func(8,7.079201670123232,8.247675271519105,0.001952619097959) == 72.5016015501898\nmy_func(4,17.23010557408142,1.766107848131946,0.4628930965774102) == 4.93178227444138\nmy_func(11,10.741607784855129,4.142198084336915,0.5225482194867205) == 7.92774757597358\nmy_func(0,0.0,0.0,0.0) == 0.0\nmy_func(10,6.519164698952373,9.807330027070066,0.7704134754079797) == 12.729953970517252\nmy_func(14,15.786272877566311,8.923703274764334,0.3640398497913858) == 24.497536824221033\nmy_func(6,13.72759764670506,2.8430484471828024,0.4826072987330873) == 6.041349260498347\nmy_func(19,10.631584690216716,1.4716861189456565,0.5831824533505575) == 2.5235436950071515\nmy_func(10,15.924152000409286,9.382183759542226,0.1246492185961664) == 59.593892790282794\nmy_func(15,5.0787652909053165,5.544574024769448,0.1460626376976653) == 34.88173095514413\nmy_func(15,15.0,15.0,0.15) == 92.5748913763936\nmy_func(8,4.228090976885341,8.12786465870975,0.2216396991779985) == 32.30060693714891\n.\"\"\"```", "response": "```python\ndef my_func(input1: int, input2: float, input3: float, input4: float):\n    if input1 == 0:\n        return input2\n    if input4 == 0:\n        return (input1 + input2 + input3) * 2\n    if input3 == 0:\n        return input2\n    return (input1 * input2 * input3) / input4\n```"}
