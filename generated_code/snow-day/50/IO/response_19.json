{"submission": "```python\ndef my_func(input1:int, input2:float, input3:float, input4:float):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             an integer in [0, 20],a float in [0.0, 20.0],a float in [0.0, 10.0],a float in [0.0, 1.0]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(5,8.63843763855905,6.820655495513107,0.8296819144804783) == 8.220867583720185\nmy_func(16,3.713154234171725,3.415418293287502,0.6704536885728984) == 5.094189701068838\nmy_func(15,16.330935004447774,2.0378451959565314,0.9200717698170578) == 2.2148763420507143\nmy_func(8,10.0,2.0,0.0) == 26.0\nmy_func(20,8.757326880543925,6.437248931004481,0.1461472864014878) == 42.54904755621253\nmy_func(7,16.781318435497546,1.283049162633445,0.9473133839682284) == 1.3544083730012646\nmy_func(10,0.0,2.0,0.0) == 20.0\nmy_func(16,18.19,0.0,0.05) == 8.005904102775611\nmy_func(8,8.069335832234092,2.909160614509203,0.3129071508990889) == 9.236208639189597\nmy_func(15,15.0,15.0,0.15) == 92.5748913763936\nmy_func(6,10.757775429847936,9.935580652521956,0.8501009610146365) == 11.687519649402969\nmy_func(1,16.20814625904478,8.490279364410057,0.2083998383158891) == 21.320650563669624\nmy_func(14,11.567382323816748,5.136079037896851,0.5835856802789446) == 8.800912739267755\nmy_func(7,19.128292177690177,4.159731545405819,0.4298052579173074) == 9.863359755653669\nmy_func(15,2.799359827693093,0.3716438691717061,0.4732530428616511) == 0.7854306204965498\nmy_func(4,18.715551675567266,2.7916455631179904,0.7386745742839169) == 3.8489208393067136\nmy_func(16,11.420152082450128,8.1035974881027,0.7602180482086591) == 10.659569984252112\nmy_func(12,3.9657718679233263,7.485951334958763,0.7986898223793565) == 9.372789168049152\nmy_func(9,0.4628179417565703,5.461023980030246,0.3485539109838533) == 15.346376101791716\nmy_func(12,4.464846039386967,2.6587547695630898,0.9990390922937464) == 2.6613120448156984\nmy_func(10,19.17025456247306,9.542302155717309,0.5544127429548845) == 17.21215347711266\nmy_func(6,19.030273060095265,7.415538734376708,0.2507789874532694) == 27.705828185445423\nmy_func(10,0.0,1.0,0.0) == 10.0\nmy_func(15,12.89848426212471,6.143718465517605,0.8304088606444403) == 7.398425952201872\nmy_func(12,15.565386807508222,8.019969723419617,0.7281521249345263) == 11.01414112329778\nmy_func(7,8.842521576638013,1.9626877092069783,0.1465886896282022) == 11.890114924471636\nmy_func(6,10.70841659544181,1.7992829869596272,0.4063179859746643) == 4.703238453531805\nmy_func(12,16.279632983936665,7.605878061655345,0.0511714976217655) == 78.16665338285269\nmy_func(1,10.205406361823837,9.118917861197964,0.7740347426865573) == 11.424985135735731\nmy_func(15,14.56,0.0,0.0) == 14.56\nmy_func(20,19.99,9.999,0.0) == 219.9699999999999\nmy_func(13,0.0,0.0,0.0) == 0.0\nmy_func(11,6.760435498172606,3.671134659750897,0.46842135160303) == 7.836217470142216\nmy_func(16,14.875235197599462,7.66544188222079,0.3716095258531575) == 20.62427828163542\nmy_func(4,19.361048375213684,8.593128183565966,0.149559882607927) == 37.52902850805715\nmy_func(3,12.943469843148996,5.753391591068905,0.8292367306570599) == 6.9680806482585265\nmy_func(5,1.3,1.5,0.05) == 7.792487093749998\nmy_func(10,6.034860731507852,1.5931628394710062,0.458853920032311) == 3.477567029908133\nmy_func(0,0.0,0.0,0.0) == 0.0\nmy_func(7,14.074867509436038,5.297715975754241,0.1696040572625518) == 26.56341754539289\nmy_func(15,4.33463655290381,2.1927449323886883,0.5808348478614183) == 3.775161983694936\nmy_func(17,3.0281844493509036,0.91934764317795,0.7113806738804014) == 1.2923427326039851\nmy_func(15,6.960422342681367,4.130489952587663,0.1496159980187806) == 25.791424247903\nmy_func(18,11.546219573644894,7.085077235133575,0.331549156218981) == 21.36263874551024\nmy_func(6,10.936783486063508,1.080533547185828,0.579275199233174) == 1.9156312419246135\nmy_func(8,11.3,0.5,0.3) == 2.2220091629999996\nmy_func(9,14.131768770868574,2.8487016943492636,0.8419413140932611) == 3.3834926542177706\nmy_func(20,19.99,9.999,0.999) == 10.00900900900901\nmy_func(15,14.472303580571728,6.68252504927649,0.6275964536058024) == 10.647807030886328\nmy_func(2,16.23397442891155,9.212879482938872,0.9440072873774374) == 9.779630090977472\n.\"\"\"```", "response": "```python\ndef my_func(input1:int, input2:float, input3:float, input4:float):\n    if input4 == 0:\n        return input1 * input2 + input3\n    else:\n        return (input1 * input2 + input3) / input4\n```"}
