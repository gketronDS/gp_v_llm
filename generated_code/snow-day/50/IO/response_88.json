{"submission": "```python\ndef my_func(input1:int, input2:float, input3:float, input4:float):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             an integer in [0, 20],a float in [0.0, 20.0],a float in [0.0, 10.0],a float in [0.0, 1.0]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(5,18.641083016828915,7.097544889813908,0.5333977409740652) == 13.4242815307333\nmy_func(1,3.0969375822766954,7.8986060438501,0.0419331994146682) == 10.865679124914406\nmy_func(5,18.20593754153301,3.667860550030439,0.9001599384903212) == 4.074816688844324\nmy_func(0,0.0,0.0,0.0) == 0.0\nmy_func(1,15.137627276837616,1.5049374493084178,0.9228636161910756) == 2.672599276891007\nmy_func(14,1.162485559067239,5.734742677890931,0.1144225359920556) == 41.18630683508562\nmy_func(15,15.0,15.0,0.15) == 92.5748913763936\nmy_func(9,16.584808394474692,6.230096932061699,0.6998106177012823) == 8.902699095334215\nmy_func(18,7.236596783770766,7.493984025693067,0.4487865929832186) == 16.69811540076595\nmy_func(15,7.930038795089248,3.8941474856989022,0.4760861530103049) == 8.179486331603195\nmy_func(8,0.8704658100419738,2.921720045722375,0.8149006601613514) == 3.585365848839221\nmy_func(13,15.239756752503611,3.541580577687652,0.0907599621932955) == 32.11799851967759\nmy_func(19,12.129283631209542,6.40925634317266,0.04139766520553) == 90.91710167269387\nmy_func(7,17.201342964547464,8.041870926024394,0.8653312247630217) == 9.293408342083444\nmy_func(8,11.3,0.5,0.3) == 2.2220091629999996\nmy_func(2,4.441418001145674,1.5633301910999808,0.4155929635843048) == 3.99383588109966\nmy_func(9,6.605458207192112,9.92651050767057,0.0922810169781541) == 65.32824922910835\nmy_func(13,0.0,0.0,0.0) == 0.0\nmy_func(10,0.0,2.0,0.0) == 20.0\nmy_func(14,11.00512365066235,1.4630588242441456,0.0993605085956387) == 13.86531618965467\nmy_func(20,19.99,9.999,0.999) == 10.00900900900901\nmy_func(8,11.252974546371808,0.3927501754379869,0.131131699528154) == 5.677341768598449\nmy_func(12,8.014507426240483,4.238068203235288,0.5174120659902957) == 8.190867433757909\nmy_func(10,12.784844681546998,2.6270875998756313,0.8388998648705087) == 3.131586742639493\nmy_func(13,17.837781945850192,6.163256227095354,0.0265861135845064) == 81.07474791489767\nmy_func(9,11.50048556727812,8.572308523081352,0.2666888656941328) == 30.877674894453612\nmy_func(15,14.56,0.0,0.0) == 14.56\nmy_func(1,11.280561150270524,4.161409065301942,0.4917892401113742) == 9.894311619451036\nmy_func(14,3.4767441681271816,6.3519829773113266,0.7724846579113049) == 8.22279498836336\nmy_func(16,18.19,0.0,0.05) == 8.005904102775611\nmy_func(15,17.34221894993095,3.723664093844902,0.7549850794007328) == 4.932102900962202\nmy_func(7,16.404928573153626,3.678395582846244,0.6617350423423325) == 5.564209991750383\nmy_func(10,0.8124322449840604,6.924382015710301,0.5005515901645146) == 13.820926878087691\nmy_func(16,19.22086673285151,9.462146587694011,0.8858751855818017) == 10.681128382075316\nmy_func(14,1.9082633582367723,5.817252121017894,0.729737040134335) == 7.971710016073498\nmy_func(4,16.81729832509763,5.2529279618874245,0.7974765847190511) == 6.604147362886785\nmy_func(3,3.315453437596352,3.1660246476964735,0.7910567065618704) == 3.99600758691374\nmy_func(4,15.753310320830575,2.9866088183212125,0.1050047555774579) == 20.30080578855701\nmy_func(13,19.31981840084732,2.293731732131352,0.0883401109760068) == 23.968050794461075\nmy_func(17,2.4760895921046377,6.357645993794349,0.0079464600525899) == 103.63674889817597\nmy_func(20,19.99,9.999,0.0) == 219.9699999999999\nmy_func(19,16.27993042851998,8.162948241085298,0.939868712019843) == 8.685200535660513\nmy_func(9,17.134457651965395,3.1584502550912608,0.8616989375933464) == 3.665375843164595\nmy_func(5,1.3,1.5,0.05) == 7.792487093749998\nmy_func(10,0.0,1.0,0.0) == 10.0\nmy_func(13,11.09734977682574,7.060708825212547,0.7901146541334312) == 8.936309168414784\nmy_func(8,10.0,2.0,0.0) == 26.0\nmy_func(3,8.347444147273574,1.316706272030015,0.8738765520360849) == 1.5204659716183977\nmy_func(8,11.316386340679884,2.3724528531062425,0.8088249640364031) == 2.933224191350599\nmy_func(19,19.40716992773119,1.3422678052057937,0.8787568843398721) == 1.527462065021674\n.\"\"\"```", "response": "```python\ndef my_func(input1:int, input2:float, input3:float, input4:float):\n    if input1 == 0:\n        return 0.0\n    \n    if input4 == 0:\n        return input1 * input2 * input3\n    \n    factor = (input1 + input2 + input3) / input4\n    \n    if factor < 50:\n        return (input1 * input2) / (input3 + input4)\n    \n    return factor / (input1 * input4)\n```"}
