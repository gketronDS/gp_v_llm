{"submission": "```python\ndef my_func(input1:int, input2:float, input3:float, input4:float):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             an integer in [0, 20],a float in [0.0, 20.0],a float in [0.0, 10.0],a float in [0.0, 1.0]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(14,11.416851538518593,4.640029706386024,0.3683509809572844) == 12.594863243799193\nmy_func(14,7.868472140610814,9.725029052031612,0.0098622266034291) == 134.6067367336586\nmy_func(1,11.39255463074175,2.684045319480534,0.7754549225691122) == 5.242187381176059\nmy_func(3,15.22617841981864,3.5997795432053383,0.4184088428682215) == 9.906326104687311\nmy_func(10,0.0,2.0,0.0) == 20.0\nmy_func(17,9.31326352067564,6.982118267290513,0.0416987201784015) == 90.78604864391336\nmy_func(5,1.3,1.5,0.05) == 7.792487093749998\nmy_func(20,19.99,9.999,0.0) == 219.9699999999999\nmy_func(8,18.73364024656412,9.878495251299466,0.9378832289021604) == 10.532756049564476\nmy_func(5,1.3440775933071936,0.8336714005452694,0.378893843411838) == 2.121135513073632\nmy_func(11,18.3012862141625,5.075120418261684,0.6342951466696526) == 8.001358157981649\nmy_func(9,5.061630868216607,0.0746089089193091,0.9533041612524298) == 0.0782634881466419\nmy_func(19,11.797593960418698,1.655318099929377,0.6493965120250702) == 2.5490098618792856\nmy_func(16,18.19,0.0,0.05) == 8.005904102775611\nmy_func(9,9.694435652581468,9.303913303231994,0.6288795165472543) == 14.793747825223276\nmy_func(17,3.6497234334034,4.318231391312515,0.0488614973802082) == 52.22208261637498\nmy_func(8,10.0,2.0,0.0) == 26.0\nmy_func(15,14.56,0.0,0.0) == 14.56\nmy_func(20,19.99,9.999,0.999) == 10.00900900900901\nmy_func(10,19.44583404847939,5.886871902852052,0.9393951089122172) == 6.266662288328386\nmy_func(0,0.0,0.0,0.0) == 0.0\nmy_func(16,0.8773005261479772,8.617341545707925,0.6792877273040558) == 12.68584886616994\nmy_func(6,2.469111630492249,7.9991761913575985,0.2321558919017076) == 27.900475692402548\nmy_func(15,15.0,15.0,0.15) == 92.5748913763936\nmy_func(8,11.551639510233132,3.774667230950559,0.4737300702037023) == 7.989056617555948\nmy_func(15,10.052497597987491,7.306760465314225,0.2240373326442247) == 32.11171015776831\nmy_func(18,11.940503683097436,0.6765258146797481,0.029571304248945) == 16.506091921139266\nmy_func(6,8.99859306302551,0.2216566472510595,0.2017700929904956) == 3.1421649883623983\nmy_func(12,2.300347021320699,4.182937557180779,0.4352844293604168) == 9.601976660736348\nmy_func(14,7.399019454846901,6.233865688001771,0.3333453540559927) == 18.662217913004653\nmy_func(10,19.60582015347699,8.682169207305801,0.2919696729945429) == 29.41580019846704\nmy_func(9,8.82827693532791,4.980603373975903,0.6896202202195315) == 7.222283853835582\nmy_func(16,7.2163208724817025,3.4358734473038477,0.1533532129425526) == 21.346308558021523\nmy_func(2,10.645057029349523,3.399626795930104,0.1042202904893817) == 14.986763871647508\nmy_func(10,0.0,1.0,0.0) == 10.0\nmy_func(8,11.3,0.5,0.3) == 2.2220091629999996\nmy_func(20,10.291738103041704,7.493915698293328,0.4003273511799688) == 18.719164858191423\nmy_func(13,0.0,0.0,0.0) == 0.0\nmy_func(9,13.616593286000692,2.5920618118552676,0.7017588017293392) == 3.6938500855290504\nmy_func(11,19.68078339034513,8.522847273249326,0.458191031377789) == 18.602353651038236\nmy_func(9,12.87932737753416,8.92139112699754,0.010062238318785) == 88.89440431757008\nmy_func(6,10.014477567305317,8.198730071000083,0.9918166721237004) == 8.26637654058113\nmy_func(11,7.826528747738404,0.2121761160432689,0.9440812924846872) == 0.2247434810247872\nmy_func(7,15.627127524308287,1.961392680535544,0.5575912966289484) == 3.5577862122535597\nmy_func(19,14.69564983753582,6.6073697212235905,0.4014274454601132) == 16.459583305811705\nmy_func(16,16.774607992342826,5.749168616639323,0.8363563768695905) == 6.874065620399946\nmy_func(15,14.448062046003113,6.927215613128414,0.5624831883590206) == 12.31542684122748\nmy_func(7,2.983192331535307,8.586194022498226,0.4686777038470497) == 18.136705717342423\nmy_func(20,0.1282511148182519,9.555098063861156,0.8148615965424719) == 11.726038022167494\nmy_func(8,15.69214198188048,6.541840571809513,0.3264753130805413) == 19.85375314980563\n.\"\"\"```", "response": "```python\ndef my_func(input1:int, input2:float, input3:float, input4:float):\n    a = input1\n    b = input2\n    c = input3\n    d = input4\n    \n    if d == 0:\n        return a + b + c\n    elif a == 0:\n        return b * c * d\n    elif a > 15 and b > 15 and c > 5:\n        return a * b * (1 - d)\n    elif input4 > 0.5:\n        return a * (1 - d) + b * c * d\n    else:\n        return a * b / (c + 1) * (1 - d)\n```"}
