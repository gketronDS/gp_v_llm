{"submission": "```python\ndef my_func(input1:int, input2:float, input3:float, input4:float):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             an integer in [0, 20],a float in [0.0, 20.0],a float in [0.0, 10.0],a float in [0.0, 1.0]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(0,0.0,0.0,0.0) == 0.0\nmy_func(6,13.136367395484497,8.22278223716322,0.9374484722152512) == 8.771450086036817\nmy_func(15,14.56,0.0,0.0) == 14.56\nmy_func(10,0.0,1.0,0.0) == 10.0\nmy_func(2,8.304451327684435,4.515401971768717,0.7676344569483747) == 6.013014235350417\nmy_func(5,1.3,1.5,0.05) == 7.792487093749998\nmy_func(11,15.73514236645213,9.651765719409443,0.9982902849439476) == 9.66829575021996\nmy_func(13,11.490814016647262,1.2020714166975075,0.3542120259822257) == 3.421160109725244\nmy_func(4,2.871053773339427,0.974043399714506,0.4376365973033878) == 2.2902365157242177\nmy_func(15,15.0,15.0,0.15) == 92.5748913763936\nmy_func(19,3.785164933817844,9.75928767191448,0.7990841371717191) == 12.213091485530107\nmy_func(17,13.176531134942802,0.7881916231002928,0.935670413510972) == 0.8423816888071881\nmy_func(3,2.5473892571586565,5.26308064502064,0.0834738450719532) == 16.46916193395161\nmy_func(13,16.100302686011897,3.2483566582443713,0.9707357836801898) == 3.3462830080595305\nmy_func(2,10.647523459878911,7.941638575097198,0.9769757704826432) == 8.130133097835548\nmy_func(2,3.4460594326306992,7.900332377230004,0.7480555848602337) == 10.10951902571708\nmy_func(13,16.718453671195693,3.3317551175564795,0.1339778728609882) == 23.61189846857098\nmy_func(2,10.40475922640103,1.0451741134628378,0.5491451695972898) == 3.6313721316651977\nmy_func(18,0.0916789273486173,3.474138277757005,0.5193670121531352) == 6.689165420616865\nmy_func(9,3.409822502337423,4.481542753551741,0.4809059772505727) == 9.302787260924422\nmy_func(8,10.0,2.0,0.0) == 26.0\nmy_func(2,3.969153338164777,2.547288448958198,0.9547694526788546) == 2.6706238031581377\nmy_func(18,1.1332434566363347,2.9613960961321673,0.2900451919447721) == 10.19106107299315\nmy_func(5,4.622625554339956,2.095025248558265,0.6620558098012838) == 3.1708514376944787\nmy_func(8,11.3,0.5,0.3) == 2.2220091629999996\nmy_func(1,4.9580494305555645,9.180556801828292,0.3144870748182565) == 12.579363770164116\nmy_func(8,15.28269990981086,4.491292014332115,0.215121826065204) == 20.072088334203123\nmy_func(13,0.0,0.0,0.0) == 0.0\nmy_func(11,19.527382684897265,4.003292764177439,0.6007108608240953) == 6.664788070740206\nmy_func(20,19.99,9.999,0.999) == 10.00900900900901\nmy_func(17,0.0668474117071826,2.014759198490692,0.5771222334542965) == 3.4910426383971775\nmy_func(10,15.01367953924338,1.273512471536764,0.0137623380069887) == 25.045514963927076\nmy_func(3,15.450399982041862,1.0923168894077415,0.489273800284568) == 3.993391552981354\nmy_func(13,9.9836743851834,1.5370807277464626,0.2902762729428116) == 5.349582545607048\nmy_func(16,7.121037347026872,2.8810070734006734,0.9134439210941352) == 3.1540054149681844\nmy_func(3,3.8415305525681465,1.0218883293919856,0.9816259320975574) == 1.0410334007471966\nmy_func(11,10.894732303002728,5.677217051190687,0.3286173391413001) == 17.196349800901878\nmy_func(18,15.217386495462977,0.1794592878247647,0.3345894283986349) == 0.5459589251745454\nmy_func(10,2.094031418408804,5.468761514064035,0.7412878046954743) == 7.377372484023859\nmy_func(19,5.68403335430431,5.176318660790215,0.4645897236910814) == 11.141660372319114\nmy_func(8,11.677559152178272,7.495852365787639,0.0414967791664372) == 60.26343871409835\nmy_func(16,18.19,0.0,0.05) == 8.005904102775611\nmy_func(14,9.04761668938317,2.011475573060938,0.721586463044179) == 2.7875739804285526\nmy_func(10,0.0,2.0,0.0) == 20.0\nmy_func(15,7.998705546065839,5.652924918632385,0.9720656460607044) == 5.815373623726814\nmy_func(20,19.99,9.999,0.0) == 219.9699999999999\nmy_func(15,14.929466200703196,9.152404055231685,0.0040765622412692) == 147.47898933364905\nmy_func(3,7.069717087996321,8.020226154176761,0.6452800274303173) == 12.189858907120549\nmy_func(3,17.24561716249029,2.1466682122085468,0.5088233582154773) == 5.762535853116692\nmy_func(11,9.164561665273869,8.248450377076157,0.5945904456495275) == 13.87226170563249\n.\"\"\"```", "response": "```python\ndef my_func(input1:int, input2:float, input3:float, input4:float):\n    if input1 == 0:\n        return 0.0\n    elif input4 == 0.0:\n        return input1 * input2 + input3\n    elif input2 == 0.0:\n        return input1 + input3\n    elif input3 == 0.0:\n        return input2\n    else:\n        return (input2 * input4 + input3) * input4 + input3 * input1 / input2\n```"}
