{"submission": "```python\ndef my_func(input1:int, input2:float, input3:float, input4:float):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             an integer in [0, 20],a float in [0.0, 20.0],a float in [0.0, 10.0],a float in [0.0, 1.0]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(12,16.371234322915548,0.6552266190804246,0.1944490326255068) == 4.3404183689972395\nmy_func(10,10.87622955326406,2.291713806376202,0.6578247383355422) == 3.483938309242238\nmy_func(12,18.817236610089473,4.219021274594509,0.0458715347053698) == 50.331815033892376\nmy_func(15,15.0,15.0,0.15) == 92.5748913763936\nmy_func(10,0.0,2.0,0.0) == 20.0\nmy_func(18,14.422250004711358,5.041255322228028,0.2493509490422935) == 20.184325369720423\nmy_func(9,10.29539708329712,7.250129867469964,0.1656101805720909) == 37.21465911778501\nmy_func(8,11.3,0.5,0.3) == 2.2220091629999996\nmy_func(10,16.346386270920195,2.1820029089306727,0.1239830455151311) == 17.265767591611965\nmy_func(2,16.195782776030093,9.224861333231589,0.5165271295380038) == 17.47053122917815\nmy_func(11,9.972518142905528,2.9712555819359645,0.8016943787726172) == 3.7062199190887326\nmy_func(1,16.38704863958203,3.467040829922672,0.9893258368639036) == 3.6419588604207167\nmy_func(18,0.032960471298038,3.6670891143212705,0.7040665975301427) == 5.208440687402519\nmy_func(7,2.378299995128683,9.619174001268949,0.0823778313968901) == 54.1021145577527\nmy_func(17,14.5351199995298,2.476424111248956,0.1882547796028781) == 13.19446723671448\nmy_func(8,10.0,2.0,0.0) == 26.0\nmy_func(14,17.044576454185925,4.249125592222249,0.0443908076117647) == 54.05614884302086\nmy_func(15,9.259200012286229,9.588757856453826,0.4497902887840307) == 21.316739542544276\nmy_func(8,10.780259322787405,3.395984438796317,0.967688651187963) == 3.509377147944916\nmy_func(20,0.0354850828758523,5.924657511081111,0.1059628278110134) == 49.964951269920206\nmy_func(1,18.74459384640207,0.2957897219594907,0.8846918414703934) == 2.4571943207735094\nmy_func(12,16.308621537656983,5.658186652624984,0.0276681309864166) == 70.10838616776545\nmy_func(0,0.0,0.0,0.0) == 0.0\nmy_func(8,9.829352960906329,6.353772909938113,0.2581361102741439) == 23.25758440395408\nmy_func(10,0.0,1.0,0.0) == 10.0\nmy_func(10,0.95902941781828,5.037216381880696,0.3907912478983133) == 12.80577841943417\nmy_func(4,4.1834126199397215,5.5974957742343845,0.8582395346890471) == 6.521122564868239\nmy_func(18,7.28541127685014,4.589732662840093,0.1876921633964342) == 24.046419302834927\nmy_func(1,7.259163010041507,7.146549510225025,0.6081709060911217) == 9.990900774986436\nmy_func(16,18.19,0.0,0.05) == 8.005904102775611\nmy_func(5,1.3,1.5,0.05) == 7.792487093749998\nmy_func(8,3.7957416015700978,3.4940351121396915,0.2035951902210305) == 14.998609009128137\nmy_func(20,19.99,9.999,0.0) == 219.9699999999999\nmy_func(13,10.643999228603093,1.904714822466932,0.0319975296036989) == 27.49734789313962\nmy_func(1,16.214277105850478,4.4554002575756275,0.9226390252256864) == 5.709752539745058\nmy_func(2,15.965633172793297,5.235256132030152,0.0288155139885631) == 25.378429794096565\nmy_func(13,0.0,0.0,0.0) == 0.0\nmy_func(15,14.56,0.0,0.0) == 14.56\nmy_func(13,14.006564581666874,4.193177173168338,0.7234851583670512) == 5.795803069192749\nmy_func(16,13.616824061461584,1.1686237698398472,0.0821387379027553) == 14.07248493835349\nmy_func(3,6.659238485069725,1.3178977368123834,0.2152869739437113) == 6.381383093311797\nmy_func(15,16.62674792044107,3.1551030454589246,0.5394066851716929) == 5.849306129788908\nmy_func(18,1.971960766836338,4.715325819058252,0.7939488098542542) == 5.939080404846802\nmy_func(5,7.77444377999903,1.613130956043024,0.8701236322915202) == 1.8541288427679872\nmy_func(5,6.027188104322063,0.1240255591850236,0.1224634116015808) == 3.622199657041509\nmy_func(20,19.99,9.999,0.999) == 10.00900900900901\nmy_func(10,3.107690134692087,1.465787041118194,0.9750128857666426) == 1.5033514556740046\nmy_func(10,6.541310166794505,1.3049879028810918,0.7191085749240681) == 1.8147444503343673\nmy_func(6,8.245591961468051,5.13604438112162,0.8705394636139914) == 5.899851999348833\nmy_func(15,9.475230566556569,6.187061404503165,0.3915337371834154) == 15.798445068418342\n.\"\"\"```", "response": "```python\ndef my_func(input1:int, input2:float, input3:float, input4:float):\n    if input4 == 0:\n        return input1 * input2 + input3\n    elif input2 == 0:\n        return input1 * input4 + input3\n    elif input3 == 0:\n        return input1 * input2 * input4\n    elif input1 == 0:\n        return input2 * input3 * input4\n    else:\n        return (input1 * input2 + input3) / (input4 * input3 + 1)\n```"}
