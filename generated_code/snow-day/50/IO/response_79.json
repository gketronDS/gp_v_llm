{"submission": "```python\ndef my_func(input1:int, input2:float, input3:float, input4:float):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             an integer in [0, 20],a float in [0.0, 20.0],a float in [0.0, 10.0],a float in [0.0, 1.0]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(13,6.476060388549718,9.16382228756537,0.458771850541268) == 19.97006734230552\nmy_func(12,15.906721431750611,3.242989485958976,0.5924360440017717) == 5.474210006077848\nmy_func(10,0.0,1.0,0.0) == 10.0\nmy_func(13,19.934655582745012,4.281333987760627,0.456358087047917) == 9.385346612426702\nmy_func(14,6.364317434987308,7.207313645873944,0.5490887395064905) == 13.125857074771922\nmy_func(6,9.940129378004604,6.158691323599003,0.7918429506075555) == 7.777843590643131\nmy_func(1,7.337487228729169,5.6531314709274145,0.4913005603797872) == 9.385707112402413\nmy_func(16,5.314690651066427,1.5567126106173943,0.3661542718466325) == 4.252242766156529\nmy_func(15,14.56,0.0,0.0) == 14.56\nmy_func(13,16.156790227888216,5.724791838810277,0.8514694825628412) == 6.723425743594178\nmy_func(4,16.114396781282423,0.2399781227062003,0.2876173776535073) == 4.769662739198619\nmy_func(0,15.412094328649202,5.216477291079019,0.1032953608589631) == 15.412094328649202\nmy_func(6,3.7745123406533865,9.245655971465125,0.9438367373173616) == 9.795821064755332\nmy_func(12,10.791494358030471,0.0010303929443677,0.205019876592207) == 0.692338766259829\nmy_func(10,0.0,2.0,0.0) == 20.0\nmy_func(1,0.2056400997498131,8.235547063963073,0.053307480664712) == 8.430225008071584\nmy_func(8,11.3,0.5,0.3) == 2.2220091629999996\nmy_func(20,7.199314575962674,6.017727513458025,0.9988006689200588) == 6.024953427358655\nmy_func(5,18.691582425751243,9.892311715447326,0.5271412014858539) == 18.764203552194807\nmy_func(16,10.528638596288026,5.996266238221111,0.856163350071753) == 7.0036474204585835\nmy_func(6,11.110536505955874,5.978942218787551,0.1077411354808828) == 33.09800445503727\nmy_func(19,16.94852259853594,4.806904143642903,0.1975130323732435) == 24.22419942159321\nmy_func(13,0.0,0.0,0.0) == 0.0\nmy_func(20,19.99,9.999,0.999) == 10.00900900900901\nmy_func(5,1.3273695175476163,4.812003590374387,0.4048353956756727) == 11.097812986690183\nmy_func(12,4.836076291513498,4.548214481056393,0.7969261151923603) == 5.707197180436119\nmy_func(15,15.0,15.0,0.15) == 92.5748913763936\nmy_func(10,7.457907728393329,3.120769978581146,0.973360294080072) == 3.2061817166382394\nmy_func(2,5.750581089630091,4.18304337870566,0.5041873680676476) == 7.670715429555326\nmy_func(0,0.0,0.0,0.0) == 0.0\nmy_func(16,11.355661336835617,3.891920713394192,0.8489188653887147) == 4.584561460549624\nmy_func(6,2.341517932764816,4.8211936851186685,0.203444213589649) == 18.24249640154516\nmy_func(3,4.672876954951086,1.9279668010207272,0.1747535388197735) == 7.458266849446021\nmy_func(14,11.66084491338938,1.646076192878203,0.5848937186740375) == 2.8143566586667097\nmy_func(7,6.158128881996667,3.865967082747479,0.4264549936186758) == 9.006003513822298\nmy_func(1,12.981911259693964,4.6932654488305605,0.1758700378491346) == 15.39204748392804\nmy_func(5,1.3,1.5,0.05) == 7.792487093749998\nmy_func(8,10.0,2.0,0.0) == 26.0\nmy_func(15,18.57044105686465,7.4032803969336065,0.990999713393785) == 7.47051719276515\nmy_func(20,19.99,9.999,0.0) == 219.9699999999999\nmy_func(19,12.458886942626838,1.9281655002674192,0.6370371985884912) == 3.0267706981798277\nmy_func(14,14.941609198653802,3.3631715660054384,0.3626814796157991) == 9.283410873920914\nmy_func(4,6.2311255929860465,6.072261485428591,0.9646407287535248) == 6.294842430295057\nmy_func(17,5.410097537385321,7.330997148289164,0.2577907953587031) == 28.292833775025557\nmy_func(12,15.282166198396755,1.558447811060425,0.1098207554118334) == 14.461032695288573\nmy_func(11,8.600507484179651,9.187163319313845,0.0669335035259358) == 77.21348033642454\nmy_func(7,7.936684147556323,7.021337065357254,0.528346432557569) == 13.26147512978814\nmy_func(20,19.29830862253864,7.549477879862633,0.574104621224187) == 13.150003913655878\nmy_func(13,10.402004925409386,0.6626132077400582,0.6649130066445557) == 0.9965475191168656\nmy_func(16,18.19,0.0,0.05) == 8.005904102775611\n.\"\"\"```", "response": "```python\ndef my_func(input1: int, input2: float, input3: float, input4: float):\n    if input1 == 0:\n        return input2\n    elif input4 == 0:\n        return input1 * input2\n    elif input3 == 0:\n        return input2 / input4\n    else:\n        return (input1 + input2 + input3) * input4 / (input3 + 1)\n```"}
