{"submission": "```python\ndef my_func(input1:int, input2:float, input3:float, input4:float):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             an integer in [0, 20],a float in [0.0, 20.0],a float in [0.0, 10.0],a float in [0.0, 1.0]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(15,12.437262935043446,6.862917096739826,0.268183946151051) == 25.46870093507364\nmy_func(4,19.8668008298331,0.9098210219127169,0.0634905976137677) == 18.589001080052668\nmy_func(16,0.2303540593772646,2.998237455903492,0.791143919085564) == 3.789749732680827\nmy_func(3,19.130605267727866,8.91277106468859,0.1773463976749174) == 32.92743037520224\nmy_func(0,10.7221252329272,0.6111802134561761,0.1400869605063501) == 10.7221252329272\nmy_func(6,7.862935119013164,9.421133770976429,0.6963185705868395) == 13.525473981002952\nmy_func(6,15.382546105084264,0.5049232971135698,0.2452509044899079) == 4.521675091240903\nmy_func(13,12.914542553809936,7.588660790355762,0.8938242146756029) == 8.490104279744523\nmy_func(3,10.2710723618142,0.0022559940495803,0.4284980736319482) == 1.9214886041021304\nmy_func(8,7.594267975197599,0.5675541503946113,0.3900176998753413) == 1.5728640956188784\nmy_func(0,0.0,0.0,0.0) == 0.0\nmy_func(9,8.40354311305309,6.20165665540323,0.9382861588769188) == 6.609557859031149\nmy_func(13,13.264980321251048,2.8737277409576603,0.0475160620430926) == 35.405214120266145\nmy_func(13,9.03492255906064,3.679912477736092,0.7211576034307992) == 5.102785625419049\nmy_func(13,0.0,0.0,0.0) == 0.0\nmy_func(15,14.56,0.0,0.0) == 14.56\nmy_func(16,1.089475783692475,4.920423697912457,0.0966732517154476) == 41.106695181061355\nmy_func(13,13.844094060372347,9.989894110916175,0.9036324048218984) == 11.0552632437803\nmy_func(8,10.0,2.0,0.0) == 26.0\nmy_func(19,2.3229351043586277,9.566201722020583,0.6518089626218323) == 14.676388719290465\nmy_func(19,1.569747197060396,6.305690727276363,0.8213838214045511) == 7.676911284293033\nmy_func(16,9.703125259744716,7.283633798497032,0.6551154467093444) == 11.11809193012112\nmy_func(5,1.3,1.5,0.05) == 7.792487093749998\nmy_func(11,10.032989156593304,9.98230341462579,0.474814612536556) == 21.01436663921642\nmy_func(6,19.29709001293183,9.238970838395367,0.1502079088902315) == 45.61145379699487\nmy_func(1,3.4796878087385608,1.475954823637573,0.6758211164054354) == 2.6039961327320564\nmy_func(11,14.73688182439134,1.7531396253295015,0.8897126394419951) == 1.9704560191058216\nmy_func(16,18.19,0.0,0.05) == 8.005904102775611\nmy_func(19,12.101949498260897,3.0078531917225018,0.5062724072284687) == 5.941184684660182\nmy_func(14,1.0370157751878772,0.4544914493906371,0.8677462844086451) == 0.5237607553693977\nmy_func(9,14.997714336100486,5.505755411343257,0.301057740317038) == 18.157056443557003\nmy_func(20,19.99,9.999,0.0) == 219.9699999999999\nmy_func(10,4.960764770241668,8.159606638843712,0.2479004319230231) == 31.296033773969334\nmy_func(14,1.8728440439522245,5.129958241116249,0.7112503598663866) == 7.2125912677274115\nmy_func(15,15.0,15.0,0.15) == 92.5748913763936\nmy_func(1,1.4660489928626697,0.3087092458312002,0.6073602099530511) == 0.8843384145873397\nmy_func(8,11.3,0.5,0.3) == 2.2220091629999996\nmy_func(17,9.018113485767872,3.014632322045733,0.1980824695931548) == 15.07364341165145\nmy_func(10,0.0,1.0,0.0) == 10.0\nmy_func(19,7.099218794316188,7.805020550986454,0.6000209311895299) == 13.007913637539968\nmy_func(20,19.99,9.999,0.999) == 10.00900900900901\nmy_func(16,7.207974815241696,7.411864584099835,0.4344124114968443) == 17.060735440224573\nmy_func(10,0.0,2.0,0.0) == 20.0\nmy_func(5,8.986539535405347,2.889123249346671,0.9960740589084464) == 2.900510482642613\nmy_func(7,4.809459568338042,0.043582959684133,0.963258248916052) == 0.0452453536193334\nmy_func(8,4.320386036864365,0.638909707425318,0.9623495813516408) == 0.6639060480934218\nmy_func(11,18.308773699063114,2.4263253130548623,0.2224077961535079) == 11.37437040065646\nmy_func(4,6.01742824849029,2.2090017503056716,0.082242947468176) == 12.073452782717895\nmy_func(5,17.734542949080684,9.098440342812854,0.5300627250574136) == 17.177894329373636\nmy_func(2,2.0571542908302787,8.124781294031202,0.6416422930177846) == 11.30053954869648\n.\"\"\"```", "response": "```python\ndef my_func(input1: int, input2: float, input3: float, input4: float):\n    if input1 == 0 or (input1 >= 10 and input4 == 0.0):\n        return input2\n\n    if input1 + input4 > 20:\n        return input1 * input2 * input3\n\n    if input1 < 10:\n        return (input2 + input3) * input4 * 10\n\n    return (input2 + input3) / (1 - input4)\n```"}
