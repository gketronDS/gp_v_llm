{"submission": "```python\ndef my_func(input1:int, input2:float, input3:float, input4:float):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             an integer in [0, 20],a float in [0.0, 20.0],a float in [0.0, 10.0],a float in [0.0, 1.0]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(16,19.17320915337523,5.816116615280488,0.530963207201788) == 10.953942723621177\nmy_func(19,4.839466890644786,5.679721533022882,0.5328681096238714) == 10.658772415700966\nmy_func(15,14.56,0.0,0.0) == 14.56\nmy_func(10,0.0,1.0,0.0) == 10.0\nmy_func(13,0.0,0.0,0.0) == 0.0\nmy_func(4,1.2459956587948562,5.52729962389097,0.0978462548253398) == 19.89608945002027\nmy_func(8,4.651958602280908,5.988629602642491,0.1771724598707815) == 27.67626265833732\nmy_func(2,3.8399625659252656,3.9857804624281217,0.5254150161075603) == 6.742250270312729\nmy_func(19,6.040515512613165,2.3024248688275897,0.9326713680823906) == 2.46863466342005\nmy_func(20,5.617618314448329,9.040229559027072,0.7733471818438425) == 11.689742681252715\nmy_func(6,12.420913745892006,9.747096075290669,0.9482616458509334) == 10.27891000010283\nmy_func(15,7.072092687712881,3.4873714673534604,0.3310076372904419) == 10.527288697578069\nmy_func(14,5.174397902102433,1.5919910708808804,0.471944684732607) == 3.373493841819621\nmy_func(16,6.217346559746375,6.516806506708378,0.4711103505435852) == 13.832580875077593\nmy_func(15,15.0,15.0,0.15) == 92.5748913763936\nmy_func(0,0.0,0.0,0.0) == 0.0\nmy_func(6,4.779523345787558,5.335396340170195,0.7892412324895223) == 6.759985563480804\nmy_func(16,14.428660874079933,7.091046379566191,0.392487142757162) == 18.065699506365817\nmy_func(6,19.63225485887869,7.319804094388774,0.1613649312767283) == 36.410828927331266\nmy_func(20,19.99,9.999,0.999) == 10.00900900900901\nmy_func(5,9.412181260347303,1.4146076059935777,0.2496361011605605) == 6.557662479328027\nmy_func(6,13.078540318353545,0.4190235572826339,0.4124519057091576) == 1.5121845024774343\nmy_func(5,4.434674577083042,4.658728792089155,0.3624770970281205) == 11.965979744535703\nmy_func(8,11.3,0.5,0.3) == 2.2220091629999996\nmy_func(17,14.991172189084946,9.218721075706895,0.3309525125414015) == 27.841245254198736\nmy_func(19,15.105062935714535,9.790250849141056,0.0272579015834922) == 155.65521322621422\nmy_func(20,19.99,9.999,0.0) == 219.9699999999999\nmy_func(8,10.0,2.0,0.0) == 26.0\nmy_func(12,10.096138047436966,9.706158856716762,0.1109749006049291) == 68.6035357786228\nmy_func(7,13.943014044459678,1.851840722813932,0.7249222603699941) == 2.5558942125115545\nmy_func(9,2.754791568532109,9.87091429998034,0.9371952637832128) == 10.532398830125558\nmy_func(4,5.400638626609709,4.962052211096182,0.4482305613879314) == 10.544792873068229\nmy_func(12,11.817583815473338,0.0315084140508525,0.7199441550277026) == 0.0437678213557356\nmy_func(8,7.162980693635292,3.840853843065734,0.1543670026933361) == 20.248143885181296\nmy_func(3,16.890906268047022,5.076525821551869,0.7235487682020776) == 7.224781330374157\nmy_func(15,10.156292406930504,2.161526719720083,0.5023110183003473) == 4.303330689678786\nmy_func(7,12.368723032240307,8.142823598230937,0.8371453201708585) == 9.726901794792544\nmy_func(5,1.3,1.5,0.05) == 7.792487093749998\nmy_func(11,18.375694698257487,3.764510172319182,0.3156108156872628) == 12.027182386208368\nmy_func(17,11.15857769165554,4.727552201732076,0.6025864586943249) == 7.8454343616515665\nmy_func(2,18.76711247500611,1.880136542056935,0.907002409212326) == 2.217293056929039\nmy_func(10,0.0,2.0,0.0) == 20.0\nmy_func(9,7.259808118815299,2.657696009067246,0.409643747465779) == 6.494546850703279\nmy_func(15,3.2554723826287058,7.850699235795126,0.015165024886537) == 108.633548407947\nmy_func(11,10.688364647095195,4.076411129530214,0.9552412864241576) == 4.267415141560545\nmy_func(9,3.096047143361478,3.985289197797206,0.5374088503747961) == 7.411558947841003\nmy_func(20,10.009171233169372,7.264793009506063,0.3479849605800837) == 20.874648719503227\nmy_func(7,16.123131504895134,8.84980856337841,0.7721872055787435) == 11.460851917012\nmy_func(7,17.80905390833988,9.034166312071248,0.6919214538049339) == 13.057887466002844\nmy_func(16,18.19,0.0,0.05) == 8.005904102775611\n.\"\"\"```", "response": "```python\ndef my_func(input1:int, input2:float, input3:float, input4:float):\n    if input2 == 0.0:\n        return input3 * input1\n    elif input3 == 0.0:\n        return input2 * input1\n    else:\n        if input4 == 0.0:\n            return input2 * input3 * input1\n        else:\n            return (input2 * input3) / input4\n```"}
