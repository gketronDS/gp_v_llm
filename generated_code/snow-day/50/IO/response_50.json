{"submission": "```python\ndef my_func(input1:int, input2:float, input3:float, input4:float):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             an integer in [0, 20],a float in [0.0, 20.0],a float in [0.0, 10.0],a float in [0.0, 1.0]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(12,16.40190755713504,0.1847080131745793,0.7796029344937534) == 0.2369259664734367\nmy_func(3,10.386957823873546,1.6035966700413418,0.2097699590119927) == 8.997844873584684\nmy_func(16,3.920721276385224,1.6595023202599024,0.5605732178716513) == 2.960368615317498\nmy_func(9,19.054527538989863,6.307662777670161,0.178042777105604) == 32.623792038734464\nmy_func(20,19.964156010909313,7.924141171734797,0.9512342053108136) == 8.330378709568798\nmy_func(5,0.2892650343746594,9.24881400126342,0.3504603999221933) == 23.37268032766838\nmy_func(19,18.82002248761291,3.5878858086229393,0.1914545436647644) == 18.741553152407384\nmy_func(13,10.928092477653117,8.740053242542306,0.3604499312270137) == 24.20773133484729\nmy_func(8,15.780472810647614,6.371306398965224,0.7863345702119311) == 8.10257219502875\nmy_func(20,2.5603876908699097,1.003089960491712,0.6391920694872202) == 1.569309147064465\nmy_func(5,16.571875371123635,6.413333657050617,0.7005193463247628) == 9.17298010412824\nmy_func(3,9.0865498194794,7.240890584868258,0.8511781759825513) == 8.508814047131608\nmy_func(1,3.001321541143056,1.794870002516139,0.8006468562900767) == 2.393192887027319\nmy_func(1,1.996236938707987,1.5613669953210652,0.3171023126233108) == 2.9245925842206715\nmy_func(13,0.0,0.0,0.0) == 0.0\nmy_func(4,2.3991567085748433,9.94256071608589,0.1669638222273629) == 32.02770132719209\nmy_func(8,10.750575624004805,2.6137017347948275,0.5135983087859451) == 5.106737611461817\nmy_func(5,1.3,1.5,0.05) == 7.792487093749998\nmy_func(9,1.27111814674143,2.853609584486506,0.4802369801215446) == 5.929154618185332\nmy_func(0,9.164968156006877,7.43748847673806,0.3687584141623742) == 9.164968156006877\nmy_func(19,8.460589204345387,5.962431596346237,0.757659106394443) == 7.8695438964909\nmy_func(16,2.024352761342061,4.678534773019559,0.4536936296643236) == 10.311579835729692\nmy_func(10,1.7639278160685825,6.261093510797737,0.2244108096567393) == 25.841598218109105\nmy_func(10,0.0,1.0,0.0) == 10.0\nmy_func(15,14.56,0.0,0.0) == 14.56\nmy_func(15,3.388183957489219,0.2749037103551321,0.0693657078359877) == 3.767539925619491\nmy_func(20,19.99,9.999,0.999) == 10.00900900900901\nmy_func(12,3.0416529285590888,5.544391341891679,0.6569608841539297) == 8.439439941291461\nmy_func(7,17.285813826671564,0.8864279954922216,0.968776522064553) == 0.9149973969868744\nmy_func(20,11.156804948045217,4.163344320186556,0.5524676620626854) == 7.535906287123068\nmy_func(20,19.99,9.999,0.0) == 219.9699999999999\nmy_func(8,8.568643057960209,7.655936117445376,0.239902401708258) == 29.31176487338021\nmy_func(8,10.0,2.0,0.0) == 26.0\nmy_func(11,18.598339387458942,3.5694468824545886,0.8144347059024326) == 4.382729469407985\nmy_func(1,12.843209588115872,8.80530009349557,0.2091697918047643) == 18.96209820596029\nmy_func(0,0.0,0.0,0.0) == 0.0\nmy_func(20,13.438346314723278,4.276600091163991,0.2607784926414279) == 16.392329263670444\nmy_func(10,10.73579236736433,8.395788340359008,0.5060419768766063) == 16.58602722359862\nmy_func(18,19.540314203518346,0.1793520951315463,0.4320319997412152) == 0.4158596305959089\nmy_func(5,5.200006031944628,6.270197815250658,0.1156090090776225) == 27.70615340778764\nmy_func(10,0.0,2.0,0.0) == 20.0\nmy_func(2,17.55075232389871,6.963902129174842,0.11863673097236) == 26.73507535149285\nmy_func(15,15.0,15.0,0.15) == 92.5748913763936\nmy_func(0,13.430986757309832,2.328544392213977,0.2926472123267338) == 13.430986757309832\nmy_func(1,12.493680039925756,7.716341057632058,0.2628236852702713) == 16.926386066876894\nmy_func(16,18.19,0.0,0.05) == 8.005904102775611\nmy_func(19,6.472289001135749,7.439150569631309,0.0291187798894811) == 113.4520203642935\nmy_func(10,2.4764007663401233,7.321234505481887,0.6135444773156346) == 11.931984871825968\nmy_func(7,4.572379282935746,0.2283988843450013,0.1826327316591585) == 2.0602324241268684\nmy_func(8,11.3,0.5,0.3) == 2.2220091629999996\n.\"\"\"```", "response": "```python\ndef my_func(input1: int, input2: float, input3: float, input4: float):\n    if input4 == 0:\n        return input1 * input2 + input3 * 10\n    elif input1 == 0:\n        return input2\n    elif input3 == 0:\n        return input2 / input1 + input4 * 100\n    else:\n        return (input2**input4 + input3**input4) / input1\n```"}
