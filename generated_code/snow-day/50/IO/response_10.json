{"submission": "```python\ndef my_func(input1:int, input2:float, input3:float, input4:float):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             an integer in [0, 20],a float in [0.0, 20.0],a float in [0.0, 10.0],a float in [0.0, 1.0]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(16,18.19,0.0,0.05) == 8.005904102775611\nmy_func(8,10.0,2.0,0.0) == 26.0\nmy_func(5,1.3,1.5,0.05) == 7.792487093749998\nmy_func(15,15.0,15.0,0.15) == 92.5748913763936\nmy_func(13,0.0,0.0,0.0) == 0.0\nmy_func(0,10.416000362707608,5.1631496705488455,0.9270648345399698) == 10.416000362707608\nmy_func(14,0.0373617691604577,2.8239891725117117,0.3633263186631582) == 7.758687870094243\nmy_func(3,0.7064764002600432,9.215691518837987,0.5047109780716643) == 16.126671692010547\nmy_func(20,19.99,9.999,0.999) == 10.00900900900901\nmy_func(19,18.36167247711322,8.283809763546907,0.6956402605974749) == 11.908180468333452\nmy_func(11,16.42641660154853,2.3356008026379116,0.0550578965363516) == 28.478432829044927\nmy_func(1,10.302332891080322,4.395316156253037,0.3640349306076158) == 10.947240008232376\nmy_func(10,0.0,2.0,0.0) == 20.0\nmy_func(11,8.674980830175043,7.3623544131749235,0.2016631917251711) == 34.1714300543718\nmy_func(3,10.604727086309255,8.221831281133309,0.9736941186196744) == 8.443996346600496\nmy_func(12,7.820725088269445,1.90111223921959,0.2615990947914749) == 7.281814493059218\nmy_func(3,10.47337483981499,8.789623292803068,0.4644578763205993) == 17.626420143999425\nmy_func(5,12.874088512632962,4.992524195780694,0.56988658474189) == 8.821109673797823\nmy_func(15,0.8066955121546115,3.83287420218258,0.541518852018649) == 7.077954816307029\nmy_func(4,12.004135358855724,6.20610988818294,0.1510776442151042) == 25.97853308669273\nmy_func(19,8.59939995494954,5.913168870780315,0.3329888870059364) == 17.753684437048104\nmy_func(0,0.0,0.0,0.0) == 0.0\nmy_func(20,19.99,9.999,0.0) == 219.9699999999999\nmy_func(17,19.78132950884714,0.128009669203637,0.9542431431576954) == 0.1341478533238802\nmy_func(6,6.687894952566387,2.162004131497218,0.5047662772332575) == 4.3186538506325585\nmy_func(9,6.546149647000801,0.1449207583264133,0.344632843284913) == 0.5571274899705823\nmy_func(4,7.482079255512295,7.526607722562028,0.7182222493525721) == 10.460600562123512\nmy_func(3,12.564618529378285,8.117347430500661,0.5262100829101363) == 15.121730225193598\nmy_func(11,9.043948130393918,2.26970890592171,0.889837018675213) == 2.5507018234287493\nmy_func(0,6.129142898445026,2.129582075592346,0.8635755290127233) == 6.129142898445026\nmy_func(8,11.3,0.5,0.3) == 2.2220091629999996\nmy_func(13,9.121674733041,7.0156656083957225,0.920872800224084) == 7.618495851640472\nmy_func(1,4.981642948131499,0.9501167649514352,0.6099429707284333) == 2.8932416141912576\nmy_func(20,0.7805845591170724,8.340018019469705,0.7808074549834171) == 10.681273553729485\nmy_func(17,1.8553171568071656,8.947732435477905,0.2650694741103176) == 33.586358148405985\nmy_func(5,18.00863704367603,0.0793971342192589,0.6405582016554893) == 0.2312559719297205\nmy_func(10,0.0,1.0,0.0) == 10.0\nmy_func(15,14.56,0.0,0.0) == 14.56\nmy_func(11,4.744984256659317,7.47323786987659,0.6795641400035012) == 10.997081646046375\nmy_func(3,2.6789350770452236,0.8692343539266179,0.7667101757082365) == 1.1533385808545444\nmy_func(9,17.163975155486632,2.822094540986301,0.3769570104288582) == 7.623421922300255\nmy_func(4,9.076567331737165,3.954158770809272,0.6293802808727179) == 6.3353373106254995\nmy_func(8,12.11492127204696,2.165349042896918,0.3807671176633309) == 5.825775103122455\nmy_func(6,2.980891702817696,1.573699361600136,0.8890379533189227) == 1.77011719799148\nmy_func(9,11.033881103954116,8.521182935701425,0.8272252127573306) == 10.300922756548744\nmy_func(7,17.129821255120998,4.685332825471827,0.1322384963463722) == 28.65014328095912\nmy_func(0,7.536322634688608,2.050570366602058,0.0144217565829479) == 7.536322634688608\nmy_func(4,3.6007841489074854,0.0399492682529378,0.1671138016238615) == 1.8567821736872463\nmy_func(3,16.017391728472006,3.023246621083339,0.3278557952721369) == 11.284978915622196\nmy_func(12,8.62278638859186,6.581944928838403,0.1043395344133997) == 48.56781824727576\n.\"\"\"```", "response": "```python\ndef my_func(input1: int, input2: float, input3: float, input4: float):\n    if input1 == 0:\n        return input2\n    elif input4 == 0:\n        return input1 * input2 + input3\n    else:\n        return (input1 * input2 * input3) / input4\n```"}
