{"submission": "```python\ndef my_func(input1:str):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a string in form of completed bowling card, with one character per roll. The function should output an integer that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(XXXXX----------) == 120\nmy_func(725-8/3452435-339/2/4) == 85\nmy_func(XXXXX81XXX-1) == 208\nmy_func(X72247-9/-5X8/613-) == 102\nmy_func(532/4362X179-41447/5) == 100\nmy_func(7115XXX548/279-X53) == 145\nmy_func(X52X52X52X52X52) == 120\nmy_func(72277/5/2/7-444-139-) == 94\nmy_func(-98-8/1-4-715-6/-425) == 67\nmy_func(27-7228/41545-14722/6) == 83\nmy_func(--------------------) == 0\nmy_func(-17116X8-7/8/3/8/53) == 114\nmy_func(111111X111111111111) == 30\nmy_func(729/-2449/8/7-317224) == 90\nmy_func(54729/9-25X331241X9X) == 112\nmy_func(------3/61----------) == 23\nmy_func(------X------------) == 10\nmy_func(62X8-818-279-546344) == 95\nmy_func(3/514327429-X54X9-) == 108\nmy_func(XXXXXXXXXXX9) == 299\nmy_func(4/6322-95-8-71235/-2) == 76\nmy_func(--X34--------------) == 24\nmy_func(5-818/-58/--34178163) == 72\nmy_func(-/-/-/-/-/-/-/-/-/-/-) == 100\nmy_func(513-6/1431457--86-62) == 67\nmy_func(--------------1-----) == 1\nmy_func(41X-35161613/51-74/-) == 79\nmy_func(229-4-2231418-257/0/3) == 68\nmy_func(7-3-429/8-8---5/428-) == 78\nmy_func(-4-/-2-/-7-6-/-3-/-4) == 66\nmy_func(23X61236-X4-X327-) == 85\nmy_func(9-XX6/26-59/-7XX7-) == 141\nmy_func(129/448/-26/6-32535/9) == 91\nmy_func(----------XX7-----) == 51\nmy_func(----------3/--------) == 10\nmy_func(XXXX9/XXX2/XXX) == 251\nmy_func(435324---74-43-3X13) == 60\nmy_func(XXXXXXXXXXXX) == 300\nmy_func(11111111111111111111) == 20\nmy_func(5/5/5/5/5/5/5/5/5/5/5) == 150\nmy_func(1-2754248/5226452362) == 77\nmy_func(6-6-8-X6-5/8-0/1--9) == 89\nmy_func(63-5X9-9-27179/818/1) == 106\nmy_func(1554273154628-728/52) == 84\nmy_func(626115-23-317/-645-7) == 62\nmy_func(8/9-5-3---7-51618/22) == 72\nmy_func(437-5315-51-6/364/33) == 75\nmy_func(3414369-54-8189-7252) == 81\nmy_func(52528-42432/3481X8-) == 90\nmy_func(24815361356212813581) == 75\n.\"\"\"```", "response": "```python\ndef my_func(input1: str):\n    score = 0\n    frames = []\n    frame = []\n    for roll in input1:\n        if roll == 'X':\n            frames.append([10])\n            if len(frames) < 10:\n                frames.append([])\n        elif roll == '/':\n            frame.append(10 - frame[0])\n            frames.append(frame)\n            frame = []\n        elif roll == '-':\n            frame.append(0)\n        else:\n            frame.append(int(roll))\n        if len(frame) == 2:\n            frames.append(frame)\n            frame = []\n    if frame:\n        frames.append(frame)\n\n    for i in range(10):\n        frame = frames[i]\n        if len(frame) == 1:\n            score += 10\n            if len(frames[i + 1]) > 1:\n                score += sum(frames[i + 1][:2])\n            else:\n                score += frames[i + 1][0]\n                if len(frames) > i + 2:\n                    score += frames[i + 2][0]\n        elif len(frame) == 2 and frame[1] == 10 - frame[0]:\n            score += 10\n            score += frames[i + 1][0]\n        else:\n            score += sum(frame)\n    \n    return score\n```"}
