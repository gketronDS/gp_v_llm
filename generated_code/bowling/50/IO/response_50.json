{"submission": "```python\ndef my_func(input1:str):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a string in form of completed bowling card, with one character per roll. The function should output an integer that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(6-816-81812/-3639/8-) == 87\nmy_func(81-136X--1/26X9/11) == 82\nmy_func(7115XXX548/279-X53) == 145\nmy_func(4261116334238-627---) == 59\nmy_func(--X34--------------) == 24\nmy_func(168/6/616-222534169/5) == 92\nmy_func(--------------------) == 0\nmy_func(X636/-2-6415/521816) == 89\nmy_func(X365/81637-9-631-9-) == 99\nmy_func(5/5/5/5/5/5/5/5/5/5/5) == 150\nmy_func(X429-9-X537-538/X86) == 125\nmy_func(41416-X619--74326X22) == 85\nmy_func(526/-8X7-X816/2326) == 102\nmy_func(--------------1-----) == 1\nmy_func(15X2-328/-534X53--) == 73\nmy_func(72X54546144175/519-) == 99\nmy_func(2-7-53-8411/XX3/33) == 112\nmy_func(24815361356212813581) == 75\nmy_func(816-X4-177227313624) == 78\nmy_func(----------3/--------) == 10\nmy_func(-4-/-2-/-7-6-/-3-/-4) == 66\nmy_func(X52X52X52X52X52) == 120\nmy_func(6-9/4-8/8/539/5233X44) == 111\nmy_func(9/8/-13662436281629/1) == 89\nmy_func(XXXXXXXXXXX9) == 299\nmy_func(11111111111111111111) == 20\nmy_func(365/8/7/428-11X4/9-) == 122\nmy_func(532/4362X179-41447/5) == 100\nmy_func(XXXXX81XXX-1) == 208\nmy_func(71719/5-51237/XX7/3) == 127\nmy_func(5--31/61--6/-75/6131) == 75\nmy_func(6/9-1-819/27164/9-X34) == 111\nmy_func(----------XX7-----) == 51\nmy_func(8/333-X3/9-816/X-8) == 125\nmy_func(XXXX9/XXX2/XXX) == 251\nmy_func(-85-2/639--85/4115-5) == 85\nmy_func(------3/61----------) == 23\nmy_func(------X------------) == 10\nmy_func(1-43315/3-5/6253337/9) == 85\nmy_func(XXXXXXXXXXXX) == 300\nmy_func(X9/8-X33-9519-5225) == 106\nmy_func(111111X111111111111) == 30\nmy_func(6/423-162615X-82131) == 77\nmy_func(XXXXX----------) == 120\nmy_func(527-7-188-341/-37261) == 74\nmy_func(8-545162-74--8616/44) == 79\nmy_func(41429/9-9-35X1723-5) == 92\nmy_func(116/6-8/9-3-612-63X32) == 88\nmy_func(5/81368/339/X254-X87) == 128\nmy_func(-/-/-/-/-/-/-/-/-/-/-) == 100\n.\"\"\"```", "response": "```python\ndef my_func(input1: str):\n    score = 0\n    rolls = list(input1)\n    i = 0\n    frame = 0\n    while frame < 10:\n        if rolls[i] == 'X':\n            score += 10\n            if i + 1 < len(rolls):\n                score += 10 if rolls[i + 1] == 'X' else 0 if rolls[i + 1] == '-' else int(rolls[i + 1])\n            if i + 2 < len(rolls):\n                score += 10 if rolls[i + 2] == 'X' else 0 if rolls[i + 2] == '-' else int(rolls[i + 2])\n            frame += 1\n            i += 1\n        elif rolls[i+1] == '/':\n            score += 10\n            if i + 2 < len(rolls):\n                score += 10 if rolls[i + 2] == 'X' else 0 if rolls[i + 2] == '-' else int(rolls[i + 2])\n            frame += 1\n            i += 2\n        else:\n            score += 0 if rolls[i] == '-' else int(rolls[i])\n            score += 0 if rolls[i+1] == '-' else int(rolls[i+1])\n            frame += 1\n            i += 2\n    return score\n```"}
