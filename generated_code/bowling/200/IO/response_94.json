{"submission": "```python\ndef my_func(input1:str):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a string in form of completed bowling card, with one character per roll. The function should output an integer that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(9-549/2514-61/1/5481) == 92\nmy_func(8-418-8161X5-4127X2X) == 93\nmy_func(35X4352323541415/8/7) == 97\nmy_func(113-15178/227-X1225) == 65\nmy_func(72629/-8X549-71167-) == 94\nmy_func(-9-18/324444628-5-63) == 74\nmy_func(13716-9-X5-816-149/8) == 85\nmy_func(71323-7/71722272334/3) == 82\nmy_func(----------3/--------) == 10\nmy_func(72X8/632-3581433115) == 90\nmy_func(51212-X9/7/7-324341) == 89\nmy_func(6/2-4/7/2115-914249-) == 81\nmy_func(9/145/14X1/157-8121) == 88\nmy_func(9-327-X8-1/9/21133/8) == 103\nmy_func(21X-372722/12329-54) == 74\nmy_func(7/519/-52672258-2426) == 82\nmy_func(4/6/1/-8517-7132818-) == 88\nmy_func(9/X36-713156/7/1/5-) == 113\nmy_func(XXXXXXXXXXXX) == 300\nmy_func(611333146/167/-74-9/X) == 81\nmy_func(5--39-816141435/5/0/1) == 81\nmy_func(3/527---34355225448/7) == 83\nmy_func(9-148118X-7X515-15) == 89\nmy_func(-59/9-27334/81361825) == 100\nmy_func(62257-4-9/2/5-9-72-9) == 85\nmy_func(2/44347/-34336-39/14) == 77\nmy_func(329/433/269--9X7172) == 99\nmy_func(7-9-343662138-529/16) == 77\nmy_func(72X317/8/2152X-354) == 92\nmy_func(439/35615-X23729/34) == 89\nmy_func(61534253X3/5-9-448/8) == 104\nmy_func(------3/61----------) == 23\nmy_func(2-6144228-9-6/8/228/-) == 82\nmy_func(-8X8-5343-17-X-17-) == 76\nmy_func(--------------------) == 0\nmy_func(27X34-331-6X--XX5/) == 101\nmy_func(537--14-1421343122-3) == 46\nmy_func(4422-87/8-72266223X94) == 99\nmy_func(X141422-672-7244-8-) == 69\nmy_func(3/8/71X8/1281X6/81) == 133\nmy_func(2/615-X6222449/1418) == 91\nmy_func(------X------------) == 10\nmy_func(XXXXXXXXXXX9) == 299\nmy_func(7-6/45-4-4331/12259-) == 74\nmy_func(-3X5/3-1/2/0/-86-9-) == 94\nmy_func(31348-61X3381154-9-) == 76\nmy_func(229-8-8/X549-9-15X22) == 107\nmy_func(4/8/-69/547-3/173/2/-) == 106\nmy_func(1-6-61171751433/8/X35) == 99\nmy_func(111111X111111111111) == 30\nmy_func(7-63432618119/36X72) == 92\nmy_func(127-63118-72315-1522) == 57\nmy_func(638-9-4/3227629/9-45) == 98\nmy_func(63-4547-36725131X11) == 71\nmy_func(549/0/9-626344457/36) == 103\nmy_func(6/-77--9-92/2371XX87) == 120\nmy_func(63-83-1517X11X8/7/5) == 100\nmy_func(178-521672518/34X24) == 87\nmy_func(7271253--98-218/32-8) == 73\nmy_func(X242/X4/447/-83-51) == 111\nmy_func(5-5/9-637/-4-7322426) == 82\nmy_func(534-X63187--941628-) == 86\nmy_func(237123X4/177/8116X11) == 103\nmy_func(42442--39/9/6/243554) == 89\nmy_func(X118-8/4/9/9-4/3-21) == 102\nmy_func(63-172X-742327-329-) == 75\nmy_func(-811717/5218X71XX23) == 112\nmy_func(9-34X-79-1836348/15) == 91\nmy_func(44X15-19/183571X-2) == 81\nmy_func(51619-6/714-3-18317/9) == 86\nmy_func(9/8/4-219/3317367/9/6) == 110\nmy_func(614153X31166-613/13) == 73\nmy_func(-47/518-X5231-242-2) == 71\nmy_func(61271/32X2142339/51) == 83\nmy_func(7--6165/54214361-651) == 73\nmy_func(0/3-9/367/8/51X3241) == 102\nmy_func(159-6-62523-7172-7-7) == 70\nmy_func(27617-21X8-249-9--7) == 83\nmy_func(22-216275-34X537118) == 77\nmy_func(5127253/71X-7X6-3/-) == 103\nmy_func(36-65/45342/31272/7/3) == 101\nmy_func(42-1X265/X-725X34) == 108\nmy_func(-3623-33276326171844) == 71\nmy_func(16157163549-7/61XX18) == 111\nmy_func(5-8/6-8151256-17188/4) == 86\nmy_func(7115XXX548/279-X53) == 145\nmy_func(1481X4-6-X7-225/9/7) == 102\nmy_func(42353/7161X725-8/63) == 104\nmy_func(--X34--------------) == 24\nmy_func(8--635258--4636/3235) == 76\nmy_func(8/3-1412X818123X1/X) == 106\nmy_func(X9-23-5712/4-6122X85) == 98\nmy_func(532/4362X179-41447/5) == 100\nmy_func(5/-10/216/6-9/629/25) == 91\nmy_func(34-15-9-0/X9/25367-) == 97\nmy_func(4435-9X12523513219-) == 72\nmy_func(4-164--1125151724524) == 55\nmy_func(5115X81X7/X531833) == 121\nmy_func(5-2117336/2326-9815-) == 70\nmy_func(229/628/2716619-518/X) == 98\nmy_func(1/2-8-18-653224/27-2) == 72\nmy_func(18715/2736337-5/434/X) == 101\nmy_func(81X9/7-729/9-25X9-) == 125\nmy_func(717-7-275/9/16631771) == 93\nmy_func(544-9-268/9-9/810/34) == 105\nmy_func(X726236362317-4265/-) == 89\nmy_func(-9537-2/53818/X3/17) == 115\nmy_func(819-1261453627-98-8/7) == 89\nmy_func(2-17419-8/22244/6327) == 80\nmy_func(17X8/711-9/-1172463) == 88\nmy_func(7-54X9-356-32-86311) == 82\nmy_func(71X51X26X-25-9/8-) == 101\nmy_func(5/6-36X9-9-2-X4/8-) == 116\nmy_func(XXXX9/XXX2/XXX) == 251\nmy_func(X-79/5/335223629/54) == 102\nmy_func(5-4-547/X-21/45-544) == 88\nmy_func(1172616/-4724/446-42) == 75\nmy_func(-3515/33-29/-3186-81) == 67\nmy_func(5-614215818-26448/9/8) == 94\nmy_func(X8/45334/44-9X3461) == 111\nmy_func(XXXXX----------) == 120\nmy_func(-961-19-8-457-518--4) == 68\nmy_func(----------XX7-----) == 51\nmy_func(6/72245-537122189-9-) == 84\nmy_func(546254152527429-358/7) == 88\nmy_func(X54146242613/31114/8) == 91\nmy_func(33725/-851355262-225) == 71\nmy_func(11111111111111111111) == 20\nmy_func(X9/7261614561-2458/8) == 105\nmy_func(139-347/1318367-9/9/8) == 97\nmy_func(349/426/434232456281) == 85\nmy_func(256-319/71346124619-) == 78\nmy_func(X52X52X52X52X52) == 120\nmy_func(X7-XX8-63248-5231) == 112\nmy_func(9-2-6-4-81X17231822) == 74\nmy_func(9/814-8/421/5/62-541) == 100\nmy_func(176/9/159-33425-7181) == 87\nmy_func(--------------1-----) == 1\nmy_func(9-4/X5/358/366-4--2) == 104\nmy_func(357244-7432-278-168/2) == 77\nmy_func(3-328-5-9/719-7/-327) == 77\nmy_func(7-5-136/7181545414-6) == 79\nmy_func(13-17-33147151452153) == 57\nmy_func(5/5/5/5/5/5/5/5/5/5/5) == 150\nmy_func(51X447-1-9-626-2-7-) == 72\nmy_func(21X9/0/25424/8-4161) == 96\nmy_func(X2/71-9111316-451X3X) == 100\nmy_func(9-5/X16X-727725235) == 110\nmy_func(7-6/6112438/5/4/147-) == 92\nmy_func(2-X411234818/0/2-9/7) == 82\nmy_func(71518/6/18X272/7222) == 108\nmy_func(XXXXX81XXX-1) == 208\nmy_func(257-4-3551449/63-79/7) == 89\nmy_func(447-X629/123/3/34-6) == 94\nmy_func(35X7/18258/9/8-8152) == 116\nmy_func(-49-637127519/338/4-) == 82\nmy_func(5381237171316-714/-7) == 73\nmy_func(6/112572X42X-99/6-) == 101\nmy_func(726222X61626--27--4) == 72\nmy_func(544/4-X9-25431-6/-8) == 88\nmy_func(539-71X9/51547122-9) == 96\nmy_func(-6218136-4269-716251) == 70\nmy_func(5-7/-863168/7-813581) == 89\nmy_func(51613125-517X54617-) == 79\nmy_func(614451348125135352X7X) == 90\nmy_func(2/31XX4--45231433/7) == 98\nmy_func(8141728-538/244-214-) == 68\nmy_func(424-1/-3819/44237/8/X) == 97\nmy_func(5-9/8/X7/51143/XX3X) == 155\nmy_func(26815/7/X547/9/8-45) == 136\nmy_func(723-6-41246/2-6/9/8-) == 88\nmy_func(9/62113/X7-4/X8/62) == 134\nmy_func(-57/622351628-X8142) == 90\nmy_func(X639---X0/0/521-7/2) == 102\nmy_func(6/5/-19/7/26X2/446/2) == 117\nmy_func(7/6262X8/4-314243-5) == 92\nmy_func(42715/23X72-52/9/X12) == 116\nmy_func(719/--31425/7--9X7-) == 85\nmy_func(X43369/9/51XX8/61) == 144\nmy_func(517/54543-9-629-9-44) == 85\nmy_func(-4-/-2-/-7-6-/-3-/-4) == 66\nmy_func(9/5-9-16X5-11-872X38) == 96\nmy_func(53118--96-X5162343-) == 73\nmy_func(9/9-44619/X1453537/X) == 119\nmy_func(9--6X41X7-9/9/62-1) == 103\nmy_func(8/713-22329-7/-3-7-2) == 68\nmy_func(4/-3443-348-6/X519/-) == 91\nmy_func(13535/438/189/72246/7) == 102\nmy_func(4-8/-962432-126/7-7-) == 74\nmy_func(5444113-9-9/-2227/24) == 65\nmy_func(636/9-22261/318-X8/7) == 111\nmy_func(8/16513/6-127/147271) == 82\nmy_func(X2363639-1/148-4-16) == 82\nmy_func(24815361356212813581) == 75\nmy_func(-59/276-8/533462X52) == 94\nmy_func(15544453-4614233--8-) == 62\nmy_func(2/42238/365/3/--3154) == 83\nmy_func(9/X-60/7-21X3/9-71) == 125\nmy_func(-/-/-/-/-/-/-/-/-/-/-) == 100\nmy_func(183618--1163-9X1452) == 74\n.\"\"\"```", "response": "```python\ndef my_func(input1: str):\n    frames = []\n    frame = []\n    for roll in input1:\n        frame.append(roll)\n        if len(frames) < 9:\n            if roll == 'X' or len(frame) == 2:\n                frames.append(frame)\n                frame = []\n        else:\n            frames.append(frame)\n\n    def roll_value(roll):\n        if roll == 'X':\n            return 10\n        elif roll == '/':\n            return 10 - roll_value(frame[0])\n        elif roll == '-':\n            return 0\n        else:\n            return int(roll)\n\n    score = 0\n    for i in range(10):\n        frame = frames[i]\n        if len(frame) == 1 and frame[0] == 'X':  # Strike\n            score += 10\n            if i < 9:\n                bonus_rolls = frames[i + 1][:2]\n                if len(bonus_rolls) < 2 and (i + 2) < len(frames):\n                    bonus_rolls += frames[i + 2][:1]\n                score += sum(roll_value(roll) for roll in bonus_rolls)\n        elif len(frame) == 2 and frame[1] == '/':  # Spare\n            score += 10\n            if i < 9:\n                score += roll_value(frames[i + 1][0])\n        else:\n            score += sum(roll_value(roll) for roll in frame)\n\n    return score\n```"}
