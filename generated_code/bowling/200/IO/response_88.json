{"submission": "```python\ndef my_func(input1:str):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a string in form of completed bowling card, with one character per roll. The function should output an integer that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(113462XXXX235-63) == 133\nmy_func(7115XXX548/279-X53) == 145\nmy_func(X51X6/XX42635235) == 132\nmy_func(3272265/410/53350/5-) == 92\nmy_func(54219-8/8/7-61131/11) == 87\nmy_func(-48-5-169/4143X439-) == 83\nmy_func(36-5XX2-8/8-9/9/X52) == 132\nmy_func(X544535127-X143136) == 88\nmy_func(X9-457/X17547-9-36) == 117\nmy_func(14431272X-94242623-) == 75\nmy_func(27X187-51519/13X-4) == 89\nmy_func(12--529/9/623/43-343) == 84\nmy_func(6351178/6/3-8/457--3) == 88\nmy_func(-4-/-2-/-7-6-/-3-/-4) == 66\nmy_func(81-263X182-X8/9-X72) == 117\nmy_func(441-529/3661448/7/9/4) == 103\nmy_func(1-1/8-44266-257/X5/-) == 106\nmy_func(--X34--------------) == 24\nmy_func(9/-213451/8--39/527/3) == 89\nmy_func(532/4362X179-41447/5) == 100\nmy_func(8-53819/9-1-727226X34) == 97\nmy_func(44X517/2262819/6/63) == 104\nmy_func(726/5/2741318-1-637-) == 79\nmy_func(2-71-97/339/51614-9-) == 79\nmy_func(11111111111111111111) == 20\nmy_func(362372-351312132X31) == 62\nmy_func(X448-421/X71363141) == 104\nmy_func(2-3/61-871X7/173145) == 93\nmy_func(-34453X9/9/9--28-3-) == 99\nmy_func(279/42726/15X71-344) == 92\nmy_func(--243/27X27267/61X54) == 105\nmy_func(X5/4-6-443-2-9-3-63) == 78\nmy_func(9-726-3672424212351/2) == 77\nmy_func(9-63-5123-XXX8/36) == 129\nmy_func(9-2/9-0/711-27-952XX7) == 115\nmy_func(72355-2-9-3243X8163) == 82\nmy_func(9-44X21629/23X--X7X) == 95\nmy_func(X72278/-33518X6--5) == 94\nmy_func(347/54-29-152--6171/3) == 77\nmy_func(8117163-8-33165/9-6-) == 82\nmy_func(-81331--217/X43X17) == 89\nmy_func(9/6/331/179-3/8/X54) == 129\nmy_func(8-161641-2-64-1/169-) == 66\nmy_func(XXXXX81XXX-1) == 208\nmy_func(63-1-4X9/158/9-9/21) == 94\nmy_func(34X518-119/2331148-) == 73\nmy_func(727/4-8136X14546/16) == 92\nmy_func(6/447-7-1322318/2545) == 76\nmy_func(269/7/9-35X25X7/X98) == 152\nmy_func(-66/0/357-5/81-5624/2) == 96\nmy_func(9-4-721/6/-64/452613) == 89\nmy_func(-25-345253323/1531-1) == 56\nmy_func(337-145/X236/-29/X-9) == 109\nmy_func(41525/1-8/5/322-1551) == 71\nmy_func(-7423/-82143176--151) == 62\nmy_func(X224/4436X26-66124) == 94\nmy_func(9-7-187/-5532-358-9/-) == 76\nmy_func(429--4339-7/8/7/8/44) == 109\nmy_func(--------------1-----) == 1\nmy_func(72-8X45534544-3277/6) == 98\nmy_func(7-9/8-3-X2/21---833) == 85\nmy_func(1/8/8-5412410/236/42) == 98\nmy_func(17329/3617X8/8-1817) == 106\nmy_func(9-156/34224/8/227163) == 90\nmy_func(15437/9-616/365-9-6/1) == 95\nmy_func(5/5/5/5/5/5/5/5/5/5/5) == 150\nmy_func(452461432/-321---1X43) == 63\nmy_func(X-472--5161-6-93-71) == 66\nmy_func(51249-3-1-1/9-134572) == 75\nmy_func(176-1/27174/-3728/3/3) == 91\nmy_func(451/419-44X2--17271) == 77\nmy_func(111111X111111111111) == 30\nmy_func(----------3/--------) == 10\nmy_func(2/8112-78-7/X711425) == 103\nmy_func(31524-43--2-3481X-4) == 58\nmy_func(X12X23819/8/8/8/45) == 122\nmy_func(614/258-X-88/8-624/3) == 107\nmy_func(817172X9/1653-77-42) == 92\nmy_func(-47-9/5/62341-5-X63) == 91\nmy_func(XXXXXXXXXXX9) == 299\nmy_func(5/0/158/9-6116-7-99-) == 94\nmy_func(-113255-331824273-7/1) == 61\nmy_func(7/4-0/7--361XX459/2) == 116\nmy_func(225/518-726/71627-23) == 87\nmy_func(----------XX7-----) == 51\nmy_func(1381549-8/81X8/4-27) == 105\nmy_func(818/1/422/8/8/7/4-XX4) == 135\nmy_func(534-51726-X5444X17) == 95\nmy_func(4316516/9-3553X7-5/8) == 106\nmy_func(4/333331-78-178/239-) == 78\nmy_func(269/9/8/6--2455/8-2/4) == 118\nmy_func(9-44X4271X458/17-9) == 103\nmy_func(24815361356212813581) == 75\nmy_func(9/6/22X36319-326-6/3) == 97\nmy_func(1/-9X3/8-4-4/52-244) == 101\nmy_func(1/11167-178-9-X1351) == 76\nmy_func(-3-4813371-651-78-44) == 65\nmy_func(81819-447/8163X9/-3) == 104\nmy_func(453-3/3215X714381-2) == 80\nmy_func(3-72X-26/8/1127412-) == 73\nmy_func(249/727263129/9/3/X8X) == 133\nmy_func(248/7-2/539/627----4) == 88\nmy_func(2/7/43-731218-71-854) == 85\nmy_func(7-361/9-8/-96/54427-) == 100\nmy_func(8/8-252754215/X344-) == 102\nmy_func(X0/8-9-417-0/3561-6) == 101\nmy_func(X5-35817-4/5-8-7/52) == 94\nmy_func(51137/629--2361412X5/) == 82\nmy_func(X188/63X245-419-9-) == 103\nmy_func(5-X11188-218-815224) == 69\nmy_func(25818-455/X6-520/4-) == 100\nmy_func(XXXXX----------) == 120\nmy_func(1814729/53X279/2544) == 101\nmy_func(714/269-7/52458-9/54) == 100\nmy_func(0/319-8-5-36728/5/43) == 93\nmy_func(18265/51448/726/-28/7) == 101\nmy_func(--------------------) == 0\nmy_func(8-814/5/535-345/-733) == 90\nmy_func(8/165/635-X8163X21) == 101\nmy_func(X-19-7-X725153-9-5) == 84\nmy_func(X3-9-9-8-24627-717/5) == 86\nmy_func(5244165/5-9/63X144-) == 91\nmy_func(5263X632353-6536-42) == 83\nmy_func(7/4/71237/-89-3/320/5) == 104\nmy_func(8-7/2--6X6/9-9/8/34) == 114\nmy_func(-1X53810/812471638/5) == 101\nmy_func(438/72-58--77-8--3X35) == 89\nmy_func(5151X536143186363X88) == 105\nmy_func(52119/6322521162359/-) == 73\nmy_func(146/14819-149/71623-) == 80\nmy_func(51X8-7/6-9-12267/X-8) == 112\nmy_func(515-528/1---119-7271) == 58\nmy_func(31717/XX9-4/9/225/6) == 140\nmy_func(226/9--82-9-250/729-) == 93\nmy_func(8-81619/7-8-X9-14--) == 89\nmy_func(32233-315-8-X2226-4) == 60\nmy_func(------3/61----------) == 23\nmy_func(72442171277-1/7-424-) == 78\nmy_func(XXXXXXXXXXXX) == 300\nmy_func(X515/72349-51119-52) == 88\nmy_func(117123137-8/41435-5-) == 62\nmy_func(3/9/275316325/27257/4) == 102\nmy_func(X5336X5245446-3--4) == 89\nmy_func(4-515/-5519/2-311235) == 60\nmy_func(2/5-9/8-449/5-8/8152) == 108\nmy_func(31XX5-7/7-453-2/81) == 112\nmy_func(5/3-314/5/X1126727-) == 93\nmy_func(X544372231436175316) == 86\nmy_func(X9/36-34/347-54819-) == 99\nmy_func(7/15819-53X7/227/45) == 102\nmy_func(X52X52X52X52X52) == 120\nmy_func(711723-27-54-744-13-) == 58\nmy_func(0/61353/7/7/-262169/3) == 105\nmy_func(72-3539/7/1/7/426--7) == 98\nmy_func(X5/0/724-122-32355/3) == 91\nmy_func(7-36X447/9-1/25349-) == 105\nmy_func(------X------------) == 10\nmy_func(-59/5/6/6---8-22118/1) == 83\nmy_func(9-72518-1271-1X-6X29) == 87\nmy_func(XXXX9/XXX2/XXX) == 251\nmy_func(63266271538/52627281) == 89\nmy_func(2-1681-342-60/12537/-) == 65\nmy_func(438-8-XX-545-33661) == 91\nmy_func(7/X639/X8-43X119-) == 124\nmy_func(-2424-81-5-5-97-727-) == 63\nmy_func(23818-52-15172630/11) == 67\nmy_func(1451-1728-0/819-22X4/) == 89\nmy_func(X8-133426324-3-3/25) == 76\nmy_func(X164/-3X81112/9/X25) == 123\nmy_func(446/63-69/9-4-267-62) == 94\nmy_func(9-3-43X62167/728/63) == 103\nmy_func(4--5726/7-250/6317X15) == 98\nmy_func(436/9-3-127/62-92772) == 92\nmy_func(9-8/9/X7144-8417/23) == 112\nmy_func(21X720/6-8/72-42-6/1) == 96\nmy_func(-/-/-/-/-/-/-/-/-/-/-) == 100\nmy_func(3-1--554XX1454218-) == 79\nmy_func(115/71X631/81241115) == 96\nmy_func(819-1/6/-99-631-369/9) == 100\nmy_func(9-4-415-XX429-9-62) == 95\nmy_func(41715/7/X25-42534XX9) == 121\nmy_func(125/-8XX5-5-X1872) == 108\nmy_func(-3629-53358/269/X22) == 94\nmy_func(6/3/6-8/1132232/7/4-) == 93\nmy_func(815-8/16X1/723/8127) == 114\nmy_func(8/63-26/25XXXX72) == 161\nmy_func(341/175/5/6/9/8-9/17) == 121\nmy_func(355--6-824X8-9/510/2) == 92\nmy_func(136-619-6/459--95453) == 84\nmy_func(35637/1-625/269-2511) == 75\nmy_func(6281X441462279-6/2-) == 88\nmy_func(360/139-619/5/439--3) == 88\nmy_func(35X118/9-71-6-53/17) == 88\nmy_func(727244-92-179/3/5-11) == 80\nmy_func(41542-5/728/1/4/24X8-) == 103\nmy_func(7/183-6/8/3--98-9-6-) == 89\nmy_func(7--3X-216227-25519-) == 64\nmy_func(449-17126163-15-1661) == 64\nmy_func(18414231X1436137-81) == 73\nmy_func(242-X-2621754629/9/4) == 88\n.\"\"\"```", "response": "```python\ndef my_func(input1: str):\n    score = 0\n    i = 0\n    rolls = list(input1)\n    \n    def roll_value(roll):\n        return 10 if roll == 'X' else 10 if roll == '/' else 0 if roll == '-' else int(roll)\n    \n    while i < len(rolls):\n        if rolls[i] == 'X':\n            score += 10\n            if i + 1 < len(rolls):\n                score += roll_value(rolls[i + 1])\n            if i + 2 < len(rolls):\n                score += roll_value(rolls[i + 2])\n            i += 1\n        elif rolls[i] == '/':\n            score += 10 - roll_value(rolls[i - 1])\n            if i + 1 < len(rolls):\n                score += roll_value(rolls[i + 1])\n            i += 1\n        else:\n            score += roll_value(rolls[i])\n            if i + 1 < len(rolls) and rolls[i + 1] != '/':\n                score += roll_value(rolls[i + 1])\n            i += 2\n            \n    return score\n```"}
