{"submission": "```python\ndef my_func(input1:str):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a string in form of completed bowling card, with one character per roll. The function should output an integer that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(9-45114-537/5/158/54) == 88\nmy_func(31--1627710/176-438/-) == 70\nmy_func(27-2438--6-7154243-7) == 65\nmy_func(458-6-624-71-86262X9-) == 86\nmy_func(4/2/8/318-0/2/5/9-51) == 116\nmy_func(----------XX7-----) == 51\nmy_func(628-54247/-712255/81) == 85\nmy_func(367-547-9/9-4254454-) == 88\nmy_func(XXXXXXXXXXXX) == 300\nmy_func(XXXX9/XXX2/XXX) == 251\nmy_func(81XX-27/-19-8/X3/5) == 118\nmy_func(7-11-7-58/432315816/5) == 77\nmy_func(62531-61-27/8/9-2-61) == 81\nmy_func(6/135-7/3/51712-3542) == 78\nmy_func(458/8/815/16634516-9) == 106\nmy_func(7132314/9/126-3-4117) == 72\nmy_func(137/-6816-344/2/3571) == 83\nmy_func(9/249/9-9/369/3-8-X12) == 105\nmy_func(45547-6-9/619/9-3/-4) == 96\nmy_func(-89-8-9/34426/431417) == 85\nmy_func(719/32419/8133618-X63) == 98\nmy_func(63815/-1X9--9637/5-) == 95\nmy_func(345-9--66326278/368/6) == 91\nmy_func(3-131/-9431/23X5233) == 80\nmy_func(7-16X32--8/1/62227/4) == 87\nmy_func(34615/369/9-41717-X49) == 107\nmy_func(XX9-9/3/7/9-1-5/8-) == 142\nmy_func(716-9/8143326/536311) == 87\nmy_func(243235-79/9-2--55453) == 78\nmy_func(XXXXX----------) == 120\nmy_func(63228/36172451270/26) == 84\nmy_func(6/6/34629-X4-X6/24) == 109\nmy_func(7/9-2/338/X9-9/8-9-) == 130\nmy_func(5-9-727123-652-17214) == 64\nmy_func(6/X81316/6/26-8629-) == 113\nmy_func(8-21-6-15/6/9/8/728-) == 105\nmy_func(3--1X-38/1/XX3/8-) == 120\nmy_func(6134159-9-4-273/X4/8) == 109\nmy_func(------X------------) == 10\nmy_func(135/-49-22278-2-2354) == 64\nmy_func(715--652-48/7-X2643) == 87\nmy_func(7/8-51536322243/2/9-) == 99\nmy_func(9/719/1671255-X-66/9) == 104\nmy_func(6152433/628-25631-62) == 78\nmy_func(9/6-710/X-1159/4512) == 94\nmy_func(7-9/9/X6-61-463X81) == 116\nmy_func(7261-82/818-52342145) == 85\nmy_func(614-177/11169-8-8/21) == 71\nmy_func(8-71526127-3539-7/12) == 73\nmy_func(9/-69/6/15432/34711-) == 85\nmy_func(3-42539/18519-248--9) == 75\nmy_func(2/5444445-9/345-5315) == 84\nmy_func(8-8/438/-32617441414) == 76\nmy_func(183--4632-9/8/4-6214) == 76\nmy_func(41X5/9/X-124-7-853) == 105\nmy_func(X52X52X52X52X52) == 120\nmy_func(1743X7/63-9139/5/63) == 113\nmy_func(3372111-X13X267/13) == 77\nmy_func(9/5-726227X9-X1--7) == 93\nmy_func(X24335/3/4562459/24) == 99\nmy_func(72X-94/167/24534512) == 93\nmy_func(715-319-5/4372-3517/8) == 83\nmy_func(7-4435-18/364-9/9--2) == 80\nmy_func(X816/X33628145-47/2) == 112\nmy_func(6/531-33-11831X1212) == 63\nmy_func(X1/7/81318-9-35519-) == 108\nmy_func(-70/-17/531-637-6381) == 76\nmy_func(15-6-4XX722-539/-8) == 99\nmy_func(166/-2548/4/62-86/72) == 100\nmy_func(-4-/-2-/-7-6-/-3-/-4) == 66\nmy_func(24513242420/-92/8114) == 80\nmy_func(9/9/418122X313-9/81) == 99\nmy_func(X6-211872-2X-13442) == 70\nmy_func(2/-6175/514-44443316) == 78\nmy_func(51-313X155-X8-167/5) == 88\nmy_func(6-81638---45727/X2-) == 84\nmy_func(--X34--------------) == 24\nmy_func(3214-3811234-78/3461) == 66\nmy_func(8/2/632418623-7-4-9/2) == 86\nmy_func(147/X544/1662332634) == 100\nmy_func(-8X342627235481117/9) == 93\nmy_func(2441-213X8/22523254) == 74\nmy_func(249-4-9/2725729-1634) == 79\nmy_func(-14-7/457-8/54-46-9/2) == 81\nmy_func(7-X5/X7163414/X--) == 117\nmy_func(229-716327533154-744) == 75\nmy_func(8/-19/71242-0/9/246/3) == 94\nmy_func(42X8-3-2122238-4/2-) == 69\nmy_func(725163151/-2XX--7/5) == 87\nmy_func(6/-6811-9-621772-3-5) == 68\nmy_func(X-5X1/9/139/8-3-51) == 109\nmy_func(422-42224323118-3413) == 51\nmy_func(1362513/7/9-61164225) == 90\nmy_func(534451326/328127-418) == 76\nmy_func(16-82513-5276-617271) == 70\nmy_func(817-616-8/62417/1/X52) == 106\nmy_func(9--7512-45X5/72612-) == 88\nmy_func(15617-62---41-9/3444) == 61\nmy_func(X219-2/2/4/3/9/3-4/1) == 110\nmy_func(45213-621821159-6261) == 65\nmy_func(63615-510/35-1719--8) == 74\nmy_func(X2/7/1627818-179-45) == 107\nmy_func(21-6629--82311263126) == 61\nmy_func(-151-25253628118442/1) == 69\nmy_func(X459-63323/8/-4364/2) == 104\nmy_func(X2244---2347/5--7-1) == 63\nmy_func(326--7-38--46-7272--) == 57\nmy_func(1-X53-142359/523115) == 74\nmy_func(9/X-63/3-5/458-8-6/2) == 109\nmy_func(81--8/6-X177-437/8-) == 97\nmy_func(34158-9-152/-8X0/3/7) == 104\nmy_func(X238-3/1771728/528/-) == 96\nmy_func(X4-51-953X62X6-9/5) == 104\nmy_func(9-6/X139-723/181123) == 92\nmy_func(X113/7113--8/1/X24) == 96\nmy_func(X45X365/146/725234) == 112\nmy_func(-/-/-/-/-/-/-/-/-/-/-) == 100\nmy_func(414-54X9-5/32615-8-) == 84\nmy_func(XX2/431/--819/15-7) == 106\nmy_func(--62528/7-3/628/8/6/6) == 113\nmy_func(111111X111111111111) == 30\nmy_func(17-634X5-451/8-8-22) == 88\nmy_func(532/4362X179-41447/5) == 100\nmy_func(62X-612-8432-X5/X61) == 107\nmy_func(819-8-X8-6-9/25X-6) == 99\nmy_func(X7/61-48-36459--171) == 91\nmy_func(63817/338151-3-8819/2) == 84\nmy_func(3/9-X6/9/227-4544-9) == 116\nmy_func(9/5-X9/54247-X425-) == 104\nmy_func(5-14539-9/4-7-418/X27) == 96\nmy_func(----------3/--------) == 10\nmy_func(------3/61----------) == 23\nmy_func(157/8-4/X5/54149-9/-) == 120\nmy_func(X5-X4-162-63518/71) == 87\nmy_func(XX7/-8339/27455-41) == 111\nmy_func(XXXXX81XXX-1) == 208\nmy_func(419-17133/3552-2X26) == 82\nmy_func(X9/7227XX3/43628-) == 135\nmy_func(X7136-2119/351/8/51) == 99\nmy_func(X8-8-52-68-72-24/27) == 87\nmy_func(6-0/12359/4571172/1/9) == 97\nmy_func(512221318/5/3/1/217-) == 78\nmy_func(9/9-513/X629/-99-8/5) == 123\nmy_func(9-9-9/9-7-17---68/62) == 91\nmy_func(342432418/9/24119/18) == 82\nmy_func(81161562X2/326/2117) == 91\nmy_func(547162518-2236144581) == 75\nmy_func(XXXXXXXXXXX9) == 299\nmy_func(XX9/9/9/1-9-81X12) == 133\nmy_func(15X9/3631523/45X71) == 108\nmy_func(9--79/-7184323X3635) == 90\nmy_func(5/535/81X31219-X1/-) == 110\nmy_func(2/-96/81X-16-724272) == 88\nmy_func(-40/346-438/2/213114) == 73\nmy_func(52453/35X18516/5144) == 100\nmy_func(13X45322126-8118-16) == 73\nmy_func(8/5/-2338/414/X8-2/2) == 110\nmy_func(3525338/452-2441X81) == 85\nmy_func(328/14X4-9/3-34168/3) == 82\nmy_func(35210/-961-327255/7/2) == 85\nmy_func(33449/3/X9/45X514-) == 116\nmy_func(7-7/817-5-32349-4/-6) == 83\nmy_func(6372X6-8-5/119-126-) == 79\nmy_func(7/2/X7-247-51723126) == 96\nmy_func(223/X177/42-713XX-2) == 113\nmy_func(216-436-818/61623453) == 77\nmy_func(238/7-33239/817/-314) == 85\nmy_func(5/5/5/5/5/5/5/5/5/5/5) == 150\nmy_func(5431629-5-2-116171X71) == 72\nmy_func(21718/6151X4/457/4/7) == 114\nmy_func(358-2/9-8--21/429/6/3) == 103\nmy_func(--------------1-----) == 1\nmy_func(35544/233-437154-27-) == 70\nmy_func(8125X9/247-33X-353) == 91\nmy_func(729/6-XX617/X4543) == 136\nmy_func(-254321--23/-8212727) == 58\nmy_func(-47-7/54537/9-8/7/5/-) == 113\nmy_func(X4-X723/71-361139/3) == 98\nmy_func(24815361356212813581) == 75\nmy_func(11111111111111111111) == 20\nmy_func(4322X4-9/2/31X3116) == 83\nmy_func(544/8/4/537/X-1637-) == 112\nmy_func(X8-41819/72X627/-6) == 108\nmy_func(53X6/6-2445X435254) == 105\nmy_func(11171241438-9/248/0/X) == 81\nmy_func(-4454/4163XX9/-24-) == 106\nmy_func(7115XXX548/279-X53) == 145\nmy_func(9/9-338-8-725-1-3-62) == 76\nmy_func(4253X9/719/526/711-) == 107\nmy_func(6243323/12-84/510/8/2) == 93\nmy_func(5-X615-5-81114/X81) == 98\nmy_func(21813542X5/713/-523) == 91\nmy_func(8/72-10/4332-56/X-6) == 100\nmy_func(18X167-1735-1-9525/6) == 89\nmy_func(2/7232-78153X5443X2-) == 102\nmy_func(8-61247/8-9/8/9/7-7/-) == 118\nmy_func(53419/X5352-99/3/6/1) == 115\nmy_func(45-6-5433/8/6351162-) == 85\nmy_func(--------------------) == 0\nmy_func(XX9--5257/4331419-) == 108\n.\"\"\"```", "response": "```python\ndef my_func(input1: str) -> int:\n    score = 0\n    rolls = list(input1)\n    frame = 0\n    i = 0\n    \n    while frame < 10:\n        if rolls[i] == 'X':\n            score += 10\n            if rolls[i+1] == 'X':\n                score += 10\n                if rolls[i+2] == 'X':\n                    score += 10\n                else:\n                    score += int(rolls[i+2]) if rolls[i+2] != '-' else 0\n            else:\n                score += int(rolls[i+1]) if rolls[i+1] != '-' else 0\n                score += int(rolls[i+2]) if rolls[i+2] != '-' else 0\n            frame += 1\n            i += 1\n        elif rolls[i+1] == '/':\n            score += 10\n            if rolls[i+2] == 'X':\n                score += 10\n            else:\n                score += int(rolls[i+2]) if rolls[i+2] != '-' else 0\n            frame += 1\n            i += 2\n        else:\n            score += int(rolls[i]) if rolls[i] != '-' else 0\n            score += int(rolls[i+1]) if rolls[i+1] != '-' else 0\n            frame += 1\n            i += 2\n            \n    return score\n```"}
