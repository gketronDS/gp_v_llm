{"submission": "```python\ndef my_func(input1:str):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a string in form of completed bowling card, with one character per roll. The function should output an integer that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(546/1-4/8/9-9-44444-) == 96\nmy_func(81729-71X6/7-528154) == 104\nmy_func(7-9/518-8-8-13627243) == 80\nmy_func(0/5/4224262633229-8-) == 84\nmy_func(9/218/7-4/0/X8--17/9) == 115\nmy_func(2126348/176125535/X78) == 104\nmy_func(54-2729-5-618-6-54X98) == 91\nmy_func(8/220/X9/72-9544134) == 112\nmy_func(8/-317729-4/X6281-1) == 95\nmy_func(9/4-3/4/7-63618152-4) == 92\nmy_func(4261436/72-4729/61-8) == 90\nmy_func(1-71-7-74/8/458--87/3) == 93\nmy_func(72263/XX2/31-73317) == 117\nmy_func(------X------------) == 10\nmy_func(268/9/424/X5-8/24X53) == 123\nmy_func(4281X8-3-634461621/3) == 89\nmy_func(--118125232-531171X9/) == 63\nmy_func(111111X111111111111) == 30\nmy_func(7/6136XX2-715/6151) == 105\nmy_func(722612455417-8429-45) == 78\nmy_func(7/7225214117149/8-62) == 88\nmy_func(11111111111111111111) == 20\nmy_func(X9/41719/14X6-81-5) == 99\nmy_func(627-9-4-8/274/6-9-8-) == 88\nmy_func(818127314/8-425/817-) == 97\nmy_func(XX7/-3619-6-9-172/7) == 116\nmy_func(9-139-11X52XX7-72) == 108\nmy_func(36816/6-4-71535-5-45) == 79\nmy_func(X358111X5/232-1252) == 86\nmy_func(2113-17271X631-8-8-) == 70\nmy_func(X1161139/429/728/5-) == 91\nmy_func(XXXXXXXXXXXX) == 300\nmy_func(X4562151751-83/2431) == 86\nmy_func(9/6-5/-9148/X244/3-) == 104\nmy_func(72X2572536/3153X5/9) == 114\nmy_func(6/6-62434-236-154-61) == 69\nmy_func(9-15231313728142X--) == 62\nmy_func(7-5-6-X3-6/12-5189/4) == 76\nmy_func(8/815/54X1-5-519/52) == 96\nmy_func(9-6-2761316/6-9-2/5/3) == 94\nmy_func(532/4362X179-41447/5) == 100\nmy_func(41815-617/9/0/7/9/-5) == 106\nmy_func(25X7-7/5-45626-418-) == 87\nmy_func(9-36459--45/9-818/16) == 95\nmy_func(X2/62X6-537-18X54) == 118\nmy_func(7115XXX548/279-X53) == 145\nmy_func(431632168/8-61-451-7) == 76\nmy_func(17X1-44816/72X7251) == 97\nmy_func(63259/2633639/-1-831) == 74\nmy_func(X8-X8-26514454137/X) == 107\nmy_func(9/4123542/727-4461XX3) == 104\nmy_func(6/41-7X-97/3-3/8-71) == 104\nmy_func(-712-55/449-44459/4-) == 81\nmy_func(35-9539/9/9-425/16X1/) == 116\nmy_func(71119-27XX1122-353) == 78\nmy_func(X53129-7/X23X5317) == 112\nmy_func(XXX43X347215418-) == 130\nmy_func(5/5/5/5/5/5/5/5/5/5/5) == 150\nmy_func(353552178/--9--8XX69) == 109\nmy_func(-/-/-/-/-/-/-/-/-/-/-) == 100\nmy_func(18X7/6/246/43X-542) == 110\nmy_func(353/175133X63632122) == 83\nmy_func(-62131212535X0/321/4) == 83\nmy_func(8-24X357-3541347/-3) == 80\nmy_func(--X34--------------) == 24\nmy_func(81-78--5X712-638-12) == 77\nmy_func(XX-73433444/13X45) == 108\nmy_func(6/7-61328/3-41-47281) == 79\nmy_func(2781-2728-8-9/33-144) == 73\nmy_func(18X33639/8171-87-3/X) == 110\nmy_func(X359-8-455/-79-4-9/8) == 100\nmy_func(X7152X5/8-4436X1-) == 108\nmy_func(519-9-X7-8-9/241731) == 86\nmy_func(8-61-3--72617-X1-31) == 57\nmy_func(3333533618175211-8-1) == 64\nmy_func(515-2317438/9/6/X-2) == 100\nmy_func(81X2-3/-69/1/X11-2) == 86\nmy_func(6/5-8-62363-179-2/X79) == 111\nmy_func(XX2-4432316/-74181) == 84\nmy_func(5/-1437/0/5-9/349/14) == 84\nmy_func(61-59-9-81142745537/-) == 80\nmy_func(6-21513/9/352/27X45) == 104\nmy_func(--9-156-8131629/X-9) == 90\nmy_func(35617125179-5127-833) == 76\nmy_func(XX2/8181X9-1671X57) == 143\nmy_func(-32461517-7-173-6281) == 64\nmy_func(13-233728/329/524432) == 74\nmy_func(----------3/--------) == 10\nmy_func(X448144-92-339-7/36) == 91\nmy_func(8/--5-X9/617/2-1/9/8) == 109\nmy_func(6-242--33/8116X533-) == 80\nmy_func(-3X1/X6---228/-87/8) == 105\nmy_func(33X14514/9---5116-6) == 79\nmy_func(-49-9-5-41229-9/9--3) == 76\nmy_func(9-34-333366-21275463) == 70\nmy_func(1/131615-2819-414-4/-) == 67\nmy_func(--------------1-----) == 1\nmy_func(X717-X9-4453-8438/2) == 104\nmy_func(9-358172-6-6229-X24) == 82\nmy_func(X6-X711/-58/2--78-) == 92\nmy_func(4-42217-26417-9/113/4) == 67\nmy_func(X459/9/-3715/318-8-) == 101\nmy_func(XXXXX81XXX-1) == 208\nmy_func(140/52X--8-81321722) == 71\nmy_func(81729/-70/27-89-9-X44) == 100\nmy_func(6252436231324/9-81-5) == 81\nmy_func(635/621-519-7/424354) == 85\nmy_func(36539/43346324-97-6/-) == 86\nmy_func(-6-542369/444-522/7-) == 83\nmy_func(8/2-7161619--81/7-9-) == 86\nmy_func(X71519/-64/813/256/5) == 109\nmy_func(-8269-16189-X7/4142) == 95\nmy_func(183/6/16527-616-226/9) == 93\nmy_func(2/-5213412-8XXX5-) == 111\nmy_func(3-214514X427217-243) == 68\nmy_func(32535-8/36263-X7/26) == 91\nmy_func(5-719-412/536/2532X2/) == 94\nmy_func(81234/52-8618/118-8/2) == 84\nmy_func(8-2536817-510/13--61) == 68\nmy_func(33215-51434/6/127-0/3) == 77\nmy_func(7/5-27529/7-621423XX-) == 98\nmy_func(727214439-7--514XX-4) == 90\nmy_func(2/2-X-65181-452X24) == 84\nmy_func(438-6245429/618-5354) == 86\nmy_func(XXXX9/XXX2/XXX) == 251\nmy_func(6--57153--2653218-9/9) == 73\nmy_func(25X6-14814-X322/8/3) == 98\nmy_func(24269/325-45125-188-) == 71\nmy_func(53535-4-266-71439-13) == 67\nmy_func(639/44541581621-818/X) == 93\nmy_func(6-24112/4151-5348-15) == 65\nmy_func(8/X316/614-6/X44-9) == 120\nmy_func(3172334-549-51419-2-) == 63\nmy_func(5215819/4-338/210/9/9) == 99\nmy_func(6/9-18-612X62-38/9-) == 103\nmy_func(410/1672X536---8/71) == 89\nmy_func(6-428/9-8/3462810/22) == 93\nmy_func(62X3651-51/34719-61) == 91\nmy_func(8-53X3--22-44317116) == 63\nmy_func(-39-41218/X315/7-45) == 91\nmy_func(1/-48-44X1645326/X63) == 107\nmy_func(5-9/9/7/3471337/-88/5) == 108\nmy_func(517-9-5/4336817/715-) == 91\nmy_func(539/32X44440/9/9-X6-) == 123\nmy_func(-9--9/359-3/X6215--) == 91\nmy_func(XXXXX----------) == 120\nmy_func(XXXXXXXXXXX9) == 299\nmy_func(7-7/9-445-5-X4/-86/3) == 104\nmy_func(X52X52X52X52X52) == 120\nmy_func(71-315439/21818-2672) == 73\nmy_func(812-81-53644369/6--8) == 81\nmy_func(9/2/-2-19/9-XX3125) == 101\nmy_func(-4-/-2-/-7-6-/-3-/-4) == 66\nmy_func(437/-68-1/266254X7/4) == 102\nmy_func(X4443X-616--167-9-) == 85\nmy_func(------3/61----------) == 23\nmy_func(728/237/X3/228/6/81) == 125\nmy_func(9/9/335-8/339--17/62) == 96\nmy_func(7-7/4/23X4341XX51) == 114\nmy_func(149/1531-517157/8--1) == 72\nmy_func(362281-7118/53729/16) == 81\nmy_func(542-X2-3-4-339-71X9/) == 75\nmy_func(X9-11619-X625-7/81) == 104\nmy_func(41629-9-522512-563-3) == 65\nmy_func(33431-1/1/8-9-7262X44) == 95\nmy_func(2521718-114-8-X818-) == 76\nmy_func(159-7/X9-62819-9/24) == 107\nmy_func(X421/3-9/3-27815231) == 83\nmy_func(217/1-9-2-X719/X-6) == 94\nmy_func(6-537--68-X170/9-9-) == 98\nmy_func(6-44519/-23423-18-63) == 62\nmy_func(25X8-25-4725-X4252) == 87\nmy_func(-761X33721323-1422/2) == 73\nmy_func(247-539/63XX813/34) == 122\nmy_func(7/9-X618/3/7-538-8-) == 113\nmy_func(X71-68/8-5-18341735) == 95\nmy_func(616/-76318X-78/3/1-) == 91\nmy_func(9/816-X6-2781342/12) == 94\nmy_func(13173-137/X9-9/X-3) == 103\nmy_func(267/414-159/6-2-34X9/) == 88\nmy_func(712/4/7/3-8-9-7/3/8/2) == 115\nmy_func(347153150/3/236/226-) == 81\nmy_func(6/35252-0/2-126136-1) == 64\nmy_func(--------------------) == 0\nmy_func(24815361356212813581) == 75\nmy_func(9/330/25X153-7271X38) == 101\nmy_func(4/9/7-15249--972639/1) == 102\nmy_func(9-729-6/XX7-547/42) == 127\nmy_func(----------XX7-----) == 51\nmy_func(9-9/61353/X632-818-) == 107\nmy_func(0/7/16-32536358-7143) == 85\nmy_func(9/-5539/X-24-52-263) == 79\nmy_func(-18/-2715351-2-8X26) == 71\nmy_func(7141346/24316152728/-) == 75\nmy_func(9/9/9/X4/7/279--217) == 135\nmy_func(5-3542417253269-6-41) == 69\nmy_func(52X218-9-XX817/54) == 120\nmy_func(1/728/-117-134X63-5) == 86\nmy_func(616-X5/35819-72-66-) == 93\nmy_func(5245238/X7/X519/51) == 124\n.\"\"\"```", "response": "```python\ndef my_func(input1: str):\n    score = 0\n    frames = []\n    i = 0\n    while i < len(input1):\n        if input1[i] == 'X':\n            frames.append(('X',))\n            i += 1\n        elif input1[i] == '/':\n            frames[-1] = (frames[-1][0], '/')\n            i += 1\n        elif input1[i] == '-':\n            if len(frames) == 0 or len(frames[-1]) == 2:\n                frames.append(('-',))\n            else:\n                frames[-1] = (frames[-1][0], '-')\n            i += 1\n        else:\n            if len(frames) == 0 or len(frames[-1]) == 2:\n                frames.append((input1[i],))\n            else:\n                frames[-1] = (frames[-1][0], input1[i])\n            i += 1\n\n    def get_value(roll):\n        if roll == 'X':\n            return 10\n        elif roll == '/':\n            return 10 - int(frames[-1][0])\n        elif roll == '-':\n            return 0\n        else:\n            return int(roll)\n\n    for j, frame in enumerate(frames):\n        if j == 10:\n            break\n        if frame[0] == 'X':\n            score += 10\n            if j + 1 < len(frames):\n                score += get_value(frames[j + 1][0])\n                if len(frames[j + 1]) == 1:\n                    if j + 2 < len(frames):\n                        score += get_value(frames[j + 2][0])\n                else:\n                    score += get_value(frames[j + 1][1])\n        elif len(frame) == 2 and frame[1] == '/':\n            score += 10\n            if j + 1 < len(frames):\n                score += get_value(frames[j + 1][0])\n        else:\n            score += get_value(frame[0]) + get_value(frame[1])\n\n    return score\n```"}
