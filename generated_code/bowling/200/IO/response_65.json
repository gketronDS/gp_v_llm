{"submission": "```python\ndef my_func(input1:str):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a string in form of completed bowling card, with one character per roll. The function should output an integer that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(155234X321/27X2631) == 91\nmy_func(XX2181816--424256-) == 85\nmy_func(7/9/134-X5-X-57-X72) == 104\nmy_func(5162132351X-89-264/3) == 85\nmy_func(62-66-9-9/1/7-4-6-81) == 83\nmy_func(3/9-435/0/3-4/63XX52) == 128\nmy_func(XXXXXXXXXXXX) == 300\nmy_func(7-5454-13/447/9-3417) == 91\nmy_func(XXXX9/XXX2/XXX) == 251\nmy_func(125/170/145-9/25338-) == 76\nmy_func(X118/8/21-33--8231-) == 67\nmy_func(727-1/6/8-6/9-433451) == 106\nmy_func(X1836818-44354-4462) == 90\nmy_func(538/5-62718/62179--7) == 92\nmy_func(9/5-5/818161X5-X9/-) == 113\nmy_func(XXXXX81XXX-1) == 208\nmy_func(5-546/27157-7/9/-8X25) == 102\nmy_func(--------------------) == 0\nmy_func(-3538-727-4421148/45) == 74\nmy_func(4351548/327-2/8/518-) == 94\nmy_func(8/522/X3244128/-37/9) == 105\nmy_func(8/8181323281-66/338-) == 88\nmy_func(2131-23/-9329/9/4-52) == 77\nmy_func(4-364-6/224/219/4/22) == 78\nmy_func(9-3-X81247-634/2323) == 84\nmy_func(2/158-32X9-8-366236) == 92\nmy_func(-27-8-8/7-41635/X71) == 101\nmy_func(71X34115-4/126-8181) == 77\nmy_func(X6-6-1/9/7-44729/9-) == 116\nmy_func(5/3263632-527253188-) == 79\nmy_func(-2XX5/369/6/343252) == 117\nmy_func(-617XX31-79/3/9/7-) == 118\nmy_func(71118-538/4/7/63-79-) == 98\nmy_func(--2-9-2544338122-381) == 57\nmy_func(62-27/1/3212277/7-5/-) == 85\nmy_func(4/24X715-329-15-23-) == 74\nmy_func(-7-3X4/4/4/8/X8/9/-) == 145\nmy_func(16615/7/6-7/X27139/1) == 116\nmy_func(-316-5X6-81120/1853) == 77\nmy_func(-3617/2121X3-3/44-2) == 68\nmy_func(11111111111111111111) == 20\nmy_func(9/1/413541112672429-) == 77\nmy_func(X52X52X52X52X52) == 120\nmy_func(9-6-3-275/X5-8-317-) == 86\nmy_func(XXXXX----------) == 120\nmy_func(7/X727-0/-8X0/8/43) == 132\nmy_func(7215X148/724472259-) == 94\nmy_func(------3/61----------) == 23\nmy_func(X7-159/533/4-7-7-9-) == 94\nmy_func(4263-443279-713/4125) == 78\nmy_func(22429/63X51-1X180/1) == 97\nmy_func(219/2-7/54448/8/1522) == 88\nmy_func(15-881X519-9/35X41) == 95\nmy_func(X413/2333X3/--23-1) == 79\nmy_func(235-549-8/8-8/81X33) == 103\nmy_func(X2/320/186/X818/3/1) == 130\nmy_func(6/0/1552442-14-96262) == 74\nmy_func(X9/7-419--651818127) == 97\nmy_func(229-437/527/8/7/2/X69) == 134\nmy_func(X-29-7/3-8/7253336/6) == 95\nmy_func(5353616371X8/215444) == 92\nmy_func(4536-1437/-59-522181) == 69\nmy_func(X8-72X-82-512/716-) == 100\nmy_func(811/8136X8-3-11815-) == 90\nmy_func(728-71X6/--5-547171) == 85\nmy_func(446-51516-515-6-X21) == 65\nmy_func(42X71525-72513331-1) == 70\nmy_func(228/X-9-3-562412343) == 85\nmy_func(45X9-0/217/514-313-) == 84\nmy_func(6113X1263239/33-215) == 68\nmy_func(9/8127185/712-35811/1) == 100\nmy_func(5/4/9/X61X272/3181) == 131\nmy_func(4181252-71-95/536313) == 76\nmy_func(246/-8186144-2-1-67/3) == 70\nmy_func(418-256-9-169--25362) == 69\nmy_func(5/33624-2--56161411-) == 58\nmy_func(54X7/1-X-333237126) == 84\nmy_func(2-15354/--368-182716) == 68\nmy_func(9-178/81X4315437/9-) == 109\nmy_func(311671-67-3334724432) == 67\nmy_func(8-7/16632632X159-13) == 83\nmy_func(5144523/-89/6/-225-6) == 80\nmy_func(116-2-9/637-1-9/-49/6) == 73\nmy_func(9/81234345727/6/3642) == 101\nmy_func(8/-5818/9/-4156-9-32) == 83\nmy_func(-3539-4216347-X6141) == 76\nmy_func(6/7-51X-2437-X276/8) == 104\nmy_func(7/719-53X7-525/9/9-) == 120\nmy_func(52X8/813453614/813-) == 106\nmy_func(5/5/5/5/5/5/5/5/5/5/5) == 150\nmy_func(9-3-8171726/11X6/9-) == 99\nmy_func(119-9/5234X-5715/9/6) == 103\nmy_func(14116-348/3/517-3416) == 75\nmy_func(X9/3612175/7/125/7-) == 108\nmy_func(7-4-8-2-9/6/X5-4/23) == 94\nmy_func(4/4311718-3535149/X8-) == 98\nmy_func(9-1/314-7--8X-1721/1) == 77\nmy_func(819/6114-87/343-247/-) == 84\nmy_func(33X619-1418-72/2434) == 85\nmy_func(610/4-4571721426X44) == 90\nmy_func(13X2/541324X721531) == 96\nmy_func(8-6-416/XX-16-8134) == 93\nmy_func(23326/331/4-9-0/617/2) == 91\nmy_func(----------XX7-----) == 51\nmy_func(9/-518X3653423/8-61) == 99\nmy_func(-25241X9-1714367163) == 81\nmy_func(2/8/241471XX5462X59) == 134\nmy_func(7116258-9/7---X3243) == 81\nmy_func(-4-/-2-/-7-6-/-3-/-4) == 66\nmy_func(2136628/8-15251-26X6X) == 94\nmy_func(14X9-324224118/9/63) == 96\nmy_func(172454X425424613543) == 82\nmy_func(9-7-8/136371-6XX-9) == 102\nmy_func(7115XXX548/279-X53) == 145\nmy_func(347/9/8/81267-716/X26) == 132\nmy_func(275224728/6/8/726/21) == 106\nmy_func(5-26422/33X-542356-) == 78\nmy_func(42X7127279/11130/5/5) == 97\nmy_func(241212277-3626447-1-) == 61\nmy_func(----------3/--------) == 10\nmy_func(0/5--85141419--56113) == 69\nmy_func(X8/8/9/41X118/9-5/-) == 128\nmy_func(X9-63-16-9-3/X1-16) == 92\nmy_func(24529-8-X2/9-122/7/4) == 112\nmy_func(3-256-317-53540/3/X78) == 102\nmy_func(-52553X619/361/628/2) == 102\nmy_func(8-X17-93/6171215423) == 91\nmy_func(357/417/3--82723-8X98) == 100\nmy_func(44X15523/0/4/438-72) == 99\nmy_func(XXXXXXXXXXX9) == 299\nmy_func(7217279/324271X8162) == 94\nmy_func(X0/23629/144-112744) == 84\nmy_func(12148-342-729/9/4533) == 82\nmy_func(63-7-5349/X249-5/17) == 98\nmy_func(35X631-7-4/9-27438/6) == 104\nmy_func(72-64-5171-4-4711431) == 58\nmy_func(X7-51-3-5246318-425) == 73\nmy_func(621-637/5144-644X42) == 83\nmy_func(335172222-61369-X17) == 78\nmy_func(6/3/41263-333-816/43) == 82\nmy_func(24815361356212813581) == 75\nmy_func(8-1552267245XX8/3-) == 111\nmy_func(-814623-810/217/X51) == 90\nmy_func(-1639-1132-75162178/5) == 70\nmy_func(7-45X3-1/8141-6519-) == 85\nmy_func(35X26XX4-6/-56/62) == 115\nmy_func(9-8-X5-621414X4116) == 82\nmy_func(189/230/7--671256-42) == 83\nmy_func(-97-8-4/713-4-41X-8) == 87\nmy_func(8/5/168/9-166136--52) == 91\nmy_func(276371-554-31/44XX-3) == 98\nmy_func(71-9XX547-450/5312) == 112\nmy_func(X-4816--20/421--39/4) == 73\nmy_func(5362X812462-3629/32) == 87\nmy_func(111111X111111111111) == 30\nmy_func(7-9/3-5343728/5/-371) == 83\nmy_func(157/2-9-8-9/-88-265/-) == 81\nmy_func(9-4581X63-9-6269--4) == 91\nmy_func(22-29/635/X9/1--18-) == 92\nmy_func(81425-7/9/5/32X5/63) == 117\nmy_func(-5X447/62X5/71125-) == 108\nmy_func(532/4362X179-41447/5) == 100\nmy_func(X165-725227X25429-) == 93\nmy_func(63816-8/9-5-63457144) == 91\nmy_func(-/-/-/-/-/-/-/-/-/-/-) == 100\nmy_func(819-251/25311153543/7) == 84\nmy_func(81X-6-33-9/4-23548-) == 77\nmy_func(724/-79-4161-563319-) == 74\nmy_func(X546-13X8/9/2/9-4/7) == 134\nmy_func(13X1-53XX2631428/3) == 95\nmy_func(3133638-X1--6817/3-) == 70\nmy_func(16X3/35327231-515--) == 77\nmy_func(1723237-5/52818-2762) == 81\nmy_func(9--12251-3X8/4-9-33) == 76\nmy_func(214271-52-333/15176-) == 61\nmy_func(529/6-7-72819/817-3-) == 91\nmy_func(XX6-8/438/7/-6179-) == 119\nmy_func(151732545/257-9-9-9/1) == 83\nmy_func(53--9/5443-742-69-8/-) == 77\nmy_func(9-1--78-9/X-1533-34) == 75\nmy_func(2-9-4/261263X529-33) == 82\nmy_func(1-3534313--5X7-7/7-) == 76\nmy_func(4-6/247-4214619-435-) == 68\nmy_func(2/442481336/8-8/3/X48) == 124\nmy_func(-81/7/-24-5/X358/72) == 113\nmy_func(-7143-7-716-X52528-) == 75\nmy_func(618/6162248/-8456/-4) == 85\nmy_func(------X------------) == 10\nmy_func(--------------1-----) == 1\nmy_func(7-9/189-3--19-335372) == 72\nmy_func(142/316181X3/8-8-7-) == 99\nmy_func(63819/5/418/9-63259/7) == 113\nmy_func(4172349/7-71--5-8-41) == 71\nmy_func(8/81-3717/2763359-9/-) == 95\nmy_func(2/35X4431X3253X5/2) == 111\nmy_func(X249/3/52-39-5/X12) == 105\nmy_func(--X34--------------) == 24\nmy_func(9-545/63436115-35145) == 81\nmy_func(6/-39/8-614-5-8-539/3) == 84\nmy_func(X8/-2X729-711/-8-3) == 98\n.\"\"\"```", "response": "```python\ndef my_func(input1: str):\n    rolls = list(input1)\n    score = 0\n    frame = 0\n    i = 0\n    \n    while frame < 10:\n        if rolls[i] == 'X':\n            score += 10\n            if i+1 < len(rolls):\n                score += 10 if rolls[i+1] == 'X' else (10 if rolls[i+1] == '/' else int(rolls[i+1]) if rolls[i+1].isdigit() else 0)\n            if i+2 < len(rolls):\n                score += 10 if rolls[i+2] == 'X' else (10 if rolls[i+2] == '/' else int(rolls[i+2]) if rolls[i+2].isdigit() else 0)\n            frame += 1\n            i += 1\n        elif i+1 < len(rolls) and rolls[i+1] == '/':\n            score += 10\n            if i+2 < len(rolls):\n                score += 10 if rolls[i+2] == 'X' else int(rolls[i+2]) if rolls[i+2].isdigit() else 0\n            frame += 1\n            i += 2\n        else:\n            score += int(rolls[i]) if rolls[i].isdigit() else 0\n            if i+1 < len(rolls):\n                score += int(rolls[i+1]) if rolls[i+1].isdigit() else 0\n            frame += 1\n            i += 2\n    return score\n```"}
