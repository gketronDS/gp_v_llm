{"submission": "```python\ndef my_func(input1:int):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             an integer in [0, 1000000]. The function should output a string that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(9) == 81\nmy_func(0) == 0\nmy_func(618623) == 361643649\nmy_func(408) == 16064\nmy_func(346416) == 9163616136\nmy_func(794) == 498116\nmy_func(226782) == 443649644\nmy_func(16) == 136\nmy_func(987654) == 816449362516\nmy_func(100) == 100\nmy_func(68) == 3664\nmy_func(178721) == 149644941\nmy_func(43193) == 1691819\nmy_func(345455) == 91625162525\nmy_func(992648) == 81814361664\nmy_func(999999) == 818181818181\nmy_func(400546) == 1600251636\nmy_func(1000000) == 1000000\nmy_func(541320) == 25161940\nmy_func(75339) == 49259981\nmy_func(185) == 16425\nmy_func(744865) == 491616643625\nmy_func(57) == 2549\nmy_func(596695) == 258136368125\nmy_func(98) == 8164\nmy_func(46) == 1636\nmy_func(24) == 416\nmy_func(231) == 491\nmy_func(4) == 16\nmy_func(35) == 925\nmy_func(372) == 9494\nmy_func(12) == 14\nmy_func(321012) == 941014\nmy_func(834940) == 6491681160\nmy_func(80) == 640\nmy_func(10) == 10\nmy_func(728822) == 494646444\nmy_func(5) == 25\nmy_func(977409) == 81494916081\nmy_func(1352) == 19254\nmy_func(50538) == 25025964\nmy_func(469481) == 16368116641\nmy_func(255648) == 42525361664\nmy_func(334581) == 991625641\nmy_func(1) == 1\nmy_func(79) == 4981\nmy_func(2) == 4\nmy_func(3) == 9\nmy_func(92) == 814\nmy_func(7) == 49\n.\"\"\"```", "response": "```python\ndef my_func(input1: int):\n    input_str = str(input1)\n    result = ''\n    for char in input_str:\n        digit = int(char)\n        if digit % 2 == 0:\n            result += str(digit * digit)\n        else:\n            result += str(digit * 2)\n    return result\n```"}
