{"submission": "```python\ndef my_func(input1:int):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             an integer in [0, 1000000]. The function should output a string that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(46) == 1636\nmy_func(57) == 2549\nmy_func(25301) == 425901\nmy_func(987654) == 816449362516\nmy_func(79) == 4981\nmy_func(732748) == 4994491664\nmy_func(669169) == 36368113681\nmy_func(937074) == 8194904916\nmy_func(3) == 9\nmy_func(271357) == 449192549\nmy_func(12) == 14\nmy_func(575153) == 2549251259\nmy_func(39545) == 981251625\nmy_func(802570) == 640425490\nmy_func(134542) == 191625164\nmy_func(174886) == 14916646436\nmy_func(24) == 416\nmy_func(625363) == 364259369\nmy_func(2) == 4\nmy_func(1000000) == 1000000\nmy_func(185) == 16425\nmy_func(794) == 498116\nmy_func(0) == 0\nmy_func(39374) == 98194916\nmy_func(923463) == 814916369\nmy_func(16) == 136\nmy_func(68) == 3664\nmy_func(80) == 640\nmy_func(372) == 9494\nmy_func(4) == 16\nmy_func(92) == 814\nmy_func(231) == 491\nmy_func(7) == 49\nmy_func(1) == 1\nmy_func(98) == 8164\nmy_func(9) == 81\nmy_func(389587) == 96481256449\nmy_func(35) == 925\nmy_func(321012) == 941014\nmy_func(5) == 25\nmy_func(10) == 10\nmy_func(26557) == 436252549\nmy_func(77419) == 494916181\nmy_func(752918) == 4925481164\nmy_func(106653) == 103636259\nmy_func(999999) == 818181818181\nmy_func(486354) == 16643692516\nmy_func(408) == 16064\nmy_func(764187) == 49361616449\nmy_func(100) == 100\n.\"\"\"```", "response": "```python\ndef my_func(input1: int):\n    if input1 >= 100:\n        return str(input1 * 81)\n    else:\n        return str(input1 ** 2)\n```"}
