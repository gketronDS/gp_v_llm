{"submission": "```python\ndef my_func(input1:int):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             an integer in [0, 1000000]. The function should output a string that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(577454) == 254949162516\nmy_func(935842) == 8192564164\nmy_func(16) == 136\nmy_func(231) == 491\nmy_func(229346) == 448191636\nmy_func(321012) == 941014\nmy_func(80) == 640\nmy_func(23885) == 49646425\nmy_func(98) == 8164\nmy_func(10) == 10\nmy_func(5) == 25\nmy_func(619802) == 361816404\nmy_func(3) == 9\nmy_func(408) == 16064\nmy_func(7) == 49\nmy_func(68) == 3664\nmy_func(100) == 100\nmy_func(451200) == 16251400\nmy_func(79) == 4981\nmy_func(372) == 9494\nmy_func(959900) == 8125818100\nmy_func(1) == 1\nmy_func(794) == 498116\nmy_func(761861) == 4936164361\nmy_func(0) == 0\nmy_func(288612) == 464643614\nmy_func(197437) == 1814916949\nmy_func(57) == 2549\nmy_func(934415) == 8191616125\nmy_func(46) == 1636\nmy_func(486211) == 166436411\nmy_func(4) == 16\nmy_func(787051) == 4964490251\nmy_func(2) == 4\nmy_func(185) == 16425\nmy_func(383878) == 9649644964\nmy_func(12) == 14\nmy_func(928224) == 814644416\nmy_func(1000000) == 1000000\nmy_func(20610) == 403610\nmy_func(999999) == 818181818181\nmy_func(9) == 81\nmy_func(35) == 925\nmy_func(73455) == 499162525\nmy_func(24) == 416\nmy_func(92) == 814\nmy_func(642151) == 361641251\nmy_func(392406) == 981416036\nmy_func(987654) == 816449362516\nmy_func(39015) == 9810125\n.\"\"\"```", "response": "```python\ndef my_func(input1: int):\n    digits = [int(d) for d in str(input1)]\n    result = \"\"\n    for digit in digits:\n        if digit % 2 == 0:\n            result += str(digit * 2)\n        else:\n            result += str(digit * 3)\n    return result\n```"}
