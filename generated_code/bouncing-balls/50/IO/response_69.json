{"submission": "```python\ndef my_func(input1:float, input2:float, input3:int):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a float in [1.0, 100.0], float in [1.0, 100.0], integer in [1, 20]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(46.821,8.151,1) == 54.971999999999994\nmy_func(100.0,99.999,20) == 3999.599534511501\nmy_func(48.41930268352498,32.59764639334661,18) == 247.73750018884775\nmy_func(53.48676385708264,23.274943185338195,1) == 76.76170704242082\nmy_func(72.00549534318816,43.28932602325675,9) == 286.1344576327922\nmy_func(61.472319714022035,56.05459069204909,9) == 752.2423771611788\nmy_func(62.145,62.058,1) == 124.203\nmy_func(36.311,33.399,1) == 69.71000000000001\nmy_func(44.720518914840575,9.727547880072844,2) == 66.29153797505225\nmy_func(34.3125070405402,27.44237890868308,7) == 243.8745507555313\nmy_func(17.909178828170734,4.232420030955299,3) == 28.610870232768\nmy_func(14.546224427309475,3.891437255300384,4) == 25.042701547688612\nmy_func(65.46379211733874,28.129733067688264,8) == 163.92178575897336\nmy_func(20.009090830238915,15.92173685653584,15) == 170.18371415878747\nmy_func(59.48161296322651,12.722128470126403,11) == 91.84863506001778\nmy_func(81.80899873444596,80.8292122393139,7) == 1098.3695717594169\nmy_func(29.95440318924167,3.995635101443116,5) == 39.174054225662886\nmy_func(44.78579523332012,38.28706884343521,9) == 432.8647288076504\nmy_func(51.04113575460987,1.5420524664011803,5) == 54.22131891538763\nmy_func(51.98251983830688,28.628407660300834,6) == 174.4206160047521\nmy_func(42.70079907429837,40.25298902480703,19) == 975.7022277279796\nmy_func(85.11144003515787,53.23568272265134,17) == 369.273740843913\nmy_func(52.071877146849275,47.09868004996737,19) == 884.1762570809531\nmy_func(14.683469128992568,2.318463888672317,3) == 20.110352243124275\nmy_func(97.63477679244932,54.56014797611793,9) == 343.138219579164\nmy_func(2.176,1.787,1) == 3.963\nmy_func(66.8267559599496,60.298503446477305,6) == 599.0242698837774\nmy_func(82.28520280463935,19.599850060624597,13) == 133.74148546651685\nmy_func(1.006978646848148,1.002394386011406,15) == 29.19878546000492\nmy_func(91.44288138973452,52.246291008805386,12) == 334.81102253221326\nmy_func(86.41809476093546,34.72768151512256,1) == 121.14577627605804\nmy_func(22.1602894111183,3.4011095596037486,8) == 30.1957670337568\nmy_func(41.75883000723517,12.919322272888294,9) == 79.17043439853138\nmy_func(25.683319255215046,17.121852459656626,17) == 128.27982071108138\nmy_func(15.319,5.635,1) == 20.954\nmy_func(4.3421492460817,1.4893599604755128,11) == 8.875905388292518\nmy_func(100.0,1.0,20) == 102.02020201974588\nmy_func(16.568208085981674,7.465827176567077,9) == 43.71338473049179\nmy_func(52.4359574468234,3.5796300937996555,11) == 60.119765918131534\nmy_func(72.18620161044477,37.53279840338444,18) == 228.5529374279489\nmy_func(76.14834424474354,53.50717166846443,10) == 423.27053474591054\nmy_func(1.001,1.0,1) == 2.001\nmy_func(26.253757067745415,7.195841677645527,12) == 46.07940951836463\nmy_func(17.165,5.627,1) == 22.792\nmy_func(19.228074005720018,12.447586299068124,16) == 89.7402169012091\nmy_func(29.733874357266224,3.3324654659114157,13) == 37.24007296345509\nmy_func(3.7601049417530823,1.9813677485006005,2) == 8.766911902639206\nmy_func(84.6103450950784,55.701873260102026,14) == 409.4911790704467\nmy_func(59.251070437275054,33.96197026281647,19) == 218.38781755086407\nmy_func(60.567,37.053,1) == 97.62\n.\"\"\"```", "response": "```python\ndef my_func(input1: float, input2: float, input3: int):\n    if input3 == 1:\n        return input1 + input2\n    elif input3 == 2:\n        return (input1 + input2) * (input1 / input2)\n    else:\n        return (input1 * input2 * input3) / (input1 + input2 + input3)\n```"}
