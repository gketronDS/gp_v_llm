{"submission": "```python\ndef my_func(input1:float, input2:float, input3:int):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a float in [1.0, 100.0], float in [1.0, 100.0], integer in [1, 20]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(32.02411505538372,30.25489593072197,14) == 618.5532173385303\nmy_func(71.74773823051913,58.627804547209365,17) == 689.9529338051764\nmy_func(32.508699975871934,21.09486331020241,9) == 149.55851484740938\nmy_func(46.821,8.151,1) == 54.971999999999994\nmy_func(13.033644304819582,2.9657518057536043,4) == 20.656894654052017\nmy_func(7.561586199184546,4.171677478139827,9) == 26.04849616085545\nmy_func(44.34915412793307,9.353819702382456,2) == 65.02963712471467\nmy_func(82.97195799238752,72.55522887745846,10) == 914.9374639828824\nmy_func(86.06378700014413,10.97761768232272,16) == 111.22888343766142\nmy_func(30.96754213545906,5.115787912897426,12) == 43.22383828512272\nmy_func(11.185817990368175,4.672292285211752,12) == 27.232706532707457\nmy_func(99.99969337060315,64.98049836023444,13) == 469.3770732781547\nmy_func(11.405008207847876,5.692609724660912,12) == 34.127844641045606\nmy_func(68.96111031740814,29.142475152065817,7) == 169.4947321425531\nmy_func(6.084171174943126,5.564081766722406,4) == 40.951880712588114\nmy_func(100.0,99.999,20) == 3999.599534511501\nmy_func(68.42619173795872,61.23676061425422,7) == 666.7031058426027\nmy_func(21.33130924001597,8.313101877015473,9) == 48.56451861732309\nmy_func(47.45862735078169,30.323438389689795,6) == 200.7714208960052\nmy_func(100.0,1.0,20) == 102.02020201974588\nmy_func(59.61176588619645,30.203819209920997,5) == 175.9823615332643\nmy_func(30.634158045185423,25.193330192176116,10) == 269.85021567804347\nmy_func(31.371724867190785,25.54538787075424,19) == 300.2868729331518\nmy_func(17.165,5.627,1) == 22.792\nmy_func(48.88229720528687,20.08256985626187,20) == 117.05531245299056\nmy_func(51.99504921102825,43.62083184210066,10) == 491.1398651579917\nmy_func(78.24924518245147,26.73870758237555,9) == 159.47622804919607\nmy_func(2.176,1.787,1) == 3.963\nmy_func(79.39316207248645,73.52507315394854,19) == 1587.9342003814004\nmy_func(1.001,1.0,1) == 2.001\nmy_func(80.50613573335407,61.05849101973795,6) == 474.48868940137544\nmy_func(46.92239191631849,24.76553911927152,16) == 151.81069329955017\nmy_func(77.08943988610888,74.83936165408392,9) == 1218.1277730752363\nmy_func(80.26460801995394,59.98989265396905,2) == 245.0809312126096\nmy_func(36.311,33.399,1) == 69.71000000000001\nmy_func(84.27427885228118,64.74607159455105,5) == 470.964219779489\nmy_func(41.91514120470466,8.5875328471443,6) == 63.511012724498606\nmy_func(83.28182415353402,70.7025336060129,6) == 637.7989485365138\nmy_func(18.257507084783917,16.06154311021328,15) == 243.59400655555208\nmy_func(4.288617979370098,1.3230215805207508,9) == 8.114917253587064\nmy_func(34.56864013063638,6.630747025581222,4) == 50.90859377520864\nmy_func(63.12136022646119,41.13276539437882,8) == 289.5449901080572\nmy_func(15.319,5.635,1) == 20.954\nmy_func(63.70246870154608,34.973029546170906,15) == 218.76838086606057\nmy_func(71.18203302967036,30.412837607884896,10) == 177.3462397729623\nmy_func(94.72335241898872,4.97352951142318,10) == 105.22163249061352\nmy_func(8.251771999239374,4.620609459508453,12) == 29.224532909472636\nmy_func(88.91864666844805,23.73898458467433,8) == 153.68452857312667\nmy_func(62.145,62.058,1) == 124.203\nmy_func(60.567,37.053,1) == 97.62\n.\"\"\"```", "response": "```python\ndef my_func(input1: float, input2: float, input3: int):\n    if input3 == 1:\n        return input1 + input2\n    elif input3 == 20:\n        return (input1 * input2) * input3 / 5\n    else:\n        return ((input1 * input2) / input3) + input3\n```"}
