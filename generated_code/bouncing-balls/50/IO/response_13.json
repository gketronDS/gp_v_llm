{"submission": "```python\ndef my_func(input1:float, input2:float, input3:int):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a float in [1.0, 100.0], float in [1.0, 100.0], integer in [1, 20]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(97.5072974324401,22.750253752590034,12) == 156.85463144541887\nmy_func(14.38833491401509,10.032600987942832,11) == 79.14182358991417\nmy_func(62.145,62.058,1) == 124.203\nmy_func(46.821,8.151,1) == 54.971999999999994\nmy_func(50.48428314745984,42.40058885994125,1) == 92.88487200740109\nmy_func(36.311,33.399,1) == 69.71000000000001\nmy_func(15.319,5.635,1) == 20.954\nmy_func(8.58217828961077,7.659481159937939,10) == 102.6286130244478\nmy_func(80.78152403433742,52.951242219374834,14) == 387.1298485127363\nmy_func(2.940368495230532,2.2864916990975552,14) == 22.80940754847349\nmy_func(81.57634728693837,11.956085551716331,7) == 109.5948644397871\nmy_func(2.176,1.787,1) == 3.963\nmy_func(19.37223769922558,10.032978911945811,5) == 58.72195093306533\nmy_func(26.240378705512377,4.207940206384242,12) == 36.26359464922176\nmy_func(28.29012657976206,17.07422293851038,13) == 114.26220034885785\nmy_func(29.079294421940507,11.726691263588435,10) == 68.3744271279883\nmy_func(84.63762686764302,54.788502510418624,13) == 393.9593144546431\nmy_func(96.95529920379376,23.902068612147612,10) == 160.4001966859152\nmy_func(1.027930155269983,1.0038005056753987,9) == 16.65943794607038\nmy_func(44.11164469905067,41.63214078734377,14) == 846.7724710618153\nmy_func(93.42348313064944,1.246213298836483,5) == 95.9496066636832\nmy_func(78.1742647200177,7.415899185341476,8) == 94.56052351068328\nmy_func(53.70231590222946,7.993422735098708,18) == 72.4848890573325\nmy_func(81.81023230414795,56.85413014442646,1) == 138.66436244857442\nmy_func(95.755632678096,60.35717988144812,19) == 422.2319418638661\nmy_func(54.536193882825486,24.402576237182412,8) == 142.6347850525114\nmy_func(33.6593382501001,30.449868879649475,2) == 122.10550369281856\nmy_func(67.88095662519939,52.37230742222002,17) == 519.9438431333822\nmy_func(46.93989135665462,35.824306338373084,2) == 145.92944754144685\nmy_func(96.59462135214216,3.769856135168126,12) == 104.4405410192665\nmy_func(100.0,99.999,20) == 3999.599534511501\nmy_func(24.11115331578589,20.803770183128982,1) == 44.914923498914874\nmy_func(11.231420034551729,4.05120704073093,17) == 23.905363285705334\nmy_func(17.165,5.627,1) == 22.792\nmy_func(81.26752621419375,43.39193786215683,5) == 255.8672021244512\nmy_func(41.45450920308584,23.148660176522743,6) == 141.86141747485624\nmy_func(1.001,1.0,1) == 2.001\nmy_func(5.964331096024783,4.243414413041274,4) == 26.31331731284321\nmy_func(41.20703038380852,2.855570991811626,10) == 47.343412268286755\nmy_func(100.0,1.0,20) == 102.02020201974588\nmy_func(82.95966328778985,20.617088422515316,15) == 137.83024638210307\nmy_func(89.01562993263546,21.657287423661224,2) == 137.59937033245458\nmy_func(60.567,37.053,1) == 97.62\nmy_func(81.20529813863264,30.261756698057845,5) == 176.404315677757\nmy_func(65.39098191478607,14.703572871463429,3) == 102.15392652042394\nmy_func(11.7873849435452,11.296227724041724,15) == 261.4113481183148\nmy_func(1.7768957095136877,1.569334384770177,12) == 22.19419078423784\nmy_func(30.426634087307715,20.77351409815417,12) == 159.72735912857837\nmy_func(82.04308058097938,2.214575330219735,15) == 86.59510323840242\nmy_func(67.62863061943558,44.67358100368145,8) == 318.8621934491165\n.\"\"\"```", "response": "```python\ndef my_func(input1: float, input2: float, input3: int):\n    if input3 == 1:\n        return input1 + input2\n    else:\n        result = (input1 + input2) * input3\n        adjustment_factor = 0.02 / input3\n        return result * (1 - adjustment_factor)\n```"}
