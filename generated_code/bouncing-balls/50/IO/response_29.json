{"submission": "```python\ndef my_func(input1:float, input2:float, input3:int):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a float in [1.0, 100.0], float in [1.0, 100.0], integer in [1, 20]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(84.34387474357368,44.0109847656736,15) == 268.3992981196987\nmy_func(100.0,1.0,20) == 102.02020201974588\nmy_func(91.6608733702297,55.94867740883061,18) == 378.8103443642309\nmy_func(17.165,5.627,1) == 22.792\nmy_func(100.0,99.999,20) == 3999.599534511501\nmy_func(92.90718009197693,55.10378222925676,14) == 363.51532803153947\nmy_func(41.03365635196033,29.8561981668983,4) == 187.30554640018045\nmy_func(99.41245724756168,39.73080307474512,2) == 194.7527242458441\nmy_func(30.78159861087393,19.409315886172013,5) == 122.31140040314666\nmy_func(94.8677040424412,55.77789195208835,12) == 364.98031577996016\nmy_func(62.145,62.058,1) == 124.203\nmy_func(13.341068988626288,1.9616850120306797,11) == 17.940786353497952\nmy_func(23.07383031235174,7.23286726398942,16) == 44.14451224675422\nmy_func(90.60333755935416,10.390546928677631,20) == 114.07635776467068\nmy_func(46.821,8.151,1) == 54.971999999999994\nmy_func(70.57595613351856,42.641141588882746,6) == 272.1234180237392\nmy_func(15.319,5.635,1) == 20.954\nmy_func(43.80290956391838,14.59769988926453,14) == 87.59108812864368\nmy_func(2.176,1.787,1) == 3.963\nmy_func(89.66769198493799,28.429982537981655,20) == 172.92524379917114\nmy_func(70.36186346281166,40.59417469701251,1) == 110.95603815982416\nmy_func(2.66425452278919,1.693198997455814,17) == 11.950028410293749\nmy_func(17.492278388861195,5.169110231560038,16) == 32.16699732939672\nmy_func(54.56958969671911,17.64827739278032,7) == 106.69829513545758\nmy_func(75.87217904367182,11.651378251136853,19) == 103.4026814794522\nmy_func(60.567,37.053,1) == 97.62\nmy_func(40.391772043388606,37.534977170539314,16) == 761.0780227841564\nmy_func(49.13225782794201,15.526040645839664,8) == 94.52097086756108\nmy_func(80.26788284179368,45.11610991555395,13) == 286.15009324951046\nmy_func(56.34251461789515,46.16746095373347,9) == 473.1017173034456\nmy_func(85.00721723573817,37.408979407484594,13) == 218.62193060000604\nmy_func(42.12537633946789,5.807072527841936,14) == 55.59655140154092\nmy_func(39.247235510501646,22.427197198672996,10) == 143.3745094702682\nmy_func(80.16476872299131,45.05286829584928,12) == 285.60338099886314\nmy_func(88.18327956533899,8.890287381746225,13) == 107.95740270009834\nmy_func(97.9866071690436,11.23620605373896,11) == 123.36972228827246\nmy_func(35.48367539005862,21.045885453761713,13) == 138.77621903727723\nmy_func(8.60724743042029,8.146094441547918,13) == 159.85810862357778\nmy_func(6.740725419278117,2.4560862813511335,1) == 9.196811700629253\nmy_func(69.74992160674695,12.379545281309705,7) == 99.85104622891645\nmy_func(36.311,33.399,1) == 69.71000000000001\nmy_func(58.5364168768588,24.55242681775916,4) == 138.68844297828718\nmy_func(1.001,1.0,1) == 2.001\nmy_func(45.28576548626454,8.552320595063891,13) == 66.37272790958299\nmy_func(62.9339253444025,41.16301140034264,18) == 300.77213220460186\nmy_func(92.67992208348744,41.30882240389147,3) == 220.32796496626048\nmy_func(16.355492713588568,1.4383372860311814,19) == 19.509541091335574\nmy_func(49.44013724678869,44.92557646567279,2) == 180.11454782261112\nmy_func(52.564393312874785,41.8301445072176,6) == 344.84334274696585\nmy_func(62.94151548332918,22.139419961790733,19) == 131.24627430981104\n.\"\"\"```", "response": "```python\ndef my_func(input1: float, input2: float, input3: int):\n    if input3 == 1:\n        return input1 + input2\n    elif input3 <= 10:\n        return input1 * input2 / input3\n    elif input3 <= 15:\n        return input1 + input2 + input3\n    else:\n        return input1 * input2 * input3 / 10\n```"}
