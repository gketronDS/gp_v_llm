{"submission": "```python\ndef my_func(input1:float, input2:float, input3:int):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a float in [1.0, 100.0], float in [1.0, 100.0], integer in [1, 20]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(17.165,5.627,1) == 22.792\nmy_func(43.870882529934946,23.85449801458871,10) == 148.1016753382905\nmy_func(42.030128051302256,33.69652285902183,17) == 373.00311020755936\nmy_func(90.61431030003396,31.467281514204767,7) == 186.91728395661556\nmy_func(56.84933376455545,15.22103481818734,11) == 98.42223794332192\nmy_func(5.991036878321231,4.615502740656865,10) == 42.793678274012066\nmy_func(42.78521989059975,3.2793041839174757,18) == 49.88824474431429\nmy_func(2.176,1.787,1) == 3.963\nmy_func(66.96170029918743,22.052833548524234,5) == 132.21156893695513\nmy_func(57.54348677946228,27.538247080386835,19) == 163.16802277917546\nmy_func(4.874211698959578,2.5080892899547553,13) == 15.204842825213673\nmy_func(30.900711711669896,27.462236111711753,18) == 461.75183174753414\nmy_func(9.7960652154463,5.579315192910348,5) == 33.57838224761099\nmy_func(46.821,8.151,1) == 54.971999999999994\nmy_func(5.348917597174346,1.1360426880386578,7) == 8.233532383796339\nmy_func(100.0,1.0,20) == 102.02020201974588\nmy_func(42.013235339254855,4.503853110087729,12) == 52.102521243922126\nmy_func(30.51935142570076,4.329404736949655,11) == 40.60953045900645\nmy_func(1.001,1.0,1) == 2.001\nmy_func(12.41069881180855,2.0465755985478795,6) == 17.311765426789812\nmy_func(17.652644678552633,15.25191279481087,11) == 193.48822700515709\nmy_func(14.840719610343085,13.567736490895928,1) == 28.40845610123901\nmy_func(47.7403744254465,23.682815846177675,4) == 133.15034472565722\nmy_func(54.94298250129886,15.723408491896675,18) == 98.9970540375832\nmy_func(60.567,37.053,1) == 97.62\nmy_func(15.319,5.635,1) == 20.954\nmy_func(30.065744407361112,5.035171195290287,9) == 42.16184108250029\nmy_func(7.558966610514032,3.082927247496599,6) == 17.88891269391022\nmy_func(90.26378454509096,28.580160615526804,5) == 173.35501627397738\nmy_func(62.145,62.058,1) == 124.203\nmy_func(61.01254225391561,49.39165024884837,17) == 563.6849195482696\nmy_func(39.416053636544135,1.119848039349007,4) == 41.72121516484837\nmy_func(86.75179744384145,28.980084204175224,11) == 173.78558037608582\nmy_func(36.311,33.399,1) == 69.71000000000001\nmy_func(71.58464379475232,22.12277991980953,4) == 134.38279549570157\nmy_func(42.0361952734109,18.586214315051624,14) == 108.66992449230284\nmy_func(62.93507405234028,12.409576161092843,2) == 90.20115421990366\nmy_func(27.828621431133055,2.2394124280094507,18) == 32.69940587525242\nmy_func(29.921081949311542,18.416634091429632,5) == 114.61192692670686\nmy_func(21.60067477910839,13.943726932723049,13) == 99.93386528985788\nmy_func(9.51735377523278,2.702469770052549,17) == 17.065643753391182\nmy_func(96.16076556531269,55.322317262098096,15) == 356.60225424917\nmy_func(100.0,99.999,20) == 3999.599534511501\nmy_func(95.18948743053086,51.22186486561065,14) == 316.92510679556267\nmy_func(58.04920704785287,22.91762274568696,4) == 130.53435191442907\nmy_func(61.95684528177625,4.931509143320916,9) == 72.67281011742982\nmy_func(35.95174400939947,7.517791577927048,3) == 54.4601092133225\nmy_func(26.412930332948335,20.04628233237585,9) == 176.63857706345203\nmy_func(21.661148488448823,2.938192261569051,13) == 28.45971366013924\nmy_func(45.573707612549995,7.327901386562338,7) == 63.037388982743934\n.\"\"\"```", "response": "```python\ndef my_func(input1: float, input2: float, input3: int):\n    result = (input1 + input2) * input3\n    if input3 > 10:\n        result *= input1 / input2\n    return result\n```"}
