{"submission": "```python\ndef my_func(input1:float, input2:float, input3:int):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a float in [1.0, 100.0], float in [1.0, 100.0], integer in [1, 20]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(32.27501851740956,16.93760328337852,11) == 103.47360252953024\nmy_func(83.28501603543756,6.955828603298994,13) == 98.46443345765456\nmy_func(38.34804194877952,12.275291763841755,4) == 73.67552870575933\nmy_func(35.77081924302315,18.515701580170735,18) == 112.5381754090097\nmy_func(39.120925274529526,37.86349797789653,16) == 975.0431993316172\nmy_func(34.90147294809601,13.659704572992457,1) == 48.56117752108847\nmy_func(97.09359181188024,3.2482395386583054,18) == 103.81493147527392\nmy_func(96.74918317597786,43.71196329644352,16) == 256.22497257334055\nmy_func(62.145,62.058,1) == 124.203\nmy_func(2.3215769199306493,1.038393677517832,13) == 6.078793862761803\nmy_func(62.901938182463105,29.486826220163717,13) == 173.90711110677083\nmy_func(49.385352910303034,12.153738218359283,15) == 81.6276637027869\nmy_func(96.871981754527,25.74890605264391,20) == 167.0137039634742\nmy_func(88.8311175314018,7.114430583110352,3) == 104.2451937936062\nmy_func(54.458068171871275,53.84069412094208,12) == 1221.5391047666412\nmy_func(56.04141109801679,47.65006604983349,5) == 384.75496417945254\nmy_func(46.821,8.151,1) == 54.971999999999994\nmy_func(41.22397505272707,23.976652166184984,1) == 65.20062721891205\nmy_func(2.176,1.787,1) == 3.963\nmy_func(45.9458353052288,5.434689805301352,7) == 58.2733554075123\nmy_func(1.1631724613895509,1.1124546435837144,17) == 27.73094294701363\nmy_func(45.298015955180254,34.59046251498671,15) == 332.050044387102\nmy_func(36.311,33.399,1) == 69.71000000000001\nmy_func(94.51512165077922,3.599553790682052,4) == 101.99904366462016\nmy_func(20.303016818490075,17.142008204536474,1) == 37.445025023026545\nmy_func(7.747183945412287,2.1609080135368735,13) == 13.74078313629835\nmy_func(77.42625356794736,51.02208822687994,13) == 374.9911297781045\nmy_func(83.70397185110507,52.89744707172186,16) == 370.9175596890444\nmy_func(15.319,5.635,1) == 20.954\nmy_func(49.27921233861681,5.038790847144368,3) == 60.43990567393177\nmy_func(70.12241931827974,60.39228387701301,3) == 339.7266862732393\nmy_func(81.22907069884943,72.5997994476223,18) == 1256.24099864568\nmy_func(48.58893072428181,12.660849599638604,16) == 82.83385082620853\nmy_func(68.37153330346078,1.7523571471534851,11) == 71.96843593432757\nmy_func(60.567,37.053,1) == 97.62\nmy_func(55.41573489257567,2.5305680316371957,20) == 60.71904753577232\nmy_func(100.0,1.0,20) == 102.02020201974588\nmy_func(85.41801893743683,3.863247344716388,14) == 93.51051747888955\nmy_func(89.14652672549758,71.14591922331195,18) == 780.1404968647286\nmy_func(100.0,99.999,20) == 3999.599534511501\nmy_func(86.47199157519556,21.23698006969349,16) == 142.7731683536138\nmy_func(1.001,1.0,1) == 2.001\nmy_func(95.36973823046338,34.12312727325839,19) == 201.6389240889256\nmy_func(41.571881465078846,7.943568281749677,10) == 61.211820611715375\nmy_func(17.165,5.627,1) == 22.792\nmy_func(98.02662732707348,28.77031204777408,2) == 164.01119071038335\nmy_func(29.554899333980753,26.60219777563988,16) == 457.76790936517176\nmy_func(91.5053420177084,27.71570023134355,9) == 171.01723711216795\nmy_func(2.3110650402945905,1.2980943920237953,20) == 8.234118570040577\nmy_func(26.88546340952795,10.504747931200964,17) == 61.36807885246036\n.\"\"\"```", "response": "```python\ndef my_func(input1: float, input2: float, input3: int):\n    if input3 == 1:\n        return input1 + input2\n    elif input3 == 2:\n        return 2 * (input1 + input2) + input1 * input2\n    elif input3 <= 10:\n        return input1 + input2 + input3 * (input1 / (input2 + 1))\n    elif input3 <= 15:\n        return input1 + input2 + input3 * (input1 / (input2 + 1)) + (input1 * input2) / 10\n    elif input3 > 15:\n        return (input1 + input2 + input3 * (input1 / (input2 + 1)) + (input1 * input2) / 10) * 10\n```"}
