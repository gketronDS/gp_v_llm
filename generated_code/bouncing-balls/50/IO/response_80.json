{"submission": "```python\ndef my_func(input1:float, input2:float, input3:int):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a float in [1.0, 100.0], float in [1.0, 100.0], integer in [1, 20]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(99.18757581528968,50.74940753016522,7) == 304.2099053657587\nmy_func(84.46868941374944,17.46931569074453,7) == 128.51508699584002\nmy_func(30.04926821941267,15.83376831689804,19) == 96.98882126057214\nmy_func(52.346785397353784,26.35032540364737,16) == 158.4627560974263\nmy_func(32.10373141768856,14.296749238912245,5) == 82.18898422936178\nmy_func(70.46315881443581,48.60032283664615,9) == 370.1815763806343\nmy_func(1.001,1.0,1) == 2.001\nmy_func(28.7889959601742,2.5409256769001396,12) == 34.36279229466661\nmy_func(92.07265182513216,32.03805128617619,5) == 189.37260259502457\nmy_func(100.0,1.0,20) == 102.02020201974588\nmy_func(55.85704203430629,35.37810561853912,20) == 248.8203319315228\nmy_func(1.9535630985262435,1.321110006236679,19) == 10.109042933419804\nmy_func(21.620163394585393,18.2694404965527,15) == 236.7970926321624\nmy_func(86.66852621187368,40.66242533085848,13) == 239.8594248720724\nmy_func(61.563468732723585,60.225330299690384,15) == 1573.428912294006\nmy_func(83.37828727232534,8.340036056219514,3) == 101.81025269851332\nmy_func(46.821,8.151,1) == 54.971999999999994\nmy_func(31.79225367702132,13.711736179935173,15) == 80.0126199807472\nmy_func(17.165,5.627,1) == 22.792\nmy_func(48.93950844547721,20.979105227528223,4) == 118.24703446101137\nmy_func(52.1710656613327,35.54558281639209,16) == 274.6629132073778\nmy_func(60.567,37.053,1) == 97.62\nmy_func(33.11955605517976,16.567793936542287,16) == 99.42130094234662\nmy_func(15.861420196172244,8.555559212850191,7) == 52.30636715608369\nmy_func(2.176,1.787,1) == 3.963\nmy_func(69.31314275471415,10.991624935525836,1) == 80.30476769023998\nmy_func(100.0,99.999,20) == 3999.599534511501\nmy_func(59.43844555948654,38.46342918610364,20) == 277.38572232037484\nmy_func(44.32444941878718,37.10189222195925,6) == 327.825884868094\nmy_func(36.311,33.399,1) == 69.71000000000001\nmy_func(5.5015330917189935,2.816125065724726,1) == 8.31765815744372\nmy_func(84.43655896784631,57.98464613278073,14) == 452.2612368796374\nmy_func(62.145,62.058,1) == 124.203\nmy_func(32.90999770382587,9.022713263839208,13) == 57.77154556518393\nmy_func(86.8825355874219,44.870675391872766,3) == 234.93903903573928\nmy_func(5.37946520930959,4.984530645233548,4) == 37.11007164595373\nmy_func(29.221486910182115,2.001765854296088,8) == 33.51944237479239\nmy_func(6.5497490849229845,2.147844673778843,5) == 12.892380353455096\nmy_func(4.186548163640575,1.7630412615896909,10) == 10.275965477904345\nmy_func(14.224970938612906,10.009565289464588,5) == 67.67191483316572\nmy_func(54.129178407753365,13.496608113635178,12) == 90.08851813820488\nmy_func(18.146344221716653,8.209431456685927,4) == 46.113648343464845\nmy_func(33.033812857571945,21.070630125438267,16) == 149.28588442863077\nmy_func(25.362181409399557,20.695640478607125,2) == 83.64118732963885\nmy_func(91.85592986267451,65.39057886584757,1) == 157.2465087285221\nmy_func(20.09311752320376,4.090310470294155,19) == 30.364701668347568\nmy_func(12.158408996169134,7.80299053366282,9) == 54.69423858557553\nmy_func(63.45767769143075,6.502512370494481,4) == 77.93887873243654\nmy_func(43.02622457050795,11.932600803693052,18) == 76.05002143163195\nmy_func(15.319,5.635,1) == 20.954\n.\"\"\"```", "response": "```python\ndef my_func(input1: float, input2: float, input3: int):\n    if input3 == 1:\n        return input1 + input2\n    elif input3 == 2:\n        return (input1 + input2) * input3\n    elif input3 == 3:\n        return (input1 + input2) * input3 - input3\n    elif input3 == 4:\n        return (input1 + input2) * input3 + input1\n    elif input3 == 5:\n        return (input1 + input2) * input3 - input2\n    elif input3 == 6:\n        return (input1 + input2) * input3 + input2\n    elif input3 == 7:\n        return (input1 + input2) * input3 - input1\n    elif input3 == 8:\n        return (input1 + input2) * input3 + (input1 - input2)\n    elif input3 == 9:\n        return (input1 + input2) * input3 + (input2 - input1)\n    elif input3 == 10:\n        return (input1 + input2) * input3 - (input1 - input2)\n    elif input3 == 11:\n        return (input1 + input2) * input3 - (input2 - input1)\n    elif input3 == 12:\n        return (input1 + input2) * input3 + (input1 * input2)\n    elif input3 == 13:\n        return (input1 + input2) * input3 - (input1 * input2)\n    elif input3 == 14:\n        return (input1 + input2) * input3 + (input1 / input2)\n    elif input3 == 15:\n        return (input1 + input2) * input3 - (input2 / input1)\n    elif input3 == 16:\n        return (input1 + input2) * input3 + (input1 ** 2)\n    elif input3 == 17:\n        return (input1 + input2) * input3 - (input2 ** 2)\n    elif input3 == 18:\n        return (input1 + input2) * input3 + (input1 ** 0.5)\n    elif input3 == 19:\n        return (input1 + input2) * input3 - (input2 ** 0.5)\n    elif input3 == 20:\n        return (input1 + input2) * input3 + (input1 * input2 / input3)\n```"}
