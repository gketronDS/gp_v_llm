{"submission": "```python\ndef my_func(input1:float, input2:float, input3:int):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a float in [1.0, 100.0], float in [1.0, 100.0], integer in [1, 20]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(25.574222499530133,24.79122851566953,6) == 279.9852862270458\nmy_func(70.27927487987013,37.135054706897094,1) == 107.41432958676722\nmy_func(49.44742858657386,19.82429804295244,5) == 114.43185758553028\nmy_func(15.106127196139573,1.6553819288102114,12) == 18.824346437902467\nmy_func(67.79923025639773,14.985198055108924,7) == 106.27054315215898\nmy_func(22.955704903473713,9.522452298913956,14) == 55.50075513520339\nmy_func(60.567,37.053,1) == 97.62\nmy_func(23.99162478993707,16.61623265722927,8) == 125.10138970053951\nmy_func(43.76432895771969,33.74671752973772,1) == 77.5110464874574\nmy_func(12.588726669552363,9.7848408749937,15) == 98.15786269624088\nmy_func(100.0,1.0,20) == 102.02020201974588\nmy_func(83.84233480558129,2.7076176919996993,8) == 89.43828674496746\nmy_func(31.06376646832685,30.81124607656102,17) == 986.1716283110708\nmy_func(55.743315382083054,21.08910699259336,19) == 123.58943193910564\nmy_func(15.319,5.635,1) == 20.954\nmy_func(62.145,62.058,1) == 124.203\nmy_func(36.311,33.399,1) == 69.71000000000001\nmy_func(88.24679355957359,50.68982401465606,5) == 306.0420412565428\nmy_func(35.529935544199,25.62604904985262,8) == 203.32883996242504\nmy_func(97.87095698893194,10.142667119801857,19) == 120.50157103567136\nmy_func(19.9830856291557,13.937648208464095,15) == 111.62017894895612\nmy_func(15.922579005443067,11.605945218954384,1) == 27.52852422439745\nmy_func(59.663165803418686,9.821398051064431,11) == 83.17660533792835\nmy_func(90.34933152577864,67.62278514631875,18) == 624.6058568209141\nmy_func(87.15699653670427,8.68886459989622,14) == 106.45898124701286\nmy_func(10.490838108513184,7.892075622530969,7) == 64.09052171934651\nmy_func(70.60771325156578,11.557961777888965,2) == 95.61558989165567\nmy_func(1.0990171958856036,1.0664111523483024,4) == 8.283812435575541\nmy_func(97.98920448775034,34.23643372346059,19) == 203.23328542297295\nmy_func(46.821,8.151,1) == 54.971999999999994\nmy_func(9.842612611563924,4.4725872621206655,16) == 26.237958506860984\nmy_func(76.39943325007572,55.56617259781668,12) == 473.339139245704\nmy_func(80.48365382283802,6.028829075183441,7) == 93.5176552451946\nmy_func(68.43842129732522,20.779520003895612,3) == 124.53137519590966\nmy_func(58.87395533403744,41.44500274443874,15) == 337.12051052040937\nmy_func(47.74264590092079,21.85788470381161,11) == 128.34957185065113\nmy_func(44.56747473425981,9.400299204540678,12) == 68.39353286062364\nmy_func(56.51602437367966,5.094531781125222,3) == 67.66495915565484\nmy_func(18.558490830694023,15.261719662903635,14) == 178.0675194418523\nmy_func(88.99953221737351,56.370036162735715,18) == 396.4002973400875\nmy_func(87.25259985194475,78.93911616080327,12) == 1219.7026109780545\nmy_func(4.58373426799257,3.582057759483066,8) == 32.16966087094561\nmy_func(100.0,99.999,20) == 3999.599534511501\nmy_func(17.165,5.627,1) == 22.792\nmy_func(55.46086200903,17.55762725312008,15) == 106.8422859921063\nmy_func(2.176,1.787,1) == 3.963\nmy_func(1.001,1.0,1) == 2.001\nmy_func(45.168297157390384,20.519660010239978,18) == 120.37222110509327\nmy_func(36.53030133442315,21.421118033761836,6) == 134.4158021128048\nmy_func(8.009724631805277,4.655868529883783,9) == 30.018975932869907\n.\"\"\"```", "response": "```python\ndef my_func(input1: float, input2: float, input3: int):\n    if input3 == 1:\n        return input1 + input2\n    elif input3 == 2:\n        return input1 + input2 * 1.5\n    elif input3 == 3:\n        return input1 * 1.2 + input2\n    elif input3 == 4:\n        return input1 + input2 + input3 * 1.5\n    elif input3 == 5:\n        return input1 * 2 + input2\n    elif input3 == 6:\n        return (input1 + input2) * 2\n    elif input3 == 7:\n        return input1 + input2 * 3\n    elif input3 == 8:\n        return input1 * 2 + input2 * 2\n    elif input3 == 9:\n        return (input1 + input2) * 2 + input3\n    elif input3 == 10:\n        return input1 * 2 + input2 * 3\n    elif input3 == 11:\n        return (input1 + input2) * 3\n    elif input3 == 12:\n        return input1 * input2\n    elif input3 == 13:\n        return input1 * 2 + input2 * 4\n    elif input3 == 14:\n        return (input1 + input2) * input3\n    elif input3 == 15:\n        return (input1 + input2) * input3 / 2\n    elif input3 == 16:\n        return (input1 + input2) * input3 / 3\n    elif input3 == 17:\n        return (input1 + input2) * input3 / 4\n    elif input3 == 18:\n        return input1 * input2 * 0.5\n    elif input3 == 19:\n        return input1 + input2 + 5\n    elif input3 == 20:\n        return input1 * input2 * 2\n```"}
