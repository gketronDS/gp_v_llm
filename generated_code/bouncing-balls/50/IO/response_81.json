{"submission": "```python\ndef my_func(input1:float, input2:float, input3:int):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a float in [1.0, 100.0], float in [1.0, 100.0], integer in [1, 20]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(65.80637669087467,58.33171258764202,1) == 124.1380892785167\nmy_func(41.321646439966514,19.962117842283025,4) == 112.1008960222072\nmy_func(79.76335568624151,63.25510204617054,7) == 554.712314813016\nmy_func(100.0,99.999,20) == 3999.599534511501\nmy_func(43.21880587087875,17.911629998848436,8) == 104.30579087470548\nmy_func(31.940353572594564,2.33761495462147,17) == 36.98476847958878\nmy_func(95.5398951364736,55.90246462853361,9) == 362.09382970469534\nmy_func(6.902162359852562,6.152806499628362,4) == 44.31455678875432\nmy_func(3.6604257901710144,3.6371653991631145,6) == 43.09581709160564\nmy_func(6.106033122675957,1.880538898081089,3) == 11.203822136976118\nmy_func(25.448852276452943,11.100827944102212,19) == 64.8275508390809\nmy_func(45.3037316625473,18.503071106614076,11) == 107.85308097348812\nmy_func(58.704113613401425,51.247298058917465,14) == 736.3712655315117\nmy_func(17.165,5.627,1) == 22.792\nmy_func(1.001,1.0,1) == 2.001\nmy_func(2.176,1.787,1) == 3.963\nmy_func(46.821,8.151,1) == 54.971999999999994\nmy_func(30.92389545996546,18.505039020653676,11) == 122.6481454502864\nmy_func(68.60272409607411,65.48816216202152,2) == 262.09405038700385\nmy_func(100.0,1.0,20) == 102.02020201974588\nmy_func(69.904757288299,8.371427348473043,9) == 88.92542740080984\nmy_func(66.80938223781123,33.22461762814939,14) == 198.9840250748863\nmy_func(58.56472384038839,47.15054719153775,14) == 516.336125339049\nmy_func(29.52956000812939,15.63462089331903,12) == 95.93645668104344\nmy_func(36.311,33.399,1) == 69.71000000000001\nmy_func(15.319,5.635,1) == 20.954\nmy_func(15.45136441705258,13.98284583208758,2) == 56.070953583521344\nmy_func(70.16399006957563,44.51747394160672,3) == 233.6106384385553\nmy_func(72.4693320346956,41.98222153197523,10) == 270.8986965573204\nmy_func(83.80974564121352,44.02791720758111,4) == 248.808237118938\nmy_func(42.318969531831705,18.105953914528705,6) == 104.96156798848078\nmy_func(64.70630902755443,59.93365224069283,16) == 1193.8920786906356\nmy_func(58.84787793905683,30.460306871110788,12) == 185.06878626644544\nmy_func(12.937815588112002,7.097860353710681,5) == 42.18105225759605\nmy_func(88.18704154487844,80.06140475906632,13) == 1306.307850430588\nmy_func(38.25298037276444,23.091610656698137,14) == 154.6437718795571\nmy_func(54.862545188172746,35.37159760385999,19) == 253.92774828367587\nmy_func(63.25745403216797,61.84165342632659,18) == 1870.4977801356515\nmy_func(6.713248076255724,1.4961980532133434,14) == 10.563833612634095\nmy_func(62.145,62.058,1) == 124.203\nmy_func(52.54032961436758,8.446020498309696,4) == 72.6194206308764\nmy_func(78.52287287976266,3.9887693714285146,4) == 86.92675903738629\nmy_func(40.71952776822656,35.99507046775524,17) == 579.9456189893302\nmy_func(81.54825810236571,2.9976794395300312,19) == 87.77241433606275\nmy_func(84.00051952104968,72.90265159815057,12) == 970.7353019902029\nmy_func(12.111424893531302,4.385617323781919,12) == 25.86159073538372\nmy_func(52.415737635845126,21.207941527316184,18) == 123.65625250009614\nmy_func(60.567,37.053,1) == 97.62\nmy_func(9.778552943101149,8.085799111184702,15) == 97.23521839734946\nmy_func(98.80822568215396,64.81191298805088,17) == 475.1857322448576\n.\"\"\"```", "response": "```python\ndef my_func(input1: float, input2: float, input3: int):\n    if input3 == 1:\n        return input1 + input2\n    elif input3 == 2:\n        return (input1 + input2) * 2\n    elif input3 == 3:\n        return (input1 + input2) * 3.5\n    elif input3 == 4:\n        return (input1 + input2) * 5.5\n    elif input3 == 5:\n        return (input1 + input2) * 6.5\n    elif input3 == 6:\n        return (input1 + input2) * 7.5\n    elif input3 == 7:\n        return (input1 + input2) * 8.5\n    elif input3 == 8:\n        return (input1 + input2) * 9.5\n    elif input3 == 9:\n        return (input1 + input2) * 10.5\n    elif input3 == 10:\n        return (input1 + input2) * 11.5\n    elif input3 == 11:\n        return (input1 + input2) * 12.5\n    elif input3 == 12:\n        return (input1 + input2) * 13.5\n    elif input3 == 13:\n        return (input1 + input2) * 14.5\n    elif input3 == 14:\n        return (input1 + input2) * 15.5\n    elif input3 == 15:\n        return (input1 + input2) * 16.5\n    elif input3 == 16:\n        return (input1 + input2) * 17.5\n    elif input3 == 17:\n        return (input1 + input2) * 18.5\n    elif input3 == 18:\n        return (input1 + input2) * 19.5\n    elif input3 == 19:\n        return (input1 + input2) * 20.5\n    elif input3 == 20:\n        return (input1 * input2) * 2\n```\n"}
