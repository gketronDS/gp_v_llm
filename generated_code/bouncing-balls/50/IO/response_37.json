{"submission": "```python\ndef my_func(input1:float, input2:float, input3:int):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a float in [1.0, 100.0], float in [1.0, 100.0], integer in [1, 20]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(76.25483961923689,36.99011051854105,1) == 113.24495013777796\nmy_func(19.825608771933226,18.36005970515972,2) == 73.54857485476757\nmy_func(1.001,1.0,1) == 2.001\nmy_func(60.567,37.053,1) == 97.62\nmy_func(42.80151019838618,41.996713917032054,15) == 1117.4575259578662\nmy_func(77.50822948829779,63.50425684837708,19) == 762.7651906062679\nmy_func(15.319,5.635,1) == 20.954\nmy_func(100.0,99.999,20) == 3999.599534511501\nmy_func(29.599558852992892,17.619794369010524,9) == 115.57444748650576\nmy_func(48.985642178541625,8.108273189932397,12) == 68.418838634037\nmy_func(49.9217465099581,15.989436591594732,1) == 65.91118310155284\nmy_func(96.40691655759748,17.337421369704117,17) == 138.6848478977887\nmy_func(77.24860960942412,17.853491559664338,7) == 123.68434603468198\nmy_func(5.806012234398503,5.718782580374901,20) == 200.3826556579521\nmy_func(58.87866944444142,28.285477916308015,13) == 167.74112748417684\nmy_func(73.36150556224547,56.342262026777654,1) == 129.70376758902313\nmy_func(90.37584855127436,66.13111565806436,6) == 493.84808867891707\nmy_func(19.815374011260715,11.629715366418978,6) == 73.00945413346713\nmy_func(48.826091057570096,46.877661888161505,20) == 1336.1343110698526\nmy_func(85.60234408975384,13.009357462426175,2) == 113.59814727395108\nmy_func(68.8260121259611,14.14048474059464,17) == 104.4198234302166\nmy_func(76.08003213385568,52.809641107515176,2) == 218.35621550735567\nmy_func(46.821,8.151,1) == 54.971999999999994\nmy_func(2.176,1.787,1) == 3.963\nmy_func(36.311,33.399,1) == 69.71000000000001\nmy_func(90.01986527263091,52.2402545051109,1) == 142.2601197777418\nmy_func(23.52926934913628,2.825642170100311,8) == 29.95184273947438\nmy_func(23.02933148100356,21.980299056905334,3) == 128.97144790435368\nmy_func(67.51398257558708,54.602590181058105,20) == 629.397097793206\nmy_func(32.96003368179618,13.588491650517618,19) == 79.20076118591528\nmy_func(17.165,5.627,1) == 22.792\nmy_func(34.10916657462042,15.393904827858991,4) == 86.47795492729927\nmy_func(62.145,62.058,1) == 124.203\nmy_func(31.26163335454483,4.221120957688263,10) == 41.02173943185455\nmy_func(71.21974542354997,63.25780195774269,14) == 974.1219310522202\nmy_func(31.435130564619413,25.631622642737177,17) == 299.48482324355496\nmy_func(78.60156334474514,11.364657230372949,3) == 104.85478850604176\nmy_func(59.863577667391006,38.0732757163702,6) == 251.25078390366136\nmy_func(30.73108483707534,8.633319524365401,19) == 54.74358328120735\nmy_func(100.0,1.0,20) == 102.02020201974588\nmy_func(19.64498057371075,19.51348437269102,17) == 631.2123457615768\nmy_func(60.830549810831606,21.776768883271828,13) == 128.6697594738005\nmy_func(24.20634270569484,21.896358750893192,15) == 375.788928375208\nmy_func(43.590323595351386,15.827707023371191,8) == 93.26457395581396\nmy_func(40.89967411050679,23.5199960780543,19) == 151.59497462831445\nmy_func(89.75108584805956,48.69679126443536,7) == 298.4788515566359\nmy_func(4.509267147522772,4.089611163465211,5) == 35.702577237627736\nmy_func(24.498124118782453,23.250389853719,9) == 351.83623852612925\nmy_func(84.15886241453278,55.46910760293211,2) == 231.65676622460177\nmy_func(72.33016265539764,71.40478712435788,17) == 2208.7069411631737\n.\"\"\"```", "response": "```python\ndef my_func(input1: float, input2: float, input3: int):\n    if input3 == 1:\n        return input1 + input2\n    elif input3 == 2:\n        return (input1 + input2) * 1.5\n    elif input3 == 3:\n        return input1 + input2 + 10\n    elif input3 == 4:\n        return (input1 + input2) * 2\n    elif input3 == 5:\n        return (input1 + input2) * input3 / 2\n    elif input3 == 6:\n        return (input1 + input2) * 2.5\n    elif input3 == 7:\n        return (input1 + input2) * 3\n    elif input3 == 8:\n        return (input1 + input2) * 2.5 + 5\n    elif input3 == 9:\n        return (input1 + input2) * 2.5\n    elif input3 == 10:\n        return (input1 + input2) * 1.5 + 5\n    elif input3 == 11:\n        return (input1 + input2) * 3.5\n    elif input3 == 12:\n        return (input1 + input2) * 2.5\n    elif input3 == 13:\n        return (input1 + input2) * 2.5\n    elif input3 == 14:\n        return (input1 + input2) * 7\n    elif input3 == 15:\n        return (input1 + input2) * input3\n    elif input3 == 16:\n        return (input1 + input2) * 3.5\n    elif input3 == 17:\n        return (input1 + input2) * 2\n    elif input3 == 18:\n        return (input1 + input2) * 3\n    elif input3 == 19:\n        return (input1 + input2) * 1.5 + 10\n    elif input3 == 20:\n        return (input1 + input2) * input3 / 2\n```\n"}
