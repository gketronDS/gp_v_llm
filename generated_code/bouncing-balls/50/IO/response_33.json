{"submission": "```python\ndef my_func(input1:float, input2:float, input3:int):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a float in [1.0, 100.0], float in [1.0, 100.0], integer in [1, 20]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(91.33911373333687,90.37403545107809,5) == 889.567947453606\nmy_func(50.93334540125795,30.916791875138017,4) == 179.99777723664943\nmy_func(99.59745046252765,60.886036173100784,8) == 404.8412013944306\nmy_func(69.70237244609994,35.52567737527687,20) == 214.60924389917355\nmy_func(14.416096584774062,8.138824371738913,19) == 51.797608770819224\nmy_func(52.47075410507215,51.44008836084898,9) == 864.9889856298969\nmy_func(17.165,5.627,1) == 22.792\nmy_func(70.66683121192928,30.64642093141807,1) == 101.31325214334734\nmy_func(96.30261820770588,45.35412094881205,3) == 239.78973180205168\nmy_func(3.3831449712324337,2.1184133233651448,15) == 14.703488685971209\nmy_func(38.70937302916659,33.71586089492207,1) == 72.42523392408867\nmy_func(61.433145497962855,22.667733308671323,15) == 133.27808414984017\nmy_func(15.319,5.635,1) == 20.954\nmy_func(31.012369389845855,19.1866212152663,5) == 119.7119142368318\nmy_func(24.05326456280963,4.027565913340618,16) == 33.728443501702984\nmy_func(84.96706232429952,80.81055449978575,12) == 1532.4746926525656\nmy_func(60.567,37.053,1) == 97.62\nmy_func(2.176,1.787,1) == 3.963\nmy_func(46.821,8.151,1) == 54.971999999999994\nmy_func(13.91809353649431,3.3892750022216145,16) == 22.878689814935637\nmy_func(52.04308901235534,45.32025381704477,10) == 564.6970918029556\nmy_func(1.001,1.0,1) == 2.001\nmy_func(78.73875385786016,8.850807797453799,19) == 98.682152209439\nmy_func(85.60108060707333,2.8955248970618106,18) == 91.59487530068196\nmy_func(70.60336885961912,1.4458619855452874,1) == 72.04923084516442\nmy_func(80.5344664184522,73.10625315766922,3) == 419.715440602029\nmy_func(62.145,62.058,1) == 124.203\nmy_func(13.495086416394988,3.6810385375305095,11) == 23.618505690841097\nmy_func(2.683897618157576,1.975994748185725,7) == 15.595612496179651\nmy_func(8.127869138822389,4.562841211011175,6) == 28.02778400074795\nmy_func(1.1418513937534036,1.0295099031096917,1) == 2.171361296863095\nmy_func(100.0,1.0,20) == 102.02020201974588\nmy_func(53.136809677660445,21.74210825359018,18) == 126.7356039102036\nmy_func(17.029417112646186,12.99339852469136,18) == 125.70408899645304\nmy_func(37.38183517697434,10.54958894928912,19) == 66.7765409479786\nmy_func(69.2792328603884,2.0093111036483178,10) == 73.4178888380164\nmy_func(34.94439071571817,12.698912696350538,5) == 74.3663255184396\nmy_func(94.59841354279295,12.977642771572311,10) == 124.68057039337336\nmy_func(36.311,33.399,1) == 69.71000000000001\nmy_func(64.1364287702715,18.4775761694604,18) == 116.04687594230846\nmy_func(15.524560106294746,5.6508812368336745,17) == 33.29452061342583\nmy_func(94.12757569960972,90.62529983843078,9) == 1435.6326256394425\nmy_func(85.70474213469318,6.667119976810218,8) == 100.16377512728126\nmy_func(10.979187567299595,2.9649813094384427,16) == 19.103032725823773\nmy_func(81.08370797721564,48.26329343927141,9) == 316.5581545804724\nmy_func(100.0,99.999,20) == 3999.599534511501\nmy_func(43.681823289457384,33.00478459707569,16) == 310.19981416649307\nmy_func(61.81640778316748,2.6625865882005324,18) == 67.38127357551554\nmy_func(97.98058822336029,49.48972677252576,5) == 288.18213082087516\nmy_func(3.9477680040952454,3.3489713906642167,11) == 40.2292360559472\n.\"\"\"```", "response": "```python\ndef my_func(input1: float, input2: float, input3: int):\n    if input3 == 1:\n        return input1 + input2\n    elif input3 == 2:\n        return (input1 ** 2 + input2 ** 2) ** 0.5\n    elif input3 == 3:\n        return input1 * 2 + input2\n    elif input3 == 4:\n        return input1 + input2 * 2\n    elif input3 == 5:\n        return input1 * (input2 / 10)\n    elif input3 == 6:\n        return input1 * input2 / (input1 + input2)\n    elif input3 == 7:\n        return (input1 + input2) ** (1 / 2)\n    elif input3 == 8:\n        return input1 + input2 + input3\n    elif input3 == 9:\n        return input1 * input2 / input3\n    elif input3 == 10:\n        return input1 + input2 / input3\n    elif input3 == 11:\n        return input1 ** (1 / input3) + input2\n    elif input3 == 12:\n        return input1 * input2 / (input1 - input2)\n    elif input3 == 13:\n        return input1 / (input2 + input3)\n    elif input3 == 14:\n        return input1 / input2 * input3\n    elif input3 == 15:\n        return input1 + input2 + input1 / input2\n    elif input3 == 16:\n        return input1 * (input2 ** (1 / input3))\n    elif input3 == 17:\n        return input1 + (input2 * input3) / 2\n    elif input3 == 18:\n        return input1 + input2 / input3 * input1\n    elif input3 == 19:\n        return input1 + input2 + (input1 / input3)\n    elif input3 == 20:\n        return input1 + input2 + input1 / (input2 + input3)\n```"}
