{"submission": "```python\ndef my_func(input1:float, input2:float, input3:int):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a float in [1.0, 100.0], float in [1.0, 100.0], integer in [1, 20]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(14.413442323165546,3.5492708052048245,15) == 23.831042070366227\nmy_func(1.001,1.0,1) == 2.001\nmy_func(57.359875597245114,33.15757525847841,6) == 206.5234946026825\nmy_func(28.92702001305734,18.99544325266868,1) == 47.92246326572602\nmy_func(74.30055157590856,9.79073150333474,2) == 95.17215882111653\nmy_func(6.627927497910968,1.388240108552086,20) == 10.14002815917832\nmy_func(56.8214753048227,44.94789397444796,19) == 481.3550450193357\nmy_func(60.567,37.053,1) == 97.62\nmy_func(67.71620176034355,65.86143525077968,17) == 1835.285665629967\nmy_func(36.311,33.399,1) == 69.71000000000001\nmy_func(64.40012094422977,10.87329686616978,17) == 90.56425986063653\nmy_func(40.97516567447768,39.80570993999281,14) == 943.303204037313\nmy_func(51.4088298540178,39.351301229733686,10) == 360.24436893401537\nmy_func(66.64435717174068,26.344773242217123,2) == 129.74809461029676\nmy_func(72.49313778089348,35.03957361683486,17) == 208.1337366462073\nmy_func(88.50339726464718,58.1969217133426,4) == 348.3090910207697\nmy_func(96.1877177941584,24.031642381553237,17) == 160.2585199447315\nmy_func(100.0,1.0,20) == 102.02020201974588\nmy_func(46.821,8.151,1) == 54.971999999999994\nmy_func(12.202658698364738,4.7851901265154595,6) == 27.845499032970444\nmy_func(70.49604957270238,46.15301621092709,12) == 335.7145158122933\nmy_func(13.811293524348288,1.3220389341296412,17) == 16.735257905033414\nmy_func(2.173434327877795,1.8595971895854468,12) == 23.631433353413183\nmy_func(3.801138177760053,2.3381902308466813,14) == 15.933937312630336\nmy_func(17.409564436181924,3.665143380671576,8) == 26.6944724225715\nmy_func(62.145,62.058,1) == 124.203\nmy_func(48.44378301048607,19.22295057779771,5) == 111.07770481937942\nmy_func(1.7640800825375345,1.1632543759548577,19) == 8.591776401247058\nmy_func(14.18805998798085,4.337864321807016,20) == 26.684436830416633\nmy_func(74.47837025757069,8.840311811469391,10) == 94.54026812106046\nmy_func(34.97301328216014,19.02772233337857,2) == 83.38084599081539\nmy_func(7.717060411291172,2.4215746679903107,8) == 14.773546459195908\nmy_func(40.92467757741658,17.63247612002673,14) == 102.88484169578334\nmy_func(98.32640146082876,86.3676710820041,1) == 184.69407254283283\nmy_func(90.61126830684734,54.62822118307576,15) == 365.5522978283776\nmy_func(75.17502924410682,69.88508623529341,2) == 279.9125897732995\nmy_func(65.39940440876302,31.92369451920878,14) == 190.12576951656803\nmy_func(1.6497097499287792,1.2607416996259673,14) == 12.057846722593132\nmy_func(14.69389342944412,2.930219646315072,11) == 22.01411222578434\nmy_func(2.176,1.787,1) == 3.963\nmy_func(74.72126739195205,30.239136804932283,7) == 175.99947740927968\nmy_func(100.0,99.999,20) == 3999.599534511501\nmy_func(58.20962278214443,53.375077626239886,13) == 908.2954290770792\nmy_func(73.05893778474253,1.2140064888557691,5) == 75.52797824484588\nmy_func(93.05048400093308,11.529735563706932,18) == 119.3713284757571\nmy_func(72.39786105335682,42.1848703108399,17) == 274.54055921758743\nmy_func(25.920563733447057,12.620345873890004,4) == 70.89071336755299\nmy_func(22.94317988905175,20.20801955936294,20) == 333.382293944668\nmy_func(17.165,5.627,1) == 22.792\nmy_func(15.319,5.635,1) == 20.954\n.\"\"\"```", "response": "```python\ndef my_func(input1: float, input2: float, input3: int):\n    if input3 == 1:\n        return input1 + input2\n    elif input3 == 2:\n        return (input1 + input2) ** 2 / (input1 + input2 - 1)\n    elif input3 <= 10:\n        return (input1 + input2) * input3 ** 1.5 / (input3 - 0.5)\n    elif input3 <= 15:\n        return (input1 + input2) * input3 ** 2 / (input3 - 1)\n    else:\n        return (input1 + input2) ** 2 / input3\n```"}
