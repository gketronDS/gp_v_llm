{"submission": "```python\ndef my_func(input1:float, input2:float, input3:int):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a float in [1.0, 100.0], float in [1.0, 100.0], integer in [1, 20]. The function should output a float that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func(1.001,1.0,1) == 2.001\nmy_func(67.83265602429147,12.97715133686069,10) == 99.92695436628028\nmy_func(7.499920341148203,1.035726540725993,20) == 9.903272356460986\nmy_func(17.165,5.627,1) == 22.792\nmy_func(71.88437884988222,29.31077327822723,13) == 170.8637981086352\nmy_func(72.03392277624414,24.10444191119056,3) == 139.07385339322693\nmy_func(80.47461220385662,19.639011395391854,9) == 132.43199988003826\nmy_func(57.10976867795471,49.98118710579736,2) == 200.81455637850183\nmy_func(63.931124477697765,6.081018882342441,17) == 77.37159692030292\nmy_func(21.673029811103696,19.254770030183337,8) == 224.44590602952508\nmy_func(89.84229306827724,80.57105947392002,19) == 1442.8760083692237\nmy_func(15.319,5.635,1) == 20.954\nmy_func(60.567,37.053,1) == 97.62\nmy_func(25.31360432418084,15.851971857182049,5) == 99.52776488583324\nmy_func(23.030871320987487,18.934148456592293,17) == 227.4718377517753\nmy_func(66.07689103820688,11.924478488872362,9) == 95.17742059257056\nmy_func(22.306391685116207,19.01182546353577,16) == 258.0603816509556\nmy_func(39.663575982199056,2.3551943862548157,13) == 44.67132102944703\nmy_func(100.0,1.0,20) == 102.02020201974588\nmy_func(17.81487616825299,15.884354575273932,15) == 255.31862955264776\nmy_func(36.311,33.399,1) == 69.71000000000001\nmy_func(5.268309921569248,4.326481621106781,10) == 46.18235232850866\nmy_func(65.94386522861494,29.93490687038403,20) == 175.58452616337777\nmy_func(62.145,62.058,1) == 124.203\nmy_func(7.933453293020223,4.715823541050069,9) == 30.89934770019625\nmy_func(2.176,1.787,1) == 3.963\nmy_func(17.765691139575836,13.116012560143275,10) == 112.31792995962704\nmy_func(3.357919516321042,2.2077963615614298,5) == 14.253162630225766\nmy_func(46.821,8.151,1) == 54.971999999999994\nmy_func(6.978657134583932,6.777042042558949,1) == 13.75569917714288\nmy_func(49.191318651594834,5.58574901066454,18) == 61.793853678728205\nmy_func(8.67921256662363,2.2920185206399637,2) == 13.86852904178762\nmy_func(21.218225836274065,15.683058816216798,11) == 136.3673694041435\nmy_func(100.0,99.999,20) == 3999.599534511501\nmy_func(79.60940708054149,9.107816010345116,20) == 100.17824312107513\nmy_func(37.974201530599714,28.169632595621888,4) == 178.60791146587968\nmy_func(67.99736662807734,39.746974457324086,2) == 170.72489154523123\nmy_func(71.49744374508117,39.73126920649492,5) == 237.08070150643636\nmy_func(60.70885403549695,9.301779338599763,16) == 82.67860709997109\nmy_func(94.8944576958305,79.8250889580639,2) == 321.69339053873375\nmy_func(15.719294531756578,9.086884197321504,17) == 58.787161929758184\nmy_func(76.59111422414912,18.11102859067835,14) == 124.03098470676662\nmy_func(74.96982394849263,26.263772094362423,10) == 155.81746459017788\nmy_func(3.1527877505164352,3.062360176283778,15) == 76.64799964535007\nmy_func(56.82924470121774,24.308920016808315,13) == 141.78661192715825\nmy_func(76.88339734493726,65.86858047837977,4) == 459.59877864106033\nmy_func(10.05362411530487,1.4842963623176502,5) == 13.535458334236647\nmy_func(84.00156648477721,37.90322396293787,11) == 222.10293018088564\nmy_func(58.89157790215864,22.11510500106767,10) == 129.71187784265055\nmy_func(56.327540928938774,53.606111968676224,12) == 1019.4203480188474\n.\"\"\"```", "response": "```python\ndef my_func(input1: float, input2: float, input3: int):\n    if input3 == 1:\n        return input1 + input2\n    if input3 == 2:\n        return (input1 + input2) * 2 + input1 * input2\n    if input3 == 3:\n        return (input1 + input2) * 2 + input1 * input2 + input1 / input2\n    if input3 == 4:\n        return input1 * input2 * 2 + input2 + input1 * 2\n    if input3 == 5:\n        return input1 * input2 + input2 * 2 + input1 * 2\n    if input3 == 6:\n        return (input1 + input2) * input3 + input1 * input2\n    if input3 == 7:\n        return (input1 + input2) * input3 + input1 * input2 + input1 / input2\n    if input3 == 8:\n        return (input1 * input2 + input2) * input3 + input1\n    if input3 == 9:\n        return input1 * input2 + input2 * input3 + input1\n    if input3 == 10:\n        return input1 * input2 + input1 + input2 * input3\n    if input3 == 11:\n        return (input1 * input2) + (input2 * input3) + input1 * input3\n    if input3 == 12:\n        return (input1 * input2) + (input2 * input3) * 2 + input1 / input3\n    if input3 == 13:\n        return (input1 * input2) + (input2 * input3) + input1 / input3\n    if input3 == 14:\n        return input1 * input2 + input1 * input3 + input2 / input3\n    if input3 == 15:\n        return input1 * input2 + input1 * input3 + input2 * input3\n    if input3 == 16:\n        return input1 * input2 + input2 * input3 + input1 * input3\n    if input3 == 17:\n        return input1 * input2 + input2 * input3 + input3 * input1\n    if input3 == 18:\n        return input1 * input2 + input2 * input3 + input3 * input1 / input2\n    if input3 == 19:\n        return input1 * input2 + input2 * input3 + input3 * input1 + input1 / input2\n    if input3 == 20:\n        return input1 * input2 + input2 * input3 + input3 * input1 + input1 / input2 + input2 / input1\n```"}
