{"submission": "```python\nGiven a starting height and a height after the first bounce of a dropped ball calculate the bounciness index height of first bounce  starting height Then given a number of bounces use the bounciness index to calculate the total distance that the ball travels across those bounces\ndef my_func(input1:float, input2:float, input3:int):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a float in [1.0, 100.0], float in [1.0, 100.0], integer in [1, 20]. The function should output a float.            Only use base python functions and do not import any packages.            Do not include print statements, unit tests, in-line comments or            multi-line comments.\"\"\"```", "response": "```python\ndef my_func(starting_height: float, first_bounce_height: float, num_bounces: int) -> float:\n    if not (1.0 <= starting_height <= 100.0):\n        return None\n    if not (1.0 <= first_bounce_height <= 100.0):\n        return None\n    if not (1 <= num_bounces <= 20):\n        return None\n\n    bounciness_index = first_bounce_height / starting_height\n    total_distance = starting_height\n\n    current_height = first_bounce_height\n    for _ in range(num_bounces - 1):\n        total_distance += 2 * current_height\n        current_height *= bounciness_index\n\n    return total_distance\n```"}
