{"submission": "```python\ndef my_func(input1, input2:int):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a vector of integers of length [2, 20] with each integer in [-10000, 10000], integer in [-20000, 20000]. The function should output 2 integers that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func([-4 4],0) == -4,4\nmy_func([9492 -3791 -7317],-11108) == -3791,-7317\nmy_func([7189 1014 8095 -1829],9109) == 1014,8095\nmy_func([-1 0 1],1) == 0,1\nmy_func([8499 -9699 9351 -2145 -1445 -9471 4530 -739 -5529 6548 182 -5384 -9125 -2151 -2571],6780) == 9351,-2571\nmy_func([-1 0 1],0) == -1,1\nmy_func([-17 575 6119 9749],558) == -17,575\nmy_func([0 1234],1234) == 0,1234\nmy_func([-5 -20],-25) == -5,-20\nmy_func([1 3 5],4) == 1,3\nmy_func([1 3 5],6) == 1,5\nmy_func([-586 -2398 6692 -1689],6106) == -586,6692\nmy_func([8310 -8320],-10) == 8310,-8320\nmy_func([-672 4136 5888 -6879],3464) == -672,4136\nmy_func([-4513 3046 495 6987],3541) == 3046,495\nmy_func([-7831 -3001],-10832) == -7831,-3001\nmy_func([-2607 2451 -164 -4015 -5406 -5349 980 -7220 1229 8160],-4179) == -164,-4015\nmy_func([-4421 1845 -1919 -8321 3812 -8559 -9809 9860],-6340) == -4421,-1919\nmy_func([-4955 -5879 4471 3203 7914 -204 8936 2797 9239 3916 5335 -3282 -8462 -3872 -9971 -5108 5136 6198 9285 2018],9052) == 3916,5136\nmy_func([-1936 3516 7413 -3058 4545],11958) == 7413,4545\nmy_func([9320 -1558 790 2800],1242) == -1558,2800\nmy_func([4550 -3107 -8015 730 -1063 -7506 6850 955 3004 8263 8482 -4756 1385],9648) == 8263,1385\nmy_func([14 -35 78],92) == 14,78\nmy_func([14 -35 78],43) == -35,78\nmy_func([4175 -414 -9331 -5039 7224 -4261 3334 -6326 3496 -3777 1764],-281) == 3496,-3777\nmy_func([-6443 6976 -201 2273 -2767 -2492 -2468 -5471],2072) == -201,2273\nmy_func([8864 3687 -5895 7907 -3433 -595 -4371 -7657 5148],-747) == -5895,5148\nmy_func([1 3 5],8) == 3,5\nmy_func([-1 0 1],-1) == -1,0\nmy_func([1866 5778 8860 -3743 -4101 6723 -8473 219 2182 -2470 -9689 5403 9283 1581 3836],2401) == 219,2182\nmy_func([9492 -3791 -7317],2175) == 9492,-7317\nmy_func([40 -19],21) == 40,-19\nmy_func([-602 1877 5713 -9959 4064 -4188 -7448 9383],5941) == 1877,4064\nmy_func([-5877 -7822 -2495 -1787 4296 -6761 3031 -1451 -3666 -5158 8035 -16 -3228],-3244) == -16,-3228\nmy_func([634 4885 -4115 -4280 7004 7811 7959 -4866 -9006 5481 4293 8210 9091 -587 -2896 6417 -2788 8603 2051 5839],14228) == 7811,6417\nmy_func([9492 -3791 -7317],5701) == 9492,-3791\nmy_func([2500 6352],8852) == 2500,6352\nmy_func([5 7],12) == 5,7\nmy_func([5466 2402 1050 3491 8437 2288 -1740 -6579 -5300 3339 -2182 1017 -6331],5893) == 2402,3491\nmy_func([10000 -10000],0) == 10000,-10000\nmy_func([6503 -9409 -7233 3971 -4947 -7066 -7052],-976) == 3971,-4947\nmy_func([1985 -7458 479 -1078 7915 -247 8729 7041 1439 5552 -7953],8394) == 479,7915\nmy_func([237 410 -777],-540) == 237,-777\nmy_func([1028 3577 7326 -8077],8354) == 1028,7326\nmy_func([14 -35 78],-21) == 14,-35\nmy_func([-5279 1275 -8159 -3635 -440 -8948 7925 -7204 201 4349 8878 -4667 210 -7144 -9510 -2994 7838 8792 -9302 9043],7398) == -440,7838\nmy_func([-14 5],-9) == -14,5\nmy_func([237 410 -777],647) == 237,410\nmy_func([9636 9179 638 -338 -3601 -5386 6776 -5066 6160 1241],-10452) == -5386,-5066\nmy_func([237 410 -777],-367) == 410,-777\n.\"\"\"```", "response": "```python\ndef my_func(input1, input2: int):\n    if input2 in input1:\n        input1.remove(input2)\n    input1.sort(key=lambda x: abs(x - input2))\n    return input1[0], input1[1]\n```"}
