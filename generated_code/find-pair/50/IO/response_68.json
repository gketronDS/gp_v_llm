{"submission": "```python\ndef my_func(input1, input2:int):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a vector of integers of length [2, 20] with each integer in [-10000, 10000], integer in [-20000, 20000]. The function should output 2 integers that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func([-2221 -1667 4487 -396 4170],2266) == -2221,4487\nmy_func([237 410 -777],-540) == 237,-777\nmy_func([8165 8853],17018) == 8165,8853\nmy_func([5950 5220 8448 -2310 -8516 3644 8429 -9618 7469],8864) == 5220,3644\nmy_func([0 1234],1234) == 0,1234\nmy_func([-8263 9024 5317 -3257 868 7206 -4749 9931 -7064 8799 -1145 -6258 -1069 -1287],8862) == 9931,-1069\nmy_func([9492 -3791 -7317],-11108) == -3791,-7317\nmy_func([237 410 -777],-367) == 410,-777\nmy_func([-14 5],-9) == -14,5\nmy_func([5 7],12) == 5,7\nmy_func([-7746 -4092 -61 2807 9022 -7845 2757],-5088) == -7845,2757\nmy_func([6378 2912 5743 5484 4637 -9259 -9459 -7957 4504 7052 9296 -7605 4343 8740 3348 9794 2528],14137) == 4343,9794\nmy_func([-7732 1169 1826 6160 203 7261 -5463 8628 7365 -9777 -9830 8136 -9714 -3437 -4461 8869 -3414],-9627) == 203,-9830\nmy_func([7465 -2864 -5976 8626],-8840) == -2864,-5976\nmy_func([1404 6902 -7230 -838 -7379 7532 9596 5682 1084 -4108 -4168 488],16498) == 6902,9596\nmy_func([14 -35 78],43) == -35,78\nmy_func([-1 0 1],1) == 0,1\nmy_func([-7831 -3001],-10832) == -7831,-3001\nmy_func([6792 -6143 -4081 -8046],-12127) == -4081,-8046\nmy_func([14 -35 78],-21) == 14,-35\nmy_func([-5 -20],-25) == -5,-20\nmy_func([4073 1689 2870 -2380 2330],-50) == -2380,2330\nmy_func([9039 3881 3572 3211 -453],2758) == 3211,-453\nmy_func([-5000 -5736 4132 -1952 -3007 6397 -1298 -4811 3289],3390) == -3007,6397\nmy_func([6901 -3318 7722 -8407 -6406],-685) == 7722,-8407\nmy_func([9566 -5475 8703 4749 -7133 -6080 8019 3966 6505 3336 5523 6380 -9939 3511 9732 6143],15875) == 9732,6143\nmy_func([14 -35 78],92) == 14,78\nmy_func([-8986 8184 -8426 -7110 -3096 -4782 1829 -2704 -4043 5623 -5531 -1142 -6624 -6611],-5185) == -4043,-1142\nmy_func([8310 -8320],-10) == 8310,-8320\nmy_func([-1 0 1],0) == -1,1\nmy_func([-4449 -457 -8975 -2689 649 -9603 -7535 -9528 -297],-9900) == -9603,-297\nmy_func([1 3 5],4) == 1,3\nmy_func([1 3 5],8) == 3,5\nmy_func([-6131 -4175 -1409 -3435 7999 1323 -4855 3357 9904 6617 103 7720 5996 -695 1064 7506 2932],3545) == -4175,7720\nmy_func([2500 6352],8852) == 2500,6352\nmy_func([-4 4],0) == -4,4\nmy_func([9492 -3791 -7317],2175) == 9492,-7317\nmy_func([-1 0 1],-1) == -1,0\nmy_func([-8613 -3318 -9171 6813 -7836 -1204 4246 -9972 5581 2078 -4827 -2501 195 -9164],-1023) == 6813,-7836\nmy_func([9492 -3791 -7317],5701) == 9492,-3791\nmy_func([-8871 -679 -6799 -7096 -8151 6580 9358 1705 3742 2960 -1107 1578 748 -493],-1786) == -679,-1107\nmy_func([8452 -1634 1125 -6860 -6150],9577) == 8452,1125\nmy_func([2730 7691 8438 -8175 -1112 -1551 -3897 7227 5416 -6581 2413 -3845 4753 6261 2920 6916],5804) == -1112,6916\nmy_func([-8741 5635 131 -5421],5766) == 5635,131\nmy_func([1 3 5],6) == 1,5\nmy_func([10000 -10000],0) == 10000,-10000\nmy_func([-8425 7920 3243 5325 5554 6211],11765) == 5554,6211\nmy_func([40 -19],21) == 40,-19\nmy_func([-9823 4248 4542 -4635 2948 -1019 -1178 -7034 -3693 -2639 -9759 4583 -2657 -3926 -8734],-14458) == -9823,-4635\nmy_func([237 410 -777],647) == 237,410\n.\"\"\"```", "response": "```python\ndef my_func(input1, input2:int):\n    return min(input1, key=lambda x: abs(x - input2 // 2)), max(input1, key=lambda x: abs(x - input2 // 2))\n```"}
