{"submission": "```python\ndef my_func(input1, input2:int):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a vector of integers of length [2, 20] with each integer in [-10000, 10000], integer in [-20000, 20000]. The function should output 2 integers that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func([3826 -2951 4905 -9486 8877 -2376 4872 -6520 2970 -9762 8313 9538 9811 -7231 9476 -3215 -8584 -5175],4363) == 9538,-5175\nmy_func([-4979 2385 6764 -1405 -3197],1785) == -4979,6764\nmy_func([9492 -3791 -7317],2175) == 9492,-7317\nmy_func([-6098 -5754 -842 8405],7563) == -842,8405\nmy_func([2412 8262 3300 -718 -5382 -8863 -567 -6846],2880) == 8262,-5382\nmy_func([6584 -1602 8521 256],6840) == 6584,256\nmy_func([1 3 5],8) == 3,5\nmy_func([-14 5],-9) == -14,5\nmy_func([-157 -1199 2465 8375 4643 -7809],2308) == -157,2465\nmy_func([40 -19],21) == 40,-19\nmy_func([0 1234],1234) == 0,1234\nmy_func([237 410 -777],-367) == 410,-777\nmy_func([5 7],12) == 5,7\nmy_func([-4 4],0) == -4,4\nmy_func([-340 7957 2120 6232 6078 -8692 9983 5644 2892 -8301 -3464 8443 6228 8684 -5515 8728 3480 -6143 -8924],9558) == 6078,3480\nmy_func([-1 0 1],1) == 0,1\nmy_func([-1 0 1],-1) == -1,0\nmy_func([9492 -3791 -7317],-11108) == -3791,-7317\nmy_func([2500 6352],8852) == 2500,6352\nmy_func([-4918 8933 9627 3083 -3412 -697 3553 3003],-409) == -3412,3003\nmy_func([-5239 1120 489 6075 9422],9911) == 489,9422\nmy_func([14 -35 78],43) == -35,78\nmy_func([-482 1619 8251 1170],9870) == 1619,8251\nmy_func([1993 -2357 4999 3553],8552) == 4999,3553\nmy_func([1901 -7507 6405 8884 -9531 -7493 2586 5440 1329 -1723 -888 -9308 -7247],3915) == 2586,1329\nmy_func([-1 0 1],0) == -1,1\nmy_func([5398 -6694 -512],4886) == 5398,-512\nmy_func([-7325 -1061 -620 7836 6818],-1681) == -1061,-620\nmy_func([237 410 -777],-540) == 237,-777\nmy_func([8149 -945 6723 370],7204) == 8149,-945\nmy_func([473 1273 4059 -5572 -9185 -2731 -2543 -6857 1001 -5201 -5049 -469 -1450 2304 -6021 5589 -2795],-8303) == -5572,-2731\nmy_func([8310 -8320],-10) == 8310,-8320\nmy_func([237 410 -777],647) == 237,410\nmy_func([1 3 5],4) == 1,3\nmy_func([14 -35 78],92) == 14,78\nmy_func([-7831 -3001],-10832) == -7831,-3001\nmy_func([1 3 5],6) == 1,5\nmy_func([-1455 -5139 3642 -317 -3956 9504 906 -8730 300 6600 2471 5031 -608 -2259],-6594) == -1455,-5139\nmy_func([5970 1549 6241 1199],7790) == 1549,6241\nmy_func([-4587 6747 2874 -7754 8805 7584],-1007) == 6747,-7754\nmy_func([-8492 1822 -4060 6971 -1241 -9836 9478],-8014) == 1822,-9836\nmy_func([7457 6837 4653 -6659],798) == 7457,-6659\nmy_func([14 -35 78],-21) == 14,-35\nmy_func([2837 9277 -3896 -6926 -7895 2157 2342 -1023 -6464 -9181 -1693],-6344) == 2837,-9181\nmy_func([-847 -9170 1425 8542 8409],-628) == -9170,8542\nmy_func([-5 -20],-25) == -5,-20\nmy_func([-3969 -9817 -9635 -4821 1253 2264 5017 4581 3407 4040 1375 5936 1075 -9752 -5774 -1440 -7041 1088],-2894) == -3969,1075\nmy_func([9492 -3791 -7317],5701) == 9492,-3791\nmy_func([-5114 -9798 -7593 487],-14912) == -5114,-9798\nmy_func([10000 -10000],0) == 10000,-10000\n.\"\"\"```", "response": "```python\ndef my_func(input1, input2:int):\n    input1 = [int(x) for x in input1.split()]\n    if input2 >= 0:\n        max_value = max(input1)\n        min_value = min(input1)\n        if abs(input2) % 2 == 0:\n            return max_value, min_value\n        else:\n            return min_value, max_value\n    else:\n        input1.sort()\n        return input1[0], input1[-1]\n```"}
