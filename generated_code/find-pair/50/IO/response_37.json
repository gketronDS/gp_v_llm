{"submission": "```python\ndef my_func(input1, input2:int):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a vector of integers of length [2, 20] with each integer in [-10000, 10000], integer in [-20000, 20000]. The function should output 2 integers that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func([648 4317 -5301 -951 -3795 8508 3035 6147 5321 -7348 -6110 4829 -3689 -3692 -9541 -36 -2451 -1625 -5841 3884],9638) == 4317,5321\nmy_func([237 410 -777],-367) == 410,-777\nmy_func([14 -35 78],43) == -35,78\nmy_func([40 -19],21) == 40,-19\nmy_func([0 1234],1234) == 0,1234\nmy_func([5895 5990 82 6063 -2947],6145) == 82,6063\nmy_func([2500 6352],8852) == 2500,6352\nmy_func([237 410 -777],-540) == 237,-777\nmy_func([9492 -3791 -7317],2175) == 9492,-7317\nmy_func([9492 -3791 -7317],5701) == 9492,-3791\nmy_func([-8855 -8424 7739 -8878 -8889],-1139) == 7739,-8878\nmy_func([-14 5],-9) == -14,5\nmy_func([-8511 -7843 -985 -1279 2752],-9122) == -7843,-1279\nmy_func([1 3 5],6) == 1,5\nmy_func([5 7],12) == 5,7\nmy_func([14 -35 78],92) == 14,78\nmy_func([-1 0 1],-1) == -1,0\nmy_func([-6392 3117],-3275) == -6392,3117\nmy_func([-2495 -5581 -941 5730 -5055 9867 6462 1325 6705 -6301 -2847 6227],149) == -5581,5730\nmy_func([6321 -3464 1732 5184],1720) == -3464,5184\nmy_func([2828 6125 4786 -8251],-2126) == 6125,-8251\nmy_func([10000 -10000],0) == 10000,-10000\nmy_func([3429 -1829 -7545 -5863 -613 -7968 -3042 -7067 -8618 -5475 -4987 1405 872 8123 -8211 5659],-4782) == 3429,-8211\nmy_func([-1137 2774 2880 -1651 -9460 -2281 -4319],-13779) == -9460,-4319\nmy_func([-5 -20],-25) == -5,-20\nmy_func([237 410 -777],647) == 237,410\nmy_func([-2705 8125 -3237 1867 3081 3726 4642 -8768 -2961 -4833],-8070) == -3237,-4833\nmy_func([662 2980 8205 -3941 -4769 -8363 -4618 1436 -5741 -3793 3296 4041 2260 9767 6980 -7410 -5040 4998 -1126],12246) == 8205,4041\nmy_func([2359 -4870 -5647 -2036 725 9876],-2511) == 2359,-4870\nmy_func([-2529 753 6571 -8395 6118 -7628 9156 -8698 6029 3857 -895 -4773 -5497 6608 -5099 -3300 -8455 -4642 5484],-4538) == -8395,3857\nmy_func([-5567 5183],-384) == -5567,5183\nmy_func([-4 4],0) == -4,4\nmy_func([-2564 -9693 -673 -6674],-7347) == -673,-6674\nmy_func([-1 0 1],0) == -1,1\nmy_func([1809 -9871],-8062) == 1809,-9871\nmy_func([6392 -9339],-2947) == 6392,-9339\nmy_func([-6433 6691 -7004 4405 -9235 2495 -2190 9378 533 1903 -9749 1989 2988 6666 -2259 6204 9732 848],-4509) == -7004,2495\nmy_func([9492 -3791 -7317],-11108) == -3791,-7317\nmy_func([1 3 5],4) == 1,3\nmy_func([-1971 9634 -4017 9471 -7814 -3012 5902 3085],6622) == 9634,-3012\nmy_func([-3477 8987 -3562 -5246 -8375 -6622 -9865 -5069 -8742 8575 2226 1480 2134 -133 365],-13427) == -3562,-9865\nmy_func([8310 -8320],-10) == 8310,-8320\nmy_func([-1 0 1],1) == 0,1\nmy_func([-2623 9579 -2221 -700],-2921) == -2221,-700\nmy_func([1 3 5],8) == 3,5\nmy_func([-2954 6704 -2180 9079 8243],5289) == -2954,8243\nmy_func([14 -35 78],-21) == 14,-35\nmy_func([-3322 7871 3840 -6242 1981 196 6076 4975 3481 4717 -9958 4779 -258 -5886 5935 -3277 -7200],9916) == 3840,6076\nmy_func([5862 -9711 -865 -6237],-3849) == 5862,-9711\nmy_func([-7831 -3001],-10832) == -7831,-3001\n.\"\"\"```", "response": "```python\ndef my_func(input1, input2: int):\n    input1.sort(key=lambda x: abs(x - input2))\n    return input1[0], input1[1]\n```"}
