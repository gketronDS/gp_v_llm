{"submission": "```python\ndef my_func(input1, input2:int):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a vector of integers of length [2, 20] with each integer in [-10000, 10000], integer in [-20000, 20000]. The function should output 2 integers that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func([5 7],12) == 5,7\nmy_func([-4 4],0) == -4,4\nmy_func([6092 5916 -8865 -6291 3649 -1630 -3380 256 -7705 -5566 -7704 4582 8605 9304 -2747 -1243 -5981 4289 -9431 595],5924) == -3380,9304\nmy_func([8076 -7823 -1039 8193],370) == -7823,8193\nmy_func([3998 -5081 -9062 281],4279) == 3998,281\nmy_func([14 -35 78],-21) == 14,-35\nmy_func([-8204 -2153 -8632 9597 4291 -64 7001],9533) == 9597,-64\nmy_func([-4245 -7510 -9389 -7928 -5618 699 9995 6764 5106 3567 -6115 -9017],-3911) == 5106,-9017\nmy_func([0 1234],1234) == 0,1234\nmy_func([8221 -8383 8304 -3665 5191],-162) == 8221,-8383\nmy_func([14 -35 78],92) == 14,78\nmy_func([9492 -3791 -7317],5701) == 9492,-3791\nmy_func([-14 5],-9) == -14,5\nmy_func([9492 -3791 -7317],-11108) == -3791,-7317\nmy_func([237 410 -777],-367) == 410,-777\nmy_func([-577 7206 -1866 -2042 9362 2108 -7741 -4140 -6813],11470) == 9362,2108\nmy_func([9042 -5508 -9930 3993],13035) == 9042,3993\nmy_func([-1328 8456 2224 6316 -9522 2835],-3206) == 6316,-9522\nmy_func([2500 6352],8852) == 2500,6352\nmy_func([-9719 -2726 7232 -3422 -294 -4050 -7887 -2718 -7539 7804],3810) == 7232,-3422\nmy_func([-448 -8778 1537 9082 -5243 -3339 5663 -2147 -1619 -8483 3417 1403 -8303 745 9071 -3374 -4585 -2536 2410],3828) == -5243,9071\nmy_func([-1 0 1],0) == -1,1\nmy_func([-5436 5921 -9462 8057 -1713 1833 -6741 4648 847 -9256 -7349 -5173 -9637 1429 5269 7469 4005 943],485) == -5436,5921\nmy_func([-14 9457 2540 7973],10513) == 2540,7973\nmy_func([3144 -5183 8658 1377 -5252 5587 -8126],335) == -5252,5587\nmy_func([9859 8663 -9855 -4637 -6235 -4065 -3062 8762 1155 -2422 -9669 -6681 -9373 -1315 5633 -1830 197 6879],-9176) == -9373,197\nmy_func([-1 0 1],1) == 0,1\nmy_func([-5 -20],-25) == -5,-20\nmy_func([40 -19],21) == 40,-19\nmy_func([-7831 -3001],-10832) == -7831,-3001\nmy_func([14 -35 78],43) == -35,78\nmy_func([8025 -959 -1818 8335 -6594 -2714 -5809 -6104 2644 2078 -2548 8055 5845 -7134 -9045],4886) == -959,5845\nmy_func([-428 -8836 7507 -6003 -7210 -8239 7546 273 -143 2143 -6809 -2712 -4883 -602 -3963 8331],-3690) == 273,-3963\nmy_func([2861 6180 -6028 6385 6975 9357 7476 6806 -8804 1752 -817 -9206 6077 3581 -19 -6516 -5220 36 -2891 -2807],6161) == 6180,-19\nmy_func([1 3 5],4) == 1,3\nmy_func([237 410 -777],-540) == 237,-777\nmy_func([237 410 -777],647) == 237,410\nmy_func([8310 -8320],-10) == 8310,-8320\nmy_func([-1240 2957 -5948 2815 6138 7497 -344 3503 6666 -8075 5928 9716 -322 8410 -5465 -619 -1788 -5763],-3028) == -1240,-1788\nmy_func([3616 5122 -6473 -5915 -2478 5749 -1619 9492 -9523 3587 -6400 1394 -2229 -7720 -4066],-11142) == -1619,-9523\nmy_func([9309 8338 -6708 -9001 2215 -5402],-6786) == -9001,2215\nmy_func([-6597 -7499 5712 -9509 -8553 -1029 881 -9652 4009 -4626],4890) == 881,4009\nmy_func([1 3 5],6) == 1,5\nmy_func([4380 -1988 -2323 5048],2057) == 4380,-2323\nmy_func([-9837 7958 -5810 -883 830 4579],-6693) == -5810,-883\nmy_func([9492 -3791 -7317],2175) == 9492,-7317\nmy_func([-1 0 1],-1) == -1,0\nmy_func([1 3 5],8) == 3,5\nmy_func([10000 -10000],0) == 10000,-10000\nmy_func([8085 4734 3032 5825 63 6365 9348 -242 -2640 701 4793 2981 5383 6132 -2424 -5388 6191 4810],3044) == 63,2981\n.\"\"\"```", "response": "```python\ndef my_func(input1, input2: int):\n    if input2 in input1:\n        return input1[0], input2\n    elif input2 > 0:\n        return input1[0], input1[-1]\n    else:\n        return input1[-2], input1[-1]\n```"}
