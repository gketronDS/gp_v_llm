{"submission": "```python\ndef my_func(input1, input2:int):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a vector of integers of length [2, 20] with each integer in [-10000, 10000], integer in [-20000, 20000]. The function should output 2 integers that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func([-3421 -5823 -9785 -9216 3348 -3241 8400 -6634 -2000],-11216) == -9216,-2000\nmy_func([14 -35 78],43) == -35,78\nmy_func([-8987 4396 -7443 -2423 3949 1299 -5489 -7722 1636 -8378 6802 5587],-3982) == 4396,-8378\nmy_func([-1 0 1],1) == 0,1\nmy_func([883 9116 408 -6925],1291) == 883,408\nmy_func([-9833 -5376 -9294 -1282 4946 1935 4577 5611 3988 4300 4268 -6079 -4824 -7405 3132 -4763 -2764 5159 -2400],-2889) == 1935,-4824\nmy_func([-7831 -3001],-10832) == -7831,-3001\nmy_func([-1 0 1],0) == -1,1\nmy_func([5 7],12) == 5,7\nmy_func([9492 -3791 -7317],-11108) == -3791,-7317\nmy_func([14 -35 78],-21) == 14,-35\nmy_func([9653 -716 9846 4257 4426 3039 8650 -8808 -7472 9813 2025 -8800 -1000 5183 -6164 -2584 8676 7196 -1829 5834],13076) == 4426,8650\nmy_func([-627 -6167 9745 -9604 -6749 -394 5873 4620 -7182 -1849 4832 7022 -3374 4598 -6078 -548 -5182],-6715) == -6167,-548\nmy_func([9492 -3791 -7317],5701) == 9492,-3791\nmy_func([-1 0 1],-1) == -1,0\nmy_func([8183 -7327 2778 -5436 -5828],-13155) == -7327,-5828\nmy_func([8229 -1816 -8390 -2030 8593 6625 -3196 8070 -1344 3295 -6682 1609],6413) == 8229,-1816\nmy_func([10000 -10000],0) == 10000,-10000\nmy_func([-3219 924 -7339],-10558) == -3219,-7339\nmy_func([40 -19],21) == 40,-19\nmy_func([-14 5],-9) == -14,5\nmy_func([2500 6352],8852) == 2500,6352\nmy_func([282 -4552 -7858 -4553 3322 -112 -4349 9995],-4665) == -4553,-112\nmy_func([2384 5869 8294 7465 -3892],4402) == 8294,-3892\nmy_func([1239 8855 1864 -1353 -9804 -826 -1256 -6357 -8725 4884 -4270 3608],1038) == 1864,-826\nmy_func([9894 5849 -3248 7698 -9747 -3685 6832 -4087 1304 -8361 -4863 1625 362],-2886) == -3248,362\nmy_func([5547 -4416 7754 9137 -6433 4796 1603 5423],10970) == 5547,5423\nmy_func([1 3 5],4) == 1,3\nmy_func([-2728 11 -8127 -1294 5683 3064 1911 2505 -3925 1114 9311 3390 6150 -2374],4178) == 3064,1114\nmy_func([237 410 -777],647) == 237,410\nmy_func([237 410 -777],-540) == 237,-777\nmy_func([237 410 -777],-367) == 410,-777\nmy_func([530 3040 5607 5296],8647) == 3040,5607\nmy_func([9492 -3791 -7317],2175) == 9492,-7317\nmy_func([-4 4],0) == -4,4\nmy_func([-6881 -7737 -5908 2829 -5449 870 1497],-6867) == -7737,870\nmy_func([-5 -20],-25) == -5,-20\nmy_func([1477 8926 -5643 471],-5172) == -5643,471\nmy_func([1 3 5],6) == 1,5\nmy_func([8310 -8320],-10) == 8310,-8320\nmy_func([9863 4917 2650],7567) == 4917,2650\nmy_func([-4349 -1909 6735 4031 -9621 4948 -8505 2074 -1794 -7039 -9175 6181 -9102 8100 3210 8888 1484 1393],-1139) == -4349,3210\nmy_func([6835 -9722 6612 6396],-2887) == 6835,-9722\nmy_func([2863 -1887 -2390 -7809 5729 -5196 8080 -9340 3686 6449 -9901 8847 6567 -5877],14576) == 5729,8847\nmy_func([-879 6664 -7168 -6344 -7821],-7223) == -879,-6344\nmy_func([1 3 5],8) == 3,5\nmy_func([14 -35 78],92) == 14,78\nmy_func([0 1234],1234) == 0,1234\nmy_func([7210 4931 -7318 -9448 -7979 1247 251 -5840 -3831 2722 5659 7420],1100) == 4931,-3831\nmy_func([-3974 -5399 -7315 -6607 -5905 8453 7410 -8055 9890 -7088 -4780 -5963 -1754 -5780 -1647 -8797 -4105],-7046) == -5399,-1647\n.\"\"\"```", "response": "```python\ndef my_func(input1, input2:int):\n    input1_sorted = sorted(input1)\n    if input2 > 0:\n        return input1_sorted[0], input1_sorted[-2]\n    else:\n        return input1_sorted[1], input1_sorted[-1]\n```"}
