{"submission": "```python\ndef my_func(input1, input2:int):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a vector of integers of length [2, 20] with each integer in [-10000, 10000], integer in [-20000, 20000]. The function should output 2 integers that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func([9492 -3791 -7317],-11108) == -3791,-7317\nmy_func([9492 -3791 -7317],5701) == 9492,-3791\nmy_func([4930 -3561 8775 -4300 -7139 -2257 3468 -5946 1434 7709 -7048 3246 -3592],-832) == -4300,3468\nmy_func([1 3 5],6) == 1,5\nmy_func([3237 2574 -8848 -3626 1819 -1889 7031 -1955 6939],-5611) == 3237,-8848\nmy_func([2159 1004 -5238 2679 422 -8581 -6598 5708 -3175 -6986 -6990 -2632 4401 2867 7199 1112 208 3683 -2290 -8230],-10161) == -3175,-6986\nmy_func([5499 -3384 -8667 -9434 -5732 -5928],-14399) == -8667,-5732\nmy_func([7863 645 4080 293 -4798 7429 474 -870 -57 -2486 -3895 9747 5633 5345 9896 4828],8156) == 7863,293\nmy_func([5012 7712 2809 -6660 -7398 8090 -7526 925 8764 -4386 -7205 -7140 -4737 1393],13102) == 5012,8090\nmy_func([237 410 -777],-540) == 237,-777\nmy_func([14 -35 78],-21) == 14,-35\nmy_func([237 410 -777],-367) == 410,-777\nmy_func([4971 -1949 9923 2803 -3884 6037 -5946 6560 3025 2973 8210 -9363 1829 8590],15150) == 6560,8590\nmy_func([0 1234],1234) == 0,1234\nmy_func([7884 2384 -3652 7706 -410],4054) == -3652,7706\nmy_func([-7446 -691 7877 1548],-5898) == -7446,1548\nmy_func([6899 -4686 2381 4303 -2015 -6442 -1467 9648 -8825 5468 8453 4666 6256 -435 9017 -5025 4420],13437) == 9017,4420\nmy_func([-14 5],-9) == -14,5\nmy_func([-1140 671 -5231 -5159 -139],-4488) == 671,-5159\nmy_func([-9319 2620 6311 -6386],-15705) == -9319,-6386\nmy_func([-8354 8956 -3798 -8665 4650 1028 -6502 -2618 -5398 -408 -6081 -3291 9752 7194 790],5954) == -3798,9752\nmy_func([4984 8937 3845 -7845 -5455],1092) == 8937,-7845\nmy_func([4341 -2475 -4699 -8894 8086 7758 4629 -2158],15844) == 8086,7758\nmy_func([9492 -3791 -7317],2175) == 9492,-7317\nmy_func([8310 -8320],-10) == 8310,-8320\nmy_func([-7494 -3448 9912 -6539 8594 -8241 4720 -2968 3417 -4396 -5773 2133 7976 -6521 2182 9360 -6823 -1680 6106 7893],-1388) == -7494,6106\nmy_func([8388 6258 3671 9467 3948],10206) == 6258,3948\nmy_func([237 410 -777],647) == 237,410\nmy_func([-1 0 1],-1) == -1,0\nmy_func([-4 4],0) == -4,4\nmy_func([40 -19],21) == 40,-19\nmy_func([-1 0 1],0) == -1,1\nmy_func([4281 139 6168 -4444 8707],-163) == 4281,-4444\nmy_func([14 -35 78],92) == 14,78\nmy_func([4310 -5935 5968 -4039 -4650 3707 2948 4380 -6633],8017) == 4310,3707\nmy_func([-1121 4225 6503 7903 -3152 9013 -7082 5520],13238) == 4225,9013\nmy_func([-4205 -9434 2032 7235 -925 -5181 -8202 4871 9993 1174],-5130) == -4205,-925\nmy_func([-4284 1188 7699 -6938 3548],4736) == 1188,3548\nmy_func([1 3 5],4) == 1,3\nmy_func([3871 -688 -3431 -6250 8152],1902) == -6250,8152\nmy_func([-2070 -7312 -6132 9209 7532 9516 -9553 -9069 6253 7030 9484 3694 -129 -8862 -7999],7403) == 7532,-129\nmy_func([2500 6352],8852) == 2500,6352\nmy_func([5 7],12) == 5,7\nmy_func([-7831 -3001],-10832) == -7831,-3001\nmy_func([-5 -20],-25) == -5,-20\nmy_func([9733 133 -1343 -4843],8390) == 9733,-1343\nmy_func([1 3 5],8) == 3,5\nmy_func([-1 0 1],1) == 0,1\nmy_func([10000 -10000],0) == 10000,-10000\nmy_func([14 -35 78],43) == -35,78\n.\"\"\"```", "response": "```python\ndef my_func(input1, input2: int):\n    return sorted(input1, key=lambda x: abs(x - input2))[:2]\n```"}
