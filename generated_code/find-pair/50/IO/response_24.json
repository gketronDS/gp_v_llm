{"submission": "```python\ndef my_func(input1, input2:int):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a vector of integers of length [2, 20] with each integer in [-10000, 10000], integer in [-20000, 20000]. The function should output 2 integers that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func([1073 3680],4753) == 1073,3680\nmy_func([14 -35 78],-21) == 14,-35\nmy_func([1885 9057 49],10942) == 1885,9057\nmy_func([9492 -3791 -7317],-11108) == -3791,-7317\nmy_func([-3053 783 5692 5987 7742 1345 596 2811 8677 4678 4623 -3542 8129 6898 6183 -1469 -3765 -8033],10022) == 1345,8677\nmy_func([5511 2282 -4795 4698 -31 516 1696 4090 -1107 -2287 -5346 5587 3778 -5182 -417 3482 2255 -2037 4965],-1524) == -1107,-417\nmy_func([3310 7415 -1505 -3470],-4975) == -1505,-3470\nmy_func([0 1234],1234) == 0,1234\nmy_func([-7831 -3001],-10832) == -7831,-3001\nmy_func([237 410 -777],-367) == 410,-777\nmy_func([-9575 7959 -6442 -6052],-12494) == -6442,-6052\nmy_func([-1671 4049 5075 8474 8775 -3685 16],12824) == 4049,8775\nmy_func([14 -35 78],92) == 14,78\nmy_func([1 3 5],4) == 1,3\nmy_func([1379 7055 -7893 -6882 -8468],173) == 7055,-6882\nmy_func([2500 6352],8852) == 2500,6352\nmy_func([237 410 -777],-540) == 237,-777\nmy_func([2991 2392 -7012 -9632 -1190 4569 6296 -6810 -2656 1949 371 7265 8789 -5899 1071 -3283 7566],-7240) == 2392,-9632\nmy_func([9492 -3791 -7317],5701) == 9492,-3791\nmy_func([-14 5],-9) == -14,5\nmy_func([3144 6176 -6337],-3193) == 3144,-6337\nmy_func([8310 -8320],-10) == 8310,-8320\nmy_func([-4477 8344 3092 5138 -6274 -4253 -6824 -319],3867) == -4477,8344\nmy_func([1 3 5],6) == 1,5\nmy_func([9295 -6156 3410 846 4603 19 -6912 -4285 9151 746 -2437 8525 9163 -8728],13128) == 4603,8525\nmy_func([-8156 3120],-5036) == -8156,3120\nmy_func([-4727 5764 5464 8879],4152) == -4727,8879\nmy_func([3402 -8259 -4766 -2615 -2230 6593 505 -9565 -7506 6171 6490 -4001 -8836 6639 6683 4395 856 3160],-7403) == -8259,856\nmy_func([-5 -20],-25) == -5,-20\nmy_func([9492 -3791 -7317],2175) == 9492,-7317\nmy_func([9469 -3378 8171 3276 -608 -6201 9753 -6358 -438 -4773 -1344 -8855],614) == 9469,-8855\nmy_func([7066 4567 -1234 -4540],5832) == 7066,-1234\nmy_func([1598 -7477 8057 -244 8283],806) == -7477,8283\nmy_func([1 3 5],8) == 3,5\nmy_func([-2875 5454],2579) == -2875,5454\nmy_func([237 410 -777],647) == 237,410\nmy_func([5 7],12) == 5,7\nmy_func([-1 0 1],1) == 0,1\nmy_func([3075 -3778 8233 5701],8776) == 3075,5701\nmy_func([-1 0 1],0) == -1,1\nmy_func([-4 4],0) == -4,4\nmy_func([14 -35 78],43) == -35,78\nmy_func([-7598 -1471 -9412 -3653 7092 -7941 -2235 4167 -8090 -7098],-3706) == -1471,-2235\nmy_func([40 -19],21) == 40,-19\nmy_func([6110 4146 -5168],-1022) == 4146,-5168\nmy_func([-172 9811 9436 327 -3635 6545],5801) == 9436,-3635\nmy_func([867 -1724 2196],-857) == 867,-1724\nmy_func([232 -7690 9738 -8511 -386],2048) == -7690,9738\nmy_func([-1 0 1],-1) == -1,0\nmy_func([10000 -10000],0) == 10000,-10000\n.\"\"\"```", "response": "```python\ndef my_func(input1, input2: int):\n    return min(input1, key=lambda x: abs(x - input2)), max(input1, key=lambda x: abs(x - input2))\n```"}
