{"submission": "```python\ndef my_func(input1, input2:int):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a vector of integers of length [2, 20] with each integer in [-10000, 10000], integer in [-20000, 20000]. The function should output 2 integers that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func([237 410 -777],-367) == 410,-777\nmy_func([237 410 -777],-540) == 237,-777\nmy_func([1 3 5],6) == 1,5\nmy_func([-1783 6483 -8538 -4929 1316 7762 -7011 2672 -5007 7630 -8621 -4993 -1841 -1351 -9290 -6623 6314 3422],-11552) == -4929,-6623\nmy_func([4623 -2753 6497 9617 8892 -3258 -1578 8000 -7310 2989 6172 -6708],-211) == 6497,-6708\nmy_func([8310 -8320],-10) == 8310,-8320\nmy_func([-14 5],-9) == -14,5\nmy_func([10000 -10000],0) == 10000,-10000\nmy_func([-168 5292 2324 -5046],-2722) == 2324,-5046\nmy_func([-8346 659 -1097 3343 8497 -4897 2497 -7419 -3121 7490 -7555 4243 -9592 -9282 -9474 1909],-7373) == -9282,1909\nmy_func([9492 -3791 -7317],5701) == 9492,-3791\nmy_func([9492 -3791 -7317],2175) == 9492,-7317\nmy_func([8328 3467 -3454 2867 7755 519 -9095 -8152 -3113 -2383 9544 -4603 7931 -3678 5748 -2724],-1164) == -9095,7931\nmy_func([-6828 -8024 1052 6637 -3055 -6264 4122],-14852) == -6828,-8024\nmy_func([9481 -3452 -5383 -5773 8165 -8905 3809 -1707 -6879 -5079 -8025 4316 6618 2246 -6494 9913],-10331) == -3452,-6879\nmy_func([2421 -1877 -7359 5686 -5674],544) == 2421,-1877\nmy_func([5 7],12) == 5,7\nmy_func([4990 -2971 -1724 4430 -9211 -4888 3280 8115 193],102) == 4990,-4888\nmy_func([-1 0 1],1) == 0,1\nmy_func([2260 -6725 -7182 6306 1116 7677 -49 -1014 -2768 -2064 -8103 390 8896 2228 7727 2866],15202) == 6306,8896\nmy_func([-8698 6788 3390 9642 4677],14319) == 9642,4677\nmy_func([3089 -9251 3362 -8199 2953 5723 9292 -429 -2462 -7397 5807 -1772 3680 -424 7166 -1396],-5889) == -9251,3362\nmy_func([1 3 5],8) == 3,5\nmy_func([-148 -8733 -7735 -31],-8881) == -148,-8733\nmy_func([703 -4168 -4623 -8620 7977 -7113 -6700 -5718 -2196 2712 -6582 -1604 -1350 3253 -8351 -6196],-2943) == 3253,-6196\nmy_func([-5 -20],-25) == -5,-20\nmy_func([-1 0 1],-1) == -1,0\nmy_func([3557 1197 9955 8401],13512) == 3557,9955\nmy_func([-6269 5181 2747 9687 -6774 4127 -3561 -6841 5117],1556) == -3561,5117\nmy_func([-1083 446 5324 -9737 -2032 6517 -4230 3093 -1880 -4352 789 9800 -7758 -6661 -8701 4173 7177 7276],-7912) == 789,-8701\nmy_func([6341 5173 1567 5601 -3157 9189 -6335 819],2444) == 5601,-3157\nmy_func([2500 6352],8852) == 2500,6352\nmy_func([237 410 -777],647) == 237,410\nmy_func([-1 0 1],0) == -1,1\nmy_func([1 3 5],4) == 1,3\nmy_func([-7831 -3001],-10832) == -7831,-3001\nmy_func([9492 -3791 -7317],-11108) == -3791,-7317\nmy_func([1608 -7969 1291 -3343 -3646 -4960 1929 8261 2721 -9287 5900 -7115 6916 8976 9552 -3951 -5876 4299],-6678) == -7969,1291\nmy_func([-4 4],0) == -4,4\nmy_func([8820 -7806 -2443 7612 149 822 -5449 -8046 -7307 -5332 -2680 -6196 -6048 8195 -4788 6605 7751],-12244) == -6196,-6048\nmy_func([-7359 6382 -7932],-15291) == -7359,-7932\nmy_func([40 -19],21) == 40,-19\nmy_func([5284 -5547 -3832 9991 -8904 5059 -6500 -3511 -6941 -262 9590 -6882],686) == -8904,9590\nmy_func([14 -35 78],-21) == 14,-35\nmy_func([14 -35 78],92) == 14,78\nmy_func([14 -35 78],43) == -35,78\nmy_func([-4666 6073 7946 -4897 8227],14300) == 6073,8227\nmy_func([0 1234],1234) == 0,1234\nmy_func([-8200 690],-7510) == -8200,690\nmy_func([-3028 -6820 4448 -8501 -4257 -2096 -7259 -1639 -7026 9258 1961 -3662 -7950 -8176 -427],-5298) == -7259,1961\n.\"\"\"```", "response": "```python\ndef my_func(input1, input2: int):\n    if input2 > 0:\n        sorted_input1 = sorted(input1, reverse=True)\n    else:\n        sorted_input1 = sorted(input1)\n    result = [sorted_input1[0], sorted_input1[-1]]\n    return result[0], result[-1]\n```"}
