{"submission": "```python\ndef my_func(input1, input2:int):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a vector of integers of length [2, 20] with each integer in [-10000, 10000], integer in [-20000, 20000]. The function should output 2 integers that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func([-2971 -2013 -365 -9286],-3336) == -2971,-365\nmy_func([-14 5],-9) == -14,5\nmy_func([-2580 7900 -7348 -4346 6200 2541 -652 -8767 4262 -955 -8723 6205 -3321 5183],-11303) == -2580,-8723\nmy_func([237 410 -777],647) == 237,410\nmy_func([237 410 -777],-540) == 237,-777\nmy_func([14 -35 78],92) == 14,78\nmy_func([0 1234],1234) == 0,1234\nmy_func([-7760 -4587 8238 -9322 1144 3945 1019 -6777 9001 -3230 2904 -2040 2958 -9358 5355 9508 5852 -7672],-3815) == -7760,3945\nmy_func([-4 4],0) == -4,4\nmy_func([-5 -20],-25) == -5,-20\nmy_func([1 3 5],6) == 1,5\nmy_func([2500 6352],8852) == 2500,6352\nmy_func([40 -19],21) == 40,-19\nmy_func([9521 -4386 -4237 6065],5284) == 9521,-4237\nmy_func([8678 -8479 -7257 -6882 2245 -2210 4732 -5706 425 -3886 7879 1580 -8189 -6937 -3318 -7995 1007 124 -6698 2356],3936) == 1580,2356\nmy_func([5 7],12) == 5,7\nmy_func([8501 -2414 -4376],4125) == 8501,-4376\nmy_func([-1 0 1],0) == -1,1\nmy_func([-3203 7213 5891 -3896 7827 6991 -8058 7541 -8094 4031 -8861 -2287 4345],828) == -3203,4031\nmy_func([1049 7120 3647 5291 -2639 4829 9818 6738 -8110 6916 4896],2257) == -2639,4896\nmy_func([14 -35 78],43) == -35,78\nmy_func([8310 -8320],-10) == 8310,-8320\nmy_func([4299 -1139 4511 5299 -8465 -3409 -1525 7891 2884 -848],3451) == 4299,-848\nmy_func([9412 -2525 1295 -8236 1926 -8457 -3837 -4778 3641 -9646 2843 4830],-12294) == -8457,-3837\nmy_func([237 410 -777],-367) == 410,-777\nmy_func([9492 -3791 -7317],-11108) == -3791,-7317\nmy_func([-1 0 1],-1) == -1,0\nmy_func([-5252 -4924 9960 6308],1056) == -5252,6308\nmy_func([3191 -8346 8149 -9811 288],-197) == -8346,8149\nmy_func([-4769 2558 7172 6041 -6958 -3536],3636) == 7172,-3536\nmy_func([4424 -8006 -6202],-14208) == -8006,-6202\nmy_func([-1438 -6357 -4864 -5905 -5661],-10769) == -4864,-5905\nmy_func([7241 -2272 6688 -4829],4416) == -2272,6688\nmy_func([3818 3555 -284 4622 -6749],-3194) == 3555,-6749\nmy_func([9031 6327 -3510],5521) == 9031,-3510\nmy_func([-1004 -4771 -3094 5841 -492 -9644 6223 -7365 7183 1257 -8238 6493 -7022 8163 -1939 -6800],1141) == -7022,8163\nmy_func([9492 -3791 -7317],2175) == 9492,-7317\nmy_func([9492 -3791 -7317],5701) == 9492,-3791\nmy_func([2540 -4892 -4853 -5744 1477 -4530 -4448 -5060 5872 2254 -1245 -7190 -6359 8210 7331 2528 3347],-4882) == 1477,-6359\nmy_func([10000 -10000],0) == 10000,-10000\nmy_func([-1720 1910 2204 -5352],190) == -1720,1910\nmy_func([1 3 5],8) == 3,5\nmy_func([-8005 -847 6375 -9453 6777 1078 -1267 5470 464 3849 7199 -6613 -168 4638],231) == -847,1078\nmy_func([5454 -8609],-3155) == 5454,-8609\nmy_func([-1 0 1],1) == 0,1\nmy_func([1701 -6026 6813 -633 -1532],787) == -6026,6813\nmy_func([-7831 -3001],-10832) == -7831,-3001\nmy_func([1 3 5],4) == 1,3\nmy_func([-7684 -2584 -5179 3298 8707 -7996],711) == 8707,-7996\nmy_func([14 -35 78],-21) == 14,-35\n.\"\"\"```", "response": "```python\ndef my_func(input1, input2: int):\n    if input2 >= 0:\n        return min(input1), max(input1)\n    else:\n        return max(input1), min(input1)\n```"}
