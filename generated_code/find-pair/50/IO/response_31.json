{"submission": "```python\ndef my_func(input1, input2:int):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a vector of integers of length [2, 20] with each integer in [-10000, 10000], integer in [-20000, 20000]. The function should output 2 integers that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func([4943 1580 -8948 1487 -7541 2871 5440 4360 6787 -742 8310],9303) == 4943,4360\nmy_func([8310 -8320],-10) == 8310,-8320\nmy_func([-3491 -6444 -7180 -1635 9878 -8913 -5084],-8575) == -3491,-5084\nmy_func([0 1234],1234) == 0,1234\nmy_func([8840 -2401 2379 -1561 -6429 2333 -7281 6838],5277) == -1561,6838\nmy_func([5353 7759 -5677],13112) == 5353,7759\nmy_func([7274 -7785 5006 8590 6723],805) == -7785,8590\nmy_func([-1847 -5967 4447 -7885 -2671 2541 -9766 3633],1776) == 4447,-2671\nmy_func([-3035 -725 9156 8368 -9498 -1348 -8339 -9998 -3476 5150 2097 -3523 -4097 -8954 -2037 -9391 46 4701 -1897],5633) == 9156,-3523\nmy_func([-3505 8327 -6687 -8335 -3372 135 -2562 -2038 -2235 8061 -1829 -6088 7344 -9576 -1225],-3867) == -2038,-1829\nmy_func([40 -19],21) == 40,-19\nmy_func([-5506 -2701 7907 -9621 5237 5209 -6563 7346],-2275) == -9621,7346\nmy_func([9492 -3791 -7317],2175) == 9492,-7317\nmy_func([8647 1668 1864 -7368 670 -6957 -3460 8668 -1031 1973],-4491) == -3460,-1031\nmy_func([9492 -3791 -7317],5701) == 9492,-3791\nmy_func([-3553 249],-3304) == -3553,249\nmy_func([237 410 -777],647) == 237,410\nmy_func([14 -35 78],43) == -35,78\nmy_func([8640 3823 -8523 -9107 8667 3050 9399 8910 -7806 -3565 1942],10582) == 8640,1942\nmy_func([4529 6799 1051 7523 9073],10124) == 1051,9073\nmy_func([-1 0 1],1) == 0,1\nmy_func([467 -2816 7841 -6955 -4525 -3573],-3106) == 467,-3573\nmy_func([-2017 8738 4755 -9890 -5349],-15239) == -9890,-5349\nmy_func([10000 -10000],0) == 10000,-10000\nmy_func([3860 8683 3332 9817],13677) == 3860,9817\nmy_func([237 410 -777],-540) == 237,-777\nmy_func([-4534 744 -412 2665],-1869) == -4534,2665\nmy_func([14 -35 78],-21) == 14,-35\nmy_func([-1 0 1],-1) == -1,0\nmy_func([1 3 5],6) == 1,5\nmy_func([7675 458 -9148 -4242 -2707 -9330 -8026 -5515 3703 3764 5238 -8754 -8191],7467) == 3703,3764\nmy_func([5 7],12) == 5,7\nmy_func([-205 -9017 4152 -5023 5410 -8718 -1143 4066 -7954 8844 5784 6217 7267 -1038 -5564 -3309 -1941 9536],5535) == 8844,-3309\nmy_func([2495 9479 9780 8028 -7119 -4004 -2799 -469 -9347 -8026],-9918) == -7119,-2799\nmy_func([-5 -20],-25) == -5,-20\nmy_func([2500 6352],8852) == 2500,6352\nmy_func([2639 -1864 6747 -1977 8408 2894 3965 -5444 -822 -1948 60 -2503 -3701 -97 1207 7566 -5376 973 -9977],3046) == 6747,-3701\nmy_func([237 410 -777],-367) == 410,-777\nmy_func([-3431 9037 -7384 6644 6026 -4295 1413 4122 -7100],10450) == 9037,1413\nmy_func([9492 -3791 -7317],-11108) == -3791,-7317\nmy_func([6316 2962 6821 6808],13137) == 6316,6821\nmy_func([1 3 5],8) == 3,5\nmy_func([-1 0 1],0) == -1,1\nmy_func([-4383 -5020 -3458 -2 -8666 292 9361 7297 8704],-8668) == -2,-8666\nmy_func([1 3 5],4) == 1,3\nmy_func([-7831 -3001],-10832) == -7831,-3001\nmy_func([-14 5],-9) == -14,5\nmy_func([-2577 -7926 222 6266],-10503) == -2577,-7926\nmy_func([14 -35 78],92) == 14,78\nmy_func([-4 4],0) == -4,4\n.\"\"\"```", "response": "```python\ndef my_func(input1, input2: int):\n    if input2 >= 0:\n        first = max(input1)\n    else:\n        first = min(input1)\n    input1.remove(first)\n    second = max(input1) if second >= 0 else min(input1)\n    return first, second\n```"}
