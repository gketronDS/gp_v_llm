{"submission": "```python\ndef my_func(input1, input2:int):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a vector of integers of length [2, 20] with each integer in [-10000, 10000], integer in [-20000, 20000]. The function should output 2 integers that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func([8012 5423 -2623 8281 8714 874],8886) == 8012,874\nmy_func([237 410 -777],647) == 237,410\nmy_func([-111 -3272 1829 3486 8578 5230],5119) == -111,5230\nmy_func([-6452 -227 -3178],-6679) == -6452,-227\nmy_func([-5349 3229 -1078 1793 -2537 -2588 2010 -4767 6505 4262 -2641 -3116 6849 -6044],2082) == -4767,6849\nmy_func([-2889 -4635 7039 4356 -8004 6105 3705 -5142 -4715 -2210],-9350) == -4635,-4715\nmy_func([6765 4719 -8378 2760 6578 2280 -8122 -5051 2833 -380 -437 5920 3478 -1856 3804 -1041 -3166],869) == -5051,5920\nmy_func([14 -35 78],-21) == 14,-35\nmy_func([7913 -9063 7403 2698 4934 -9009 4825 -5120 -7592 -626 -5692],-4075) == 4934,-9009\nmy_func([-1 0 1],-1) == -1,0\nmy_func([14 -35 78],43) == -35,78\nmy_func([4981 -1372],3609) == 4981,-1372\nmy_func([-4625 -4177 -9681 5856 -9778],-13955) == -4177,-9778\nmy_func([-85 2481 -635 9299 2657],2396) == -85,2481\nmy_func([14 -35 78],92) == 14,78\nmy_func([4594 -8823 -5096 -6473 1971 -3693 93 -7321 -3361 6294 -5877 4609 -2778 -5205 -5527 -8606],-14350) == -8823,-5527\nmy_func([1 3 5],4) == 1,3\nmy_func([-6218 -1877 -3721 1335 9263],5542) == -3721,9263\nmy_func([7002 7750 2355 416 -7017],733) == 7750,-7017\nmy_func([9492 -3791 -7317],-11108) == -3791,-7317\nmy_func([-7831 -3001],-10832) == -7831,-3001\nmy_func([-1 0 1],0) == -1,1\nmy_func([237 410 -777],-367) == 410,-777\nmy_func([1 3 5],8) == 3,5\nmy_func([-1 0 1],1) == 0,1\nmy_func([1 3 5],6) == 1,5\nmy_func([1610 -781 -7670 4522 -4416 718 -9860 -519 -6418 -1671 2886 957 945],5467) == 4522,945\nmy_func([5926 -8360 -7357 -9294],-16651) == -7357,-9294\nmy_func([10000 -10000],0) == 10000,-10000\nmy_func([1404 -6298 -6334 5747 8190 -3574 3307 -8761 8561 -963],1892) == -6298,8190\nmy_func([-7512 1384 -6528 -4956 6205 -7256],-6128) == -7512,1384\nmy_func([-561 3253 -6406 -6494 -7206 2885 -3031 -5053 5118 -1287 -1288 -8213 5221 -7219 6023 -8184 -1482 -4435 -9093 -9446],-6561) == 2885,-9446\nmy_func([-5 -20],-25) == -5,-20\nmy_func([9492 -3791 -7317],5701) == 9492,-3791\nmy_func([40 -19],21) == 40,-19\nmy_func([-4479 958 -1068 -7041],-110) == 958,-1068\nmy_func([5 7],12) == 5,7\nmy_func([2500 6352],8852) == 2500,6352\nmy_func([-9978 -3785 5051 4098 8560 7430 7637 926 468 -8473 140 1794 5185 2006 7321 8527],8247) == 926,7321\nmy_func([3939 -188 9816 -9170],-9358) == -188,-9170\nmy_func([-14 5],-9) == -14,5\nmy_func([9492 -3791 -7317],2175) == 9492,-7317\nmy_func([-4 4],0) == -4,4\nmy_func([-7523 -8307 -9919 -8460 -3558 -8782 -4306 -9546 8173],-17089) == -8307,-8782\nmy_func([237 410 -777],-540) == 237,-777\nmy_func([0 1234],1234) == 0,1234\nmy_func([8537 -6111 -3416 8949 -5472],-8888) == -3416,-5472\nmy_func([8310 -8320],-10) == 8310,-8320\nmy_func([9388 -7561 6709 374 -5015 -9761 8605 -9723 -3042 7544 -9627 1732],9276) == 7544,1732\nmy_func([-1789 -128 5471 916 -2965 -8369 3027 -4292 -2978 -6699 -8773 6506 -9440 3250 -1184],-9957) == -8773,-1184\n.\"\"\"```", "response": "```python\ndef my_func(input1, input2: int):\n    input1.sort()\n    if input2 > 0:\n        return input1[0], input1[-1]\n    else:\n        mid = len(input1) // 2\n        if len(input1) % 2 == 0:\n            return input1[mid - 1], input1[mid]\n        else:\n            return input1[mid - 1], input1[mid + 1]\n```"}
