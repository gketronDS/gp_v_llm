{"submission": "```python\nThis problem gives 3 strings The first two represent a cipher mapping each character in one string to the one at the same index in the other string The program must apply this cipher to the third string and return the deciphered message\ndef my_func(input1:str, input2:str, input3:str):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             3 strings of length [0, 26]. The function should output a string.            Only use base python functions and do not import any packages.            Do not include print statements, unit tests, in-line comments or            multi-line comments.\"\"\"```", "response": "To solve the problem, we need to create a mapping between characters in `input1` and `input2` and then apply this mapping to decipher `input3`. Here's how you can implement the function:\n\n```python\ndef my_func(input1: str, input2: str, input3: str) -> str:\n    mapping = {input1[i]: input2[i] for i in range(len(input1))}\n    return ''.join(mapping.get(char, char) for char in input3)\n```\n\nThis function creates a dictionary `mapping` that maps each character in `input1` to the corresponding character in `input2`. Then, it uses this mapping to transform `input3`, replacing each character in `input3` with its mapped value from `input1` to `input2`, or keeping it unchanged if it's not found in the mapping."}
