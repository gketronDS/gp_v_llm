{"submission": "```python\ndef my_func(input1):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a vector of integers of length [0, 20] with each integer in [0, 1000]. The function should output a vector of integers that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func([504 676 18 149 18 782 804 733 593 686 47 959 154 397]) == [959 397]\nmy_func([941 428 948 717 398 760 818 181 126 348 664 547 151 990 641 113 427 197]) == [990 641 427 197]\nmy_func([0]) == [0]\nmy_func([305 203 662 373 527 291]) == [662 527 291]\nmy_func([266 705 407 6 709 304 123 436 626 116 128 546 393 319 276]) == [709 626 546 393 319 276]\nmy_func([498 65 582 596 248 571 664]) == [664]\nmy_func([980 190 214 972 819 428 502 736 69 473 940 896 621 443 79 27 776 198 978 781]) == [980 978 781]\nmy_func([524 230 289 656 675]) == [675]\nmy_func([47 87 43 44]) == [87 44]\nmy_func([910 865 713 497 376 444 810 935 840 547 681 54 221 911 493 840 616 300 609]) == [935 911 840 616 609]\nmy_func([129 541 731 916 467 79 623 777 935 452 124 198 557 732]) == [935 732]\nmy_func([832 212 150 121 142 546 409 176 906 170 441 398 155]) == [906 441 398 155]\nmy_func([568 813 601 997 235 722 7 427 810 932 631 771 18 537 596 936]) == [997 936]\nmy_func([5 5 5 5 5 5 5]) == [5 5 5 5 5 5 5]\nmy_func([425 542 570 285 521 823 184 982 837 184 302 435 892 246 791 997]) == [997]\nmy_func([10 9 8 7 6 5 4 3 2 1 0]) == [10 9 8 7 6 5 4 3 2 1 0]\nmy_func([0 1000]) == [1000]\nmy_func([838 189 90 538 590 202 408 417 714 220]) == [838 714 220]\nmy_func([0 1 2 3 4 5 6 7 8 9 10]) == [10]\nmy_func([152 781 95 801 401 777 715 242 154 34 653 97 662]) == [801 777 715 662]\nmy_func([237 157 518 597 385 110 357 128 534 710]) == [710]\nmy_func([308 203 595]) == [595]\nmy_func([751 616 431 165 575 34 930 282 94 777 792 830]) == [930 830]\nmy_func([267 676 924 455 419 880 255 396 632 99 558 552 649 607]) == [924 880 649 607]\nmy_func([]) == []\nmy_func([874 826 60 596 829 441 220 145 888 209 531]) == [888 531]\nmy_func([906 47 538 377 43 551 732 546 704 90 643 813 911 778 288 354 359 633 761 741]) == [911 778 761 741]\nmy_func([286 117 675 859 309 911 245 981 80]) == [981 80]\nmy_func([647 872 433 27 45 29 722 916 670 727 848 145 997 438 955 15 488 14 110]) == [997 955 488 110]\nmy_func([120 68 948 391 242]) == [948 391 242]\nmy_func([199 667 533 843 857 730]) == [857 730]\nmy_func([193 124 584 698 778 602 543 789 788]) == [789 788]\nmy_func([777]) == [777]\nmy_func([71 208 57 129]) == [208 129]\nmy_func([811 693 175 217 670 547 556 858 297 967 580 354]) == [967 580 354]\nmy_func([583 144 393 53 406 591 177 289 427 855 321]) == [855 321]\nmy_func([937 606 633 185 422 404 917 885]) == [937 917 885]\nmy_func([886 323 36 199 401 99 465 954 831 138 714 985]) == [985]\nmy_func([857 238 439 732 96 129 418 755 416 645 180 135 193 232 460 616 625 55 6]) == [857 755 645 625 55 6]\nmy_func([497 673 34 908 413 579 570 955 456 688 352 250 671 79 399 731 336 561 841 952]) == [955 952]\nmy_func([131 431 191 885 527 287 211 969 843 259 76]) == [969 843 259 76]\nmy_func([553 888 984 314 0 956 973 514 526 973 590]) == [984 973 973 590]\nmy_func([248 284 811 645 243 563 268 648 754 331 669 248 58 534 170]) == [811 754 669 534 170]\nmy_func([12 489 78 694 478]) == [694 478]\nmy_func([451]) == [451]\nmy_func([892 526 650 227 21 911 346 586 200 673 477 875 999 352 930 281 312 198 858 837]) == [999 930 858 837]\nmy_func([20 137 20]) == [137 20]\nmy_func([874 715 105 988 820 588 521 574]) == [988 820 588 574]\nmy_func([1000 0]) == [1000 0]\nmy_func([96 114 831 553 748 222 581 529 559 11 698]) == [831 748 698]\n.\"\"\"```", "response": "```python\ndef my_func(input1):\n    if not input1:\n        return []\n\n    max_val = max(input1)\n    index = input1.index(max_val)\n\n    return input1[index:]\n```"}
