{"submission": "```python\ndef my_func(input1):\n            \"\"\"Alter this python function \"my_func\" to accept inputs containing             a vector of integers of length [1, 20] with each integer in [1, 10000]. The function should output 2 vectors of integers that replicates the underlying             mechanism of the following examples. Only use base python functions             and do not import any packages. Do not include print statements,             unit tests, in-line comments or multi-line comments.             Examples: my_func([3127 3974 8213 965]) == [3127 3974],[8213 965]\nmy_func([1764 587 8474 2666]) == [1764 587 8474],[2666]\nmy_func([2541 6091 6928 3645 3362 5748 7726 8858]) == [2541 6091 6928 3645 3362],[5748 7726 8858]\nmy_func([4165 6816 546 7372]) == [4165 6816],[546 7372]\nmy_func([7951 3625 2768]) == [7951],[3625 2768]\nmy_func([2 129]) == [2],[129]\nmy_func([100]) == [100],[]\nmy_func([7271 5792 2578 9145 9059 6563 4000 1719 5201 8190 8515 7279 4521 9782 8000 4650 2489]) == [7271 5792 2578 9145 9059 6563 4000 1719 5201],[8190 8515 7279 4521 9782 8000 4650 2489]\nmy_func([8989 2750]) == [8989],[2750]\nmy_func([3487 2216 4586 121]) == [3487 2216],[4586 121]\nmy_func([4942 2547 760 6272 312 3205 8589 8014]) == [4942 2547 760 6272 312 3205],[8589 8014]\nmy_func([6801 1405 1458 924 9733 2153 1970 4622]) == [6801 1405 1458 924],[9733 2153 1970 4622]\nmy_func([648]) == [648],[]\nmy_func([4344 3302 7459 69 3917 3863 4818 5204]) == [4344 3302 7459 69],[3917 3863 4818 5204]\nmy_func([2766 1651 4367 1391 5047 335 852 7673 8996 7377]) == [2766 1651 4367 1391 5047 335 852],[7673 8996 7377]\nmy_func([792 9288 2359 4486 8718 5613 9048 5697 2585 5398 486 2131 1637 7852 8810 1828 6370 4832 5737 2418]) == [792 9288 2359 4486 8718 5613 9048 5697 2585],[5398 486 2131 1637 7852 8810 1828 6370 4832 5737 2418]\nmy_func([3677 7746 1139 4337 9578 4020 2031 7669 4996 5522 2896 6110 3614 8806 6217 9279 5026]) == [3677 7746 1139 4337 9578 4020 2031 7669 4996],[5522 2896 6110 3614 8806 6217 9279 5026]\nmy_func([1310 9941 211 3568]) == [1310 9941],[211 3568]\nmy_func([9879 9950]) == [9879],[9950]\nmy_func([760 7899]) == [760],[7899]\nmy_func([2960 4794 7113]) == [2960 4794],[7113]\nmy_func([4604]) == [4604],[]\nmy_func([0]) == [0],[]\nmy_func([7107 4741 6575 555 4847]) == [7107 4741],[6575 555 4847]\nmy_func([9225 9994]) == [9225],[9994]\nmy_func([1117 5775 4788 1392]) == [1117 5775],[4788 1392]\nmy_func([9999 74]) == [9999],[74]\nmy_func([4362 6908 2359 8009 1113 4133 4254 5382 82 4676 9314 896 3872 9034 5141 8123 4675]) == [4362 6908 2359 8009 1113 4133 4254 5382 82 4676],[9314 896 3872 9034 5141 8123 4675]\nmy_func([595 1151 8449 4992 2557]) == [595 1151 8449],[4992 2557]\nmy_func([5758]) == [5758],[]\nmy_func([4850 4639 4400 4707 7011]) == [4850 4639 4400],[4707 7011]\nmy_func([4460 1224 2346 6172 7262 1788 586 8828 5345 7418 429 3245 9037 2638 8614 7636 4750 4932 9216 8787]) == [4460 1224 2346 6172 7262 1788 586 8828 5345 7418 429 3245],[9037 2638 8614 7636 4750 4932 9216 8787]\nmy_func([1000]) == [1000],[]\nmy_func([786 2638]) == [786],[2638]\nmy_func([9011 544]) == [9011],[544]\nmy_func([10]) == [10],[]\nmy_func([5287 4177 4973 6931 1214 7682]) == [5287 4177 4973],[6931 1214 7682]\nmy_func([4870 151 4275]) == [4870],[151 4275]\nmy_func([8810 5424 147 4052 3204 9880 5242 3127 989 4537 5153 5689 6070 9431 8711]) == [8810 5424 147 4052 3204 9880 5242 3127],[989 4537 5153 5689 6070 9431 8711]\nmy_func([2968 1099 390]) == [2968],[1099 390]\nmy_func([10000]) == [10000],[]\nmy_func([9176 5238]) == [9176],[5238]\nmy_func([7943 8287 3341 8253 6804]) == [7943 8287],[3341 8253 6804]\nmy_func([6499 8544 6786 3471 3737]) == [6499 8544],[6786 3471 3737]\nmy_func([3299 3536 4002]) == [3299 3536],[4002]\nmy_func([1805 2131 4360 6058 2344 5329 458 8022]) == [1805 2131 4360 6058],[2344 5329 458 8022]\nmy_func([0 40]) == [0],[40]\nmy_func([1928 5669 2165 2299 7785]) == [1928 5669 2165],[2299 7785]\nmy_func([349 7665]) == [349],[7665]\nmy_func([1463 4681 6848 4430 1414 4877 8528 8836 8968 5069 2146 1275 9115 7458]) == [1463 4681 6848 4430 1414 4877 8528 8836],[8968 5069 2146 1275 9115 7458]\n.\"\"\"```", "response": "```python\ndef my_func(input1):\n    length = len(input1)\n    split_index = length // 2 + length % 2\n    return input1[:split_index], input1[split_index:]\n```"}
